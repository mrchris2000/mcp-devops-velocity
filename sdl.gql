type Query {
  """

  """
  issuesForRelease(releaseId: ID!, offset: Int!, limit: Int!): [Issue]

  """

  """
  teamsForCurrentUser: [Team]

  """

  """
  csvUploadReportById(_id: String!): UploadReport

  """

  """
  releaseEvents(
    first: Int
    after: cursorInput
    sort: releaseSortInput
  ): ReleaseEventsConnection

  """

  """
  deploymentTemplates: [Deployment]

  """

  """
  scheduledDeployments(pipelineId: String!): [PipelineScheduledDeployment]

  """

  """
  getSyncRegistrationForOrg(orgId: ID!): [SyncRegistration]

  """

  """
  events(
    first: Int
    releasesAfter: cursorInput
    deploymentsAfter: cursorInput
    sort: eventSortInput
  ): EventsConnection

  """

  """
  releaseEventById(_id: ID!): ReleaseEvent

  """

  """
  releaseEventsSearch(
    tags: [ID]
    dateRange: dateRangeInput
    names: [String]
    teamIds: [String]
    first: Int
    after: cursorInput
    sort: releaseSortInput
    status: ReleaseStatus
    state: ReleaseState
    statuses: [ReleaseStatus]
  ): ReleaseEventsConnection

  """

  """
  releasesAndEventsSearch(
    tags: [ID]
    dateRange: dateRangeInput
    names: [String]
    isEvent: Boolean
    teamIds: [String]
    first: Int
    after: cursorInput
    sort: releaseSortInput
    statuses: [ReleaseStatus]
    state: ReleaseState
    dateOffset: dateOffsetInput
  ): ReleaseEventsConnection

  """

  """
  archiveEventsSearch(
    dateRange: dateRangeInput
    names: [String]
    teamIds: [String]
    tags: [ID]
    first: Int
    releasesAfter: cursorInput
    deploymentsAfter: cursorInput
    sort: eventSortInput
  ): EventsConnection

  """

  """
  calendarReleases(
    orgId: String
    regularTagIds: [String]
    dateRange: dateRangeInput
    names: [String]
    teamIds: [String]
    first: Int
    after: cursorInput
    sort: releaseSortInput
    status: ReleaseStatus
    state: ReleaseState
  ): ReleaseEventsConnection

  """

  """
  deploymentPlans(
    deploymentType: deploymentTypeInput
    releaseId: ID
    names: [String]
    range: dateRangeInput
    limit: Int
    cursor: cursorInput
    sort: deploymentSortInput
    matchAnyDeployment: matchAnyDeploymentInput
  ): DeploymentsConnection

  """

  """
  eventsSearch(
    dateRange: dateRangeInput
    names: [String]
    teamIds: [String]
    releaseTags: [ID]
    first: Int
    releasesAfter: cursorInput
    deploymentsAfter: cursorInput
    sort: eventSortInput
    releaseType: releaseTypeInput
    deploymentType: deploymentTypeInput
    matchAnyDeployment: matchAnyDeploymentInput
  ): EventsConnection

  """

  """
  planTags: [String]

  """

  """
  releaseTags(types: [ReleaseTagType], states: [ReleaseTagState]): [ReleaseTag]

  """

  """
  releaseTagById(_id: ID!): ReleaseTag

  """

  """
  scheduledDeploymentsByRelease(releaseEventId: ID): [Deployment]

  """

  """
  hasActivity: Boolean

  """

  """
  manualAndApprovalTasks: [Task]

  """

  """
  serviceNowTaskDetailsByReleaseEventId(
    releaseEventId: ID!
  ): [ServiceNowTaskDetail]

  """

  """
  inProgressTasksByReleaseEventId(releaseEventId: ID!): [Task]

  """

  """
  approvalTasksByReleaseEventId(releaseEventId: ID!): [Task]

  """

  """
  runAnotherPlanTasksByReleaseEventId(releaseEventId: ID!): [Task]

  """

  """
  getDeployPlanAppsForTenant(tenantId: ID!): [DeployPlanApplication]

  """

  """
  productVersion: String

  """

  """
  productBrand: Brand

  """

  """
  productBuild: String

  """

  """
  homePageRecents(userId: ID!): HomePageRecents

  """

  """
  appResourceProviders(tenantId: ID!, appId: ID!): AppResourceProviders

  """

  """
  smtpSettings(tenantId: ID!): SmtpSettings

  """

  """
  agentsByTenantId(tenantId: ID!): [AgentData]

  """

  """
  applicationById(
    id: ID!
    tenantId: ID!
    loadChildren: Boolean
  ): ApplicationChildrenData

  """

  """
  applicationByExternalId(externalId: ID!, tenantId: ID!): ApplicationData

  """

  """
  applicationsByIntegrationId(integrationId: String!): [ApplicationData]

  """

  """
  applicationEnvironmentsByTenantId(tenantId: ID!): [EnvironmentData]

  """

  """
  availableApplicationTypes(tenantId: ID!): [String]

  """

  """
  uniqueApplicationEnvironmentNamesByTenantId(
    tenantId: ID!
  ): [EnvironmentNameOut]

  """

  """
  applicationsByCriteria(data: AppCriteriaIn!): AppCriteriaOut

  """

  """
  statusesByCriteria(data: StatusCriteriaIn!): StatusCriteriaOut

  """

  """
  environmentsByIds(envIds: [ID!]!): [EnvironmentData]

  """

  """
  environmentsByProcessId(
    externalProcessId: ID!
    tenantId: ID!
  ): [EnvironmentDataWithoutAppData]

  """

  """
  securityUser(id: ID!): SecurityUser

  """

  """
  securityUserByEmail(email: String!): SecurityUser

  """

  """
  actions(filter: FilterActionsInput): ActionsConnection

  """

  """
  groups(tenantId: ID!, groupIds: [ID]): [Group]

  """

  """
  groupsByUserId(userId: String!): [Group]

  """

  """
  teamlessGroups(tenantId: ID!): [Group]

  """

  """
  teamsByUser(userId: ID!): [SecurityTeam]

  """

  """
  teamsByResourceId(tenantId: ID!, resourceId: String!): [SecurityTeam]

  """

  """
  teamsByTenantId(tenantId: ID!, roleIds: [String]): [SecurityTeam]

  """

  """
  teamById(teamId: ID!): SecurityTeam

  """

  """
  allUsers(limit: Int = 25, skip: Int = 0): [SecurityUser!]

  """

  """
  userCount: Int!

  """

  """
  localUsers: [SecurityUser]

  """

  """
  usersByTenant(tenantId: ID!): [SecurityUser]

  """

  """
  localUsersByTenant(tenantId: ID!): [SecurityUser]

  """

  """
  authProvidersByTenantId(tenantId: ID!): [SecurityAuthProvider]

  """

  """
  ssoLogoutUrl(tenantId: ID!): String!

  """

  """
  oidcLoginUrl: AuthorizationUrl

  """

  """
  accountSettings(tenantId: ID!): [AccountSetting]

  """

  """
  enabledFeatureFlags: [EnabledFeatureFlag]

  """

  """
  teamResources(tenantId: ID!, userId: String): [TeamResource]

  """

  """
  myAccessKeyMetaData: [UserAccessKeyMetaData]

  """

  """
  usersAccessKeyMetaData(tenantId: ID!): [UserAccessKeyMetaData]

  """

  """
  externalUserToken(userEmail: String!, integrationId: ID!): String

  """

  """
  resources(filter: FilterResourcesInput): ResourcesConnection

  """

  """
  permissions(filter: FilterPermissionsInput): PermissionsConnection

  """

  """
  securityRoles(filter: FilterRolesInput): SecurityRolesConnection

  """

  """
  hasPermissions(
    userId: ID!
    tenantId: ID!
    scopedPermissions: [ScopedPermission!]!
  ): Boolean

  """

  """
  userRoles(tenantId: ID!, userId: ID): [AnyRole!]

  """

  """
  userActions(tenantId: ID!, userId: ID): JSON

  """

  """
  sessionById(sessionId: ID!): Session

  """

  """
  sessionTimeout(tenantId: ID!): Int!

  """

  """
  pluginIndexProxy(tenantId: ID!): String

  """

  """
  peakUsage(tenantId: ID!): Int

  """

  """
  licenseCount: LicenseSummary

  """

  """
  licenseServerConfig: LicenseServerConfig

  """

  """
  getTrialInfo: TrialInfo

  """

  """
  serverEdition: ServerEdition

  """

  """
  activeUserCount: Int

  """

  """
  gracePeriodExpiration: Date

  """

  """
  securityApiPlatformPath: String

  """

  """
  pipelinesByTenantId(tenantId: ID!): [Pipeline]

  """

  """
  pipelinesByAppId(appId: ID!): [Pipeline]

  """

  """
  pipelineById(pipelineId: ID!, accessUserName: String): Pipeline

  """

  """
  uniqueStageNames(pipelineIds: [ID!], tenantId: ID!): [stageNameOptions]

  """

  """
  uniqueAppNames(pipelineIds: [ID!], tenantId: ID!): [String]

  """

  """
  pipelineSecurityById(pipelineId: ID!): PipelineSecurity

  """

  """
  applicationsByType(
    type: String!
    pipelineId: ID
    tenantId: ID
    toolchainId: ID
  ): [PipelineExternalApplication]

  """

  """
  applicationEnvironments(
    pipelineId: ID!
    applications: [ApplicationInput]!
    type: String!
    tenantId: ID
    limit: Int
  ): [UCD_Environment]

  """

  """
  applicationVersions(
    applicationId: String!
    type: String!
    limit: Int
  ): [Version]

  """

  """
  processes(
    pipelineId: ID!
    type: String!
    processId: ID
    pluginType: String
  ): [Process]

  """

  """
  processesForApps(
    type: String!
    pipelineId: ID!
    applications: [ApplicationInput]!
    tenantId: ID
  ): [Process]

  """

  """
  previewVersions(pipelineId: ID!, stageId: ID!): [ManifestVersion]

  """

  """
  stageVersions(pipelineId: ID!, stageId: ID!): [AppVersions]

  """

  """
  pipelineAppVersions(pipelineId: ID!, stageId: ID!): [AppVersions]

  """

  """
  latestDeployedVersion(pipelineId: ID!, stageId: ID!): [InventoryVersions]

  """

  """
  planTasks(planId: ID!): [PlanTask]

  """

  """
  stageStatus(
    applicationId: String!
    stageId: String!
    type: String!
    envId: String
    inputJobId: String
    pipelineId: String
  ): PipelineApplicationStageStatus

  """

  """
  stageStatuses(pipelineId: String): [PipelineApplicationStageStatuses]

  """

  """
  inputStageStatus(
    applicationId: String!
    stageId: String
    type: String!
  ): PipelineApplicationStageStatus

  """

  """
  stageDetails(
    applicationId: String!
    stageId: String!
    type: String!
  ): PipelineApplicationStageDetails

  """

  """
  jenkinsStageDetails(
    applicationId: String!
    stageId: String!
    type: String!
    envId: String
  ): JenkinsStageDetails

  """

  """
  inputStageDetails(
    applicationId: String!
    stageId: String
    type: String!
  ): PipelineLatestApplicationStageDetails

  """

  """
  allDeployments(parentPlanId: ID!): [PipelineScheduledDeployment]

  """

  """
  hasSecurityTeam(tenantId: ID!): Boolean

  """

  """
  getTeamsForUser(tenantId: String, userId: String): [Team]

  """

  """
  recentPipelinePlans(pipelineId: String!): RecentDeploymentInfo

  """

  """
  pipelineAppsByExternalProcessId(
    externalProcessId: ID!
    tenantId: ID!
    applicationId: String
  ): [PipelineApplication]

  """

  """
  hybridPipelinesByAppId(tenantId: ID!, appId: ID!): [Pipeline]

  """

  """
  lastPluginUpgradeCheck: Date

  """

  """
  integrationById(id: ID!): Integration

  """

  """
  integrationsByIds(ids: [ID!]!): [Integration]

  """

  """
  integrationsByType(type: String!): [Integration]

  """

  """
  integrationsByCategory(category: String!, tenantId: ID!): [Integration]

  """

  """
  integrationByName(name: String!, tenantId: ID!): Integration

  """

  """
  integrationsByTenantId(tenantId: ID!): [Integration]

  """

  """
  integrationsByActiveState(
    tenantId: ID!
    activeState: IntegrationActiveState
  ): [Integration]

  """

  """
  integrationExecutionById(_id: ID!): IntegrationExecution

  """

  """
  plugins(configurable: Boolean): [Plugin]!

  """

  """
  availablePlugins: [AvailablePlugin]!

  """

  """
  latestPluginByPluginId(pluginId: String!): Plugin

  """

  """
  pluginAutomationTasks(
    tenantId: ID!
    pluginInternalId: ID
  ): [PluginAutomationTask]

  """

  """
  reportsByTeamId(teamId: ID!, tenantId: ID!): [Report]

  """

  """
  reportExecutionsByReportId(
    reportId: ID!
    teamId: ID!
    tenantId: ID!
    properties: JSON
  ): [ReportExecution]

  """

  """
  reportExecutionById(executionId: ID!): ReportExecutionContent

  """

  """
  tags(tenantId: ID!): [String]

  """

  """
  appsByCriteria(criteria: AppCriteria!): [ApplicationOut]

  """

  """
  procsByCriteria(criteria: ProcCriteria!): [ProcessOut]

  """

  """
  getIssueTracker(trackerId: ID!): IssueTracker

  """

  """
  issueTrackersByTenantId(tenantId: ID!): [IssueTracker]

  """

  """
  jiraProjectsByTrackerId(issueTrackerId: ID!): [JiraProject]

  """

  """
  jiraFieldsByTrackerId(issueTrackerId: ID!): [FieldDefinition]

  """

  """
  jiraVersionsByProjectId(issueTrackerId: ID!, projectId: ID!): [JiraVersion]

  """

  """
  deployChart(query: DeployChartQuery): [InsightsChartData]

  """

  """
  deployments(query: DeploymentQuery): DeployQueryResponse

  """

  """
  deploymentsCSV(query: DeploymentQuery): String!

  """

  """
  pullRequests(filter: PullRequestFilterIn): [PullRequestData]

  """

  """
  pullRequestStatuses(tenantId: ID!, integrationId: ID): [String]!

  """

  """
  commitIdByCommitSHA(commitSHA: String!, integrationId: String!): String

  """

  """
  appsFromFilters(
    tenantId: ID
    selectedTeams: [String]
    selectedTags: [String]
    selectedVSMs: [String]
  ): [InsightsApplication]

  """

  """
  filtersForMetricDefinition(
    tenantId: ID!
    metricDefinition: String!
    filterIds: [String!]
  ): [MetricDefinitionFilter]

  """

  """
  getVSMReleasesByTenantAndProject(
    tenantId: ID!
    projectId: String!
  ): [VSMReleasesDocument]

  """

  """
  workflowsForTenant(tenantId: ID!): [Workflow]

  """

  """
  workflow(workflowId: ID!, version: Int): Workflow

  """

  """
  workflowIdByPipelineId(pipelineId: ID!): ID

  """

  """
  particlesByStage(
    workflowId: ID!
    stageName: String!
    particleIds: [ID]
    pagination: InsightsPaginationInput
  ): [Particle]

  """

  """
  particlesByStageCount(
    workflowId: ID!
    stageName: String!
    particleIds: [ID]
  ): Int!

  """

  """
  particlesByIssueId(tenantId: ID!, issueId: String!): [ParticleStagePosition]

  """

  """
  particleById(
    workflowId: ID!
    particleId: ID!
    stageName: String
    includeTopLevelQuery: Boolean
  ): Particle

  """

  """
  particlesMatchingQuery(
    query: String
    pipelineId: ID!
    includeTopLevelQuery: Boolean!
    text: String
  ): [String]

  """

  """
  particleHistory(workflowId: ID!, particleId: ID!): [HistoryEvent]

  """

  """
  stageChangeEvents(workflowId: ID!, particleId: ID!): [StageChangeEvent]

  """

  """
  stageChangeEventsSince(
    tenantId: ID!
    workflowId: ID!
    stage: String
    type: PARTICLE_TYPE
    since: Date!
    limit: Int! = 10
    cursor: String
  ): StageChangeEventQueryResponse

  """

  """
  workflowGates(query: WorkflowGatesRequest): JSON

  """

  """
  latestWorkflowGateChecks(query: LatestWorkflowGatesQuery): [LatestGateCheck]

  """

  """
  workflowStats(tenantId: ID!): [WorkflowStats]

  """

  """
  pipelineWithMetrics(tenantId: ID!, pipelineId: ID!): PipelineWithMetrics

  """

  """
  pipelinesWithMetrics(
    tenantId: ID!
    aggregationOptions: AggregationOptions
    userIdForFavorites: ID
  ): PipelinesWithMetricsRes!

  """

  """
  workflowStatsById(workflowId: ID!): WorkflowStats

  """

  """
  metricsBarByWorkflowId(workflowId: ID!): [ChartableMetric]

  """

  """
  recentlyRunQueries(count: Int, workflowId: ID!): [String]

  """

  """
  workflowInternalIds(workflowId: ID!): JSON

  """

  """
  workflowStageLayouts(workflowId: ID!): [StageLayout!]!

  """

  """
  workItemsDataSet(
    valueStreamId: ID!
    modifiedSince: Date
    pagination: InsightsPaginationInput
    historyFields: String
  ): [WorkItemsDataSetOutput]

  """

  """
  activeSprintWorkItemsDataSet(
    valueStreamId: ID!
    sprintId: ID!
    pagination: InsightsPaginationInput
    historyFields: String
  ): [WorkItemsDataSetOutput]

  """

  """
  issuesForProjectKey(
    tenantId: ID!
    projectKey: String!
    limit: Int! = 10
    cursor: String
  ): IssueDataQueryResponse

  """

  """
  issueStatuses(tenantId: ID!, integrationIds: [ID]): [String]!

  """

  """
  issue(tenantId: ID!, issueId: ID!): IssueData

  """

  """
  issues(filter: IssuesFilter): [IssueData]

  """

  """
  incidentChart(query: IncidentChartQuery): [InsightsChartData]

  """

  """
  incidentsForChartTable(query: IncidentTableQuery): IncidentTableQueryResponse

  """

  """
  incidentsCSV(query: IncidentTableQuery): String!

  """

  """
  getReleaseReadinessDetails(
    vsmId: ID!
    releaseId: ID!
    currentStageName: String
    targetStageName: String
    allVersions: Boolean = false
  ): [issueDataForReleaseReadiness]

  """

  """
  builds(query: BuildTableQuery): BuildDataQueryResponse

  """

  """
  buildsCSV(query: BuildTableQuery): String!

  """

  """
  buildChart(query: BuildChartQuery): [InsightsChartData]

  """

  """
  compositeExists(appId: String!, versions: [BasicVersionsIn!]!): VersionData

  """

  """
  latestVersion(appId: String!, type: String): VersionData

  """

  """
  versions(appId: String!, limit: Int = 10, type: String): [VersionData]

  """

  """
  version(versionId: ID!): VersionData

  """

  """
  versionByExternalId(
    externalId: String!
    tenantId: String!
    appId: ID
  ): VersionData

  """

  """
  hybridVersions(
    parentAppId: String!
    tenantId: String!
    appId: String!
  ): [VersionData]

  """

  """
  latestInventory(
    appId: String
    environmentId: String
    status: String
    envName: String
    type: String
  ): InventoryData

  """

  """
  inventories(
    appId: String
    environmentId: String
    status: String
  ): [InventoryData]

  """

  """
  metric(id: String!): MetricsOut

  """

  """
  metricDefinitions(query: MetricDefinitionsQuery!): [MetricDefinition]!

  """

  """
  metricsChart(query: MetricsChartQuery): [InsightsChartData]

  """

  """
  metrics(query: MetricsChartQuery): MetricsQueryResponse

  """

  """
  metricsCSV(query: MetricsChartQuery): String!

  """

  """
  metricDefinition(query: MetricDefinitionQuery!): MetricDefinition

  """

  """
  reportArtifact(query: ReportArtifactQuery): ReportArtifact

  """

  """
  reportArtifacts(query: ReportArtifactsQuery!): [ReportArtifact]!

  """

  """
  dashboard(query: DashboardQuery!): Dashboard

  """

  """
  dashboards(query: DashboardsQuery!): [Dashboard]!

  """

  """
  chartableById(
    chartableId: ID!
    tenantId: ID!
    filters: ChartableFiltersIn
    variables: [ChartableVariablesIn]
  ): ChartableInstance

  """

  """
  pipelineGates(pipelineId: ID!): [PipelineGate]

  """

  """
  hasPipelineGate(pipelineId: ID!, stageId: ID!): Boolean

  """

  """
  existingRules(pipelineId: ID!): [Rule!]!

  """

  """
  latestRuleExecutions(
    pipelineId: ID!
    stageId: ID
    applicationIds: [ID!]
    versionIds: [ID!]
  ): [RuleExecution!]!

  """

  """
  applicationVersionsWithPassedRules(
    pipelineId: ID!
    stageId: ID
    applicationIds: [ID!]
    versionIds: [ID!]
  ): [ApplicationVersion!]!

  """

  """
  hasManualOverride(
    pipelineId: ID!
    stageId: ID!
    applicationVersions: [ApplicationVersionIn!]!
  ): Boolean

  """

  """
  executions: String

  """

  """
  vsmVersions(workflowId: ID!, skip: Int, limit: Int): VSMVersionResponse!

  """

  """
  dummy: String

  """

  """
  feature(id: ID!, tenantId: ID!): Feature

  """

  """
  features(tenantId: ID!): [Feature!]!

  """

  """
  extConfigFiles(tenantId: String!, fileId: String): [ExtConfigFileOutput!]

  """

  """
  extConfigFileContent(fileId: ID!, versionId: String!, tenantId: String!): JSON

  """

  """
  extConfigFileLog(
    fileId: ID!
    executionId: String!
    tenantId: String!
  ): String!

  """

  """
  getSolutionVersionById(id: ID!): SolutionVersionDataOut

  """

  """
  getSolutionVersionsByIds(ids: [ID!]!): [SolutionVersionDataOut]

  """

  """
  getSolutionVersionsByPipeline(
    pipelineId: ID!
    stageId: ID
  ): [SolutionVersionDataOut]

  """

  """
  getAllSolutionVersions: [SolutionVersionDataOut]
}

"""

"""
type Issue {
  """

  """
  _id: ID!

  """

  """
  id: String

  """

  """
  name: String!

  """

  """
  owner: String

  """

  """
  creator: String

  """

  """
  status: String!

  """

  """
  priority: String

  """

  """
  type: String!

  """

  """
  components: [String]

  """

  """
  lastUpdate: Date

  """

  """
  url: String

  """

  """
  description: String

  """

  """
  created: Date

  """

  """
  labels: [String]

  """

  """
  releases: [IssueRelease]

  """

  """
  sprints: [IssueSprint!]

  """

  """
  resolved: Date

  """

  """
  storyPoints: Int

  """

  """
  severity: IssueSeverity

  """

  """
  impact: IssueImpact

  """

  """
  resolution: String

  """

  """
  businessValue: Int

  """

  """
  additionalInfo: JSON
}

"""

"""
scalar Date

"""

"""
type IssueRelease {
  """

  """
  _id: ID!

  """

  """
  id: String

  """

  """
  description: String

  """

  """
  name: String

  """

  """
  archived: Boolean

  """

  """
  released: Boolean

  """

  """
  releaseDate: Date
}

"""

"""
type IssueSprint {
  """

  """
  _id: ID!

  """

  """
  id: String!

  """

  """
  name: String!

  """

  """
  previous: String

  """

  """
  description: String

  """

  """
  startTime: Date

  """

  """
  endTime: Date

  """

  """
  completeTime: Date

  """

  """
  url: String

  """

  """
  active: Boolean
}

"""

"""
enum IssueSeverity {
  """

  """
  SEV1

  """

  """
  SEV2

  """

  """
  SEV3

  """

  """
  SEV4

  """

  """
  SEV5
}

"""

"""
enum IssueImpact {
  """

  """
  IMPACT1

  """

  """
  IMPACT2

  """

  """
  IMPACT3

  """

  """
  IMPACT4

  """

  """
  IMPACT5
}

"""
*********************************************************************
 Licensed Materials - Property of IBM and HCL
 (c) Copyright HCL Technologies Ltd. 2023. All Rights Reserved.
**********************************************************************
"""
scalar JSON

"""

"""
type Team {
  """

  """
  id: String!

  """

  """
  name: String!

  """

  """
  tenantId: String
}

"""

"""
type UploadReport {
  """

  """
  _id: String!

  """

  """
  errors: [CsvRowError]

  """

  """
  orgId: String!

  """

  """
  uploadTime: Date!

  """

  """
  fileName: String!

  """

  """
  fileContent: String

  """

  """
  loadStatus: String
}

"""

"""
type CsvRowError {
  """

  """
  errorType: String!

  """

  """
  errorData: [RowErrorData]

  """

  """
  fieldName: [String]

  """

  """
  message: String
}

"""

"""
type RowErrorData {
  """

  """
  id: String!

  """

  """
  value: String
}

"""

"""
input cursorInput {
  """

  """
  key: String!

  """

  """
  id: String
}

"""

"""
input releaseSortInput {
  """

  """
  field: ReleaseSortField!

  """

  """
  order: SortOrder
}

"""

"""
enum ReleaseSortField {
  """

  """
  _id

  """

  """
  name

  """

  """
  start
}

"""

"""
enum SortOrder {
  """

  """
  asc

  """

  """
  desc
}

"""

"""
type ReleaseEventsConnection {
  """

  """
  nodes: [ReleaseEvent]!

  """

  """
  pageInfo: ReleasesCursor!
}

"""

"""
type ReleaseEvent {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  team: Team!

  """

  """
  start: Date!

  """

  """
  end: Date!

  """

  """
  status: ReleaseStatus!

  """

  """
  state: ReleaseState!

  """

  """
  description: String

  """

  """
  tags: [ReleaseTag]

  """

  """
  planStats(isSummary: Boolean): ReleasePlanStats

  """

  """
  createdDateTime: Date

  """

  """
  modifiedDateTime: Date

  """

  """
  username: String

  """

  """
  archivedBy: String

  """

  """
  archivedDate: Date

  """

  """
  isEvent: Boolean

  """

  """
  archivedPlans: [DeploymentPlan]

  """

  """
  issueTracker: ReleaseIssueTracker

  """

  """
  issueCount: Int

  """

  """
  issues: [Issue]

  """

  """
  showFirstPlanEditMsg: Boolean

  """

  """
  scheduledBy: User

  """

  """
  pipelineId: String

  """

  """
  pipelineName: String

  """

  """
  releaseLock: Boolean

  """

  """
  summary: String

  """

  """
  lastSummaryOn: Date
}

"""

"""
enum ReleaseStatus {
  """

  """
  DONE

  """

  """
  IN_PROGRESS

  """

  """
  SCHEDULED

  """

  """
  FAILED
}

"""

"""
enum ReleaseState {
  """

  """
  ARCHIVED

  """

  """
  DEFAULT
}

"""

"""
interface ReleaseTag {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  state: ReleaseTagState!

  """

  """
  orgId: String!
}

"""

"""
enum ReleaseTagState {
  """

  """
  ARCHIVED

  """

  """
  DEFAULT
}

"""

"""
type ReleasePlanStats {
  """

  """
  plans: [CondensedDeploymentPlan]

  """

  """
  planCount: Int

  """

  """
  appCount: Int

  """

  """
  teamCount: Int

  """

  """
  taskCount: Int

  """

  """
  completedTaskCount: Int

  """

  """
  inProgressTaskCount: Int

  """

  """
  skippedTaskCount: Int

  """

  """
  successTaskCount: Int

  """

  """
  notStartedTaskCount: Int

  """

  """
  approvalTaskCount: Int

  """

  """
  pendingApprovalTaskCount: Int

  """

  """
  serviceNowSysIdCount: Int

  """

  """
  waitForServiceNowTaskCount: Int

  """

  """
  approverCount: Int

  """

  """
  approverApprovedCount: Int

  """

  """
  approverRejectedCount: Int

  """

  """
  failedTaskCount: Int

  """

  """
  unclaimedTaskCount: Int

  """

  """
  lateTaskCount: Int

  """

  """
  runOverTimeTaskCount: Int

  """

  """
  slowStartTaskCount: Int
}

"""

"""
type CondensedDeploymentPlan {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  status: String

  """

  """
  scheduledDate: Date

  """

  """
  estimatedEndTime: Date

  """

  """
  start: Date

  """

  """
  end: Date
}

"""

"""
type DeploymentPlan {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  status: DeploymentStatus!

  """

  """
  start: Date

  """

  """
  end: Date

  """

  """
  description: String

  """

  """
  statusTags: [DeploymentTag]

  """

  """
  releaseEventId: String

  """

  """
  teamId: String

  """

  """
  teamLabel: String

  """

  """
  appCount: Int

  """

  """
  lastModified: Date

  """

  """
  created: Date

  """

  """
  properties: [Property]

  """

  """
  archivedBy: String

  """

  """
  archivedDate: Date

  """

  """
  scheduledDate: Date

  """

  """
  userTags: [String]

  """

  """
  pipelineId: String

  """

  """
  pipelineName: String

  """

  """
  parentPlanId: String
}

"""

"""
enum DeploymentStatus {
  """

  """
  DONE

  """

  """
  DRAFT

  """

  """
  IN_PROGRESS

  """

  """
  SCHEDULED

  """

  """
  FAILED
}

"""

"""
enum DeploymentTag {
  """

  """
  ARCHIVED

  """

  """
  TEMPLATE
}

"""

"""
type Property {
  """

  """
  name: String!

  """

  """
  type: PropertyType!

  """

  """
  label: String

  """

  """
  defaultValue: String

  """

  """
  value: String

  """

  """
  possibleValues: [String]

  """

  """
  promptOnCreate: Boolean!
}

"""

"""
enum PropertyType {
  """

  """
  TEXT

  """

  """
  TEXTAREA

  """

  """
  PASSWORD

  """

  """
  SELECT

  """

  """
  BOOLEAN

  """

  """
  DATE_TIME
}

"""

"""
type ReleaseIssueTracker {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  mapping: [[releaseIssueMapping]]

  """

  """
  versionId: String

  """

  """
  projectId: String
}

"""

"""
type releaseIssueMapping {
  """

  """
  projectId: String!

  """

  """
  field: String!

  """

  """
  value: String!
}

"""

"""
type User {
  """

  """
  name: String

  """

  """
  email: String
}

"""

"""
type ReleasesCursor {
  """

  """
  endCursor: Cursor!
}

"""

"""
type Cursor {
  """

  """
  key: String!

  """

  """
  id: String
}

"""

"""
union Deployment = DeploymentPlan | Error

"""

"""
type Error {
  """

  """
  class: Class

  """

  """
  statusCode: Int

  """

  """
  message: String
}

"""

"""
enum Class {
  """

  """
  RELEASE_EVENT

  """

  """
  RELEASE_EVENT_TAG

  """

  """
  DEPLOYMENT_PLAN
}

"""

"""
type PipelineScheduledDeployment {
  """

  """
  id: ID!

  """

  """
  status: String!

  """

  """
  percent: Int

  """

  """
  scheduledTime: Float

  """

  """
  lastModified: Float

  """

  """
  parentPlanId: String
}

"""

"""
type SyncRegistration {
  """

  """
  syncToken: String

  """

  """
  syncId: String

  """

  """
  devopsConnect: DevopsConnect

  """

  """
  type: String

  """

  """
  instanceName: String

  """

  """
  orgId: String

  """

  """
  status: SyncStatus
}

"""

"""
type DevopsConnect {
  """

  """
  fileName: String

  """

  """
  uri: String

  """

  """
  command: String
}

"""

"""
enum SyncStatus {
  """

  """
  CONNECTED

  """

  """
  DISCONNECTED

  """

  """
  NOTACTIVATED
}

"""

"""
input eventSortInput {
  """

  """
  field: EventSortField!

  """

  """
  order: SortOrder
}

"""

"""
enum EventSortField {
  """

  """
  _id

  """

  """
  name

  """

  """
  start

  """

  """
  created

  """

  """
  lastModified

  """

  """
  archivedBy

  """

  """
  archivedDate
}

"""

"""
type EventsConnection {
  """

  """
  nodes: [Event]!

  """

  """
  pageInfo: EventsCursor!
}

"""

"""
union Event = ReleaseEvent | DeploymentPlan | Error

"""

"""
type EventsCursor {
  """

  """
  releasesCursor: Cursor!

  """

  """
  deploymentsCursor: Cursor!
}

"""

"""
input dateRangeInput {
  """

  """
  start: Date!

  """

  """
  end: Date!
}

"""

"""
input dateOffsetInput {
  """

  """
  prev: Int

  """

  """
  next: Int
}

"""

"""
input deploymentTypeInput {
  """

  """
  status: [DeploymentStatus]

  """

  """
  tag: DeploymentTag
}

"""

"""
input deploymentSortInput {
  """

  """
  field: DeploymentSortField!

  """

  """
  order: SortOrder
}

"""

"""
enum DeploymentSortField {
  """

  """
  _id

  """

  """
  name

  """

  """
  start

  """

  """
  teamLabel
}

"""

"""
input matchAnyDeploymentInput {
  """

  """
  fields: [MatchAnyDeploymentFields]!

  """

  """
  value: String!
}

"""

"""
enum MatchAnyDeploymentFields {
  """

  """
  name

  """

  """
  teamLabel
}

"""

"""
type DeploymentsConnection {
  """

  """
  nodes: [Deployment]!

  """

  """
  cursor: Cursor!
}

"""

"""
input releaseTypeInput {
  """

  """
  status: ReleaseStatus

  """

  """
  state: ReleaseState
}

"""

"""
enum ReleaseTagType {
  """

  """
  REGULAR

  """

  """
  CALENDAR
}

"""

"""
type Task {
  """

  """
  planId: String!

  """

  """
  planName: String!

  """

  """
  teamId: String!

  """

  """
  _id: Int!

  """

  """
  name: String

  """

  """
  type: TaskType!

  """

  """
  description: String

  """

  """
  groupsAndUsers: [GroupAndUser]

  """

  """
  groupsUserInfo: [GroupUserInfo]

  """

  """
  owner: GroupAndUser

  """

  """
  startTime: Date

  """

  """
  endTime: Date

  """

  """
  canStart: Boolean

  """

  """
  canSkip: Boolean

  """

  """
  canFail: Boolean

  """

  """
  canComplete: Boolean

  """

  """
  canReopen: Boolean

  """

  """
  duration: String

  """

  """
  taskPrerequisites: [Int]

  """

  """
  taskDependents: [Int]

  """

  """
  executionDetails: TaskExecutionDetail

  """

  """
  approvers: [GroupAndUser]

  """

  """
  approverGroupsUserInfo: [GroupUserInfo]

  """

  """
  releaseEventInfo: ReleaseEventInfo

  """

  """
  runAnotherPlanTagName: String
}

"""

"""
enum TaskType {
  """

  """
  Manual

  """

  """
  UCD

  """

  """
  Delayed

  """

  """
  Note

  """

  """
  Slack

  """

  """
  Email

  """

  """
  Pipeline_v2

  """

  """
  Run_Another_Plan

  """

  """
  Approval

  """

  """
  ServiceNow

  """

  """
  Jenkins

  """

  """
  Dynamic
}

"""

"""
type GroupAndUser {
  """

  """
  label: String

  """

  """
  value: String!

  """

  """
  isGroup: Boolean

  """

  """
  tenantId: String
}

"""

"""
type GroupUserInfo {
  """

  """
  groupId: String!

  """

  """
  users: [GroupAndUser]
}

"""

"""
type TaskExecutionDetail {
  """

  """
  user: String

  """

  """
  status: TaskStatus!

  """

  """
  history: [TaskExecutionHistory]
}

"""

"""
enum TaskStatus {
  """

  """
  NOT_STARTED

  """

  """
  NOT_APPLICABLE

  """

  """
  IN_PROGRESS

  """

  """
  FAIL

  """

  """
  SKIPPED

  """

  """
  COMPLETE

  """

  """
  REOPENED
}

"""

"""
type TaskExecutionHistory {
  """

  """
  user: String

  """

  """
  logTime: Date

  """

  """
  action: TaskHistoryAction

  """

  """
  status: TaskStatus
}

"""

"""
enum TaskHistoryAction {
  """

  """
  Started

  """

  """
  Failed

  """

  """
  Skipped

  """

  """
  Completed

  """

  """
  Reopened

  """

  """
  Approved

  """

  """
  Rejected
}

"""

"""
type ReleaseEventInfo {
  """

  """
  _id: String!

  """

  """
  name: String
}

"""

"""
type ServiceNowTaskDetail {
  """

  """
  sys_id: ID!

  """

  """
  number: String

  """

  """
  short_description: String

  """

  """
  type: String

  """

  """
  typeLabel: String

  """

  """
  state: Int

  """

  """
  stateLabel: String

  """

  """
  serviceNowInstance: String

  """

  """
  serviceNowTable: String
}

"""

"""
type DeployPlanApplication {
  """

  """
  _id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  external_id: ID

  """

  """
  name: String!

  """

  """
  active: Boolean

  """

  """
  type: String

  """

  """
  integration_id: String
}

"""

"""
enum Brand {
  """

  """
  IBM

  """

  """
  HCL
}

"""

"""
type HomePageRecents {
  """

  """
  recentPipelineObjs: [JSON]

  """

  """
  recentReleaseObjs: [ReleaseEvent]
}

"""

"""
type AppResourceProviders {
  """

  """
  builds: [AppProcessOut]

  """

  """
  deploys: [AppProcessOut]

  """

  """
  quality: [AppMetricOut]

  """

  """
  security: [AppMetricOut]
}

"""

"""
type AppProcessOut {
  """

  """
  tenant_id: String

  """

  """
  external_id: String

  """

  """
  external_app_id: String

  """

  """
  app_id: String

  """

  """
  name: String!

  """

  """
  type: String

  """

  """
  active: Boolean

  """

  """
  json_data: JSON

  """

  """
  id: String

  """

  """
  _id: String

  """

  """
  version: Date
}

"""

"""
type AppMetricOut {
  """

  """
  metricDefinition: String

  """

  """
  metricDefinitionName: String

  """

  """
  providers: [String]

  """

  """
  count: Int

  """

  """
  latestMetricsOn: Date
}

"""
*********************************************************************
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2018, 2019. All Rights Reserved.

 Note to U.S. Government Users Restricted Rights:
 Use, duplication or disclosure restricted by GSA ADP Schedule
 Contract with IBM Corp.
**********************************************************************
"""
type SmtpSettings {
  """

  """
  server: String!

  """

  """
  port: Int!

  """

  """
  secure: Boolean

  """

  """
  username: String

  """

  """
  password: String

  """

  """
  sendername: String

  """

  """
  address: String
}

"""

"""
type AgentData {
  """

  """
  _id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  external_id: ID!

  """

  """
  name: String!

  """

  """
  active: Boolean!

  """

  """
  licensed: Boolean!

  """

  """
  licenseType: String!

  """

  """
  status: String!

  """

  """
  version: String!

  """

  """
  type: String!

  """

  """
  integration_id: String

  """

  """
  json_data: JSON
}

"""

"""
type ApplicationChildrenData {
  """

  """
  _id: ID!

  """

  """
  id: ID

  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  integration_id: ID

  """

  """
  name: String!

  """

  """
  alphaNumericName: String

  """

  """
  active: Boolean!

  """

  """
  createdAdHoc: Boolean

  """

  """
  json_data: JSON

  """

  """
  type: String!

  """

  """
  version: Date!

  """

  """
  level: APPLICATION_LEVEL

  """

  """
  childrenIds: [ID]

  """

  """
  children: [ApplicationData]
}

"""

"""
enum APPLICATION_LEVEL {
  """

  """
  parent

  """

  """
  child
}

"""

"""
type ApplicationData {
  """

  """
  _id: ID!

  """

  """
  id: ID

  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  integration_id: ID

  """

  """
  name: String!

  """

  """
  alphaNumericName: String

  """

  """
  active: Boolean!

  """

  """
  createdAdHoc: Boolean

  """

  """
  json_data: JSON

  """

  """
  type: String!

  """

  """
  version: Date!

  """

  """
  level: APPLICATION_LEVEL
}

"""

"""
type EnvironmentData {
  """

  """
  _id: ID!

  """

  """
  id: ID

  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  app_id: ID!

  """

  """
  external_app_id: ID

  """

  """
  active: Boolean!

  """

  """
  json_data: JSON!

  """

  """
  type: String!

  """

  """
  version: Date!

  """

  """
  inventory: EnvironmentInventoryData
}

"""

"""
type EnvironmentInventoryData {
  """

  """
  external_version_id: ID!

  """

  """
  components: [ComponentInventoryData]
}

"""

"""
type ComponentInventoryData {
  """

  """
  external_component_id: ID!

  """

  """
  external_component_version_id: ID!
}

"""

"""
type EnvironmentNameOut {
  """

  """
  name: String!
}

"""

"""
input AppCriteriaIn {
  """

  """
  tenantId: ID!

  """

  """
  parentsOnly: Boolean

  """

  """
  types: [String]

  """

  """
  integrationId: String

  """

  """
  name: String

  """

  """
  fuzzyName: Boolean

  """

  """
  since: Int

  """

  """
  tags: [String]

  """

  """
  externalJobIds: [ID]

  """

  """
  externalIds: [ID]

  """

  """
  limit: Int

  """

  """
  offset: Int

  """

  """
  searchByName: String
}

"""

"""
type AppCriteriaOut {
  """

  """
  totalCount: Int

  """

  """
  apps: [ApplicationData]
}

"""

"""
input StatusCriteriaIn {
  """

  """
  tenantId: ID!

  """

  """
  integrationId: String

  """

  """
  name: String

  """

  """
  limit: Int

  """

  """
  type: String
}

"""

"""
type StatusCriteriaOut {
  """

  """
  totalCount: Int

  """

  """
  statuses: [StatusData]
}

"""

"""
type StatusData {
  """

  """
  _id: ID!

  """

  """
  id: ID

  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  integration_id: ID

  """

  """
  sync_id: ID!

  """

  """
  deleted: Boolean

  """

  """
  type: String!

  """

  """
  json_data: JSON

  """

  """
  version: Date!
}

"""

"""
type EnvironmentDataWithoutAppData {
  """

  """
  _id: ID!

  """

  """
  id: ID

  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  active: Boolean!

  """

  """
  json_data: JSON!

  """

  """
  type: String!

  """

  """
  version: Date!

  """

  """
  integration: IntegrationData
}

"""

"""
type IntegrationData {
  """

  """
  _id: ID

  """

  """
  name: String
}

"""

"""
type SecurityUser {
  """

  """
  _id: ID!

  """

  """
  name: String

  """

  """
  email: String

  """

  """
  firstName: String

  """

  """
  lastName: String

  """

  """
  userType: USER_TYPE

  """

  """
  reservedParticipant: Boolean

  """
  All settings the user has defined for the UI
  """
  settings: UserSettings

  """

  """
  securityRoles: [AnyRole!]!

  """

  """
  lockoutUTCTimestamp: Float
}

"""

"""
enum USER_TYPE {
  """

  """
  LOCAL

  """

  """
  LDAP

  """

  """
  SSO

  """

  """
  OIDC
}

"""

"""
type UserSettings {
  """
  All the VSMs a user has favorited in the UI
  """
  favoriteVSMs: [FavoriteVSM!]!

  """
  The last filters a user has enabled on a VSM
  """
  activeVSMFilters: [VSMFilters!]!

  """
  The user's favorited dashboards
  """
  favoriteDashboards: [ID!]!

  """
  The last view mode a user has selected on a VSM
  """
  currentVSMViews: [VSMView!]!

  """
  The user's most recently accessed VSMs
  """
  recentlyAccessedVSMs: [ID!]!

  """
  The user's most recently accessed releases
  """
  recentlyAccessedReleases: [ID!]!

  """
  The user's left-nav setting
  """
  leftNavCollapsed: Boolean
}

"""

"""
type FavoriteVSM {
  """

  """
  workflowId: ID!

  """

  """
  pipelineId: ID!
}

"""

"""
type VSMFilters {
  """

  """
  workflowId: ID!

  """

  """
  priorities: [String!]

  """

  """
  types: [String!]

  """

  """
  sprints: [String!]

  """

  """
  releases: [String!]

  """

  """
  relativeTime: [String!]
}

"""

"""
type VSMView {
  """

  """
  workflowId: ID!

  """

  """
  particleView: VSMViewMode

  """

  """
  swimlaneRowView: SwimlaneRowViewMode

  """

  """
  swimlaneCollapsedPhases: [String!]

  """

  """
  swimlanePinnedRowsByViews: [SwimlanePinnedRowsByView!]

  """

  """
  valueStreamCollapsedPhases: [String!]

  """

  """
  valueStreamCollapsedMetrics: [String!]
}

"""
ENUMS
"""
enum VSMViewMode {
  """

  """
  priority

  """

  """
  type

  """

  """
  release

  """

  """
  sprint
}

"""

"""
enum SwimlaneRowViewMode {
  """

  """
  owner

  """

  """
  type

  """

  """
  priority

  """

  """
  sprints

  """

  """
  releases

  """

  """
  features
}

"""

"""
type SwimlanePinnedRowsByView {
  """

  """
  rowView: SwimlaneRowViewMode

  """

  """
  pinnedRows: [String!]
}

"""

"""
union AnyRole = TeamRole | GlobalRole

"""

"""
type TeamRole {
  """

  """
  teamId: ID!

  """

  """
  role: SecurityRole!

  """

  """
  groupId: ID
}

"""

"""
type SecurityRole {
  """

  """
  _id: ID!

  """

  """
  tenantId: ID!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  scope: SECURITY_SCOPE!

  """

  """
  permissions: [Permission!]!

  """

  """
  defaultRole: Boolean

  """

  """
  created: Date!

  """

  """
  updated: Date!
}

"""

"""
enum SECURITY_SCOPE {
  """

  """
  team

  """

  """
  global
}

"""

"""
type Permission {
  """

  """
  _id: ID!

  """

  """
  tenantId: ID!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  resource: Resource!

  """

  """
  actions: [Action!]!

  """

  """
  created: Date!

  """

  """
  updated: Date!
}

"""

"""
type Resource {
  """

  """
  _id: ID!

  """

  """
  key: String!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  category: RESOURCE_CATEGORY!

  """

  """
  scopes: [SECURITY_SCOPE!]!

  """

  """
  actions: [Action!]!

  """

  """
  created: Date!

  """

  """
  updated: Date!
}

"""

"""
enum RESOURCE_CATEGORY {
  """

  """
  valueStream

  """

  """
  pipeline

  """

  """
  release

  """

  """
  setting

  """

  """
  insight
}

"""

"""
type Action {
  """

  """
  _id: ID!

  """

  """
  key: String!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  created: Date!

  """

  """
  updated: Date!
}

"""

"""
type GlobalRole {
  """

  """
  role: SecurityRole!

  """

  """
  groupId: ID
}

"""

"""
input FilterActionsInput {
  """

  """
  keys: [String!]
}

"""

"""
type ActionsConnection {
  """

  """
  nodes: [Action]!
}

"""

"""
type Group {
  """

  """
  _id: ID!

  """

  """
  tenantId: String!

  """

  """
  name: String!

  """

  """
  origin: String

  """

  """
  users: [SecurityUser]

  """

  """
  securityRoles: [AnyRole!]!

  """

  """
  type: String
}

"""

"""
type SecurityTeam {
  """

  """
  _id: ID!

  """

  """
  tenantId: String!

  """

  """
  name: String!

  """

  """
  origin: String

  """

  """
  users: [UserOnTeam]

  """

  """
  groups: [GroupOnTeam]

  """

  """
  resources: [TeamResource]
}

"""

"""
type UserOnTeam {
  """

  """
  _id: String!

  """

  """
  name: String!

  """

  """
  origin: String

  """

  """
  securityRoles: [TeamRole!]!
}

"""

"""
type GroupOnTeam {
  """

  """
  _id: String!

  """

  """
  tenantId: String!

  """

  """
  name: String!

  """

  """
  origin: String

  """

  """
  users: [SecurityUser]

  """

  """
  securityRoles: [TeamRole!]!
}

"""

"""
type TeamResource {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  typeName: String!

  """

  """
  typeId: String!

  """

  """
  resourceRoleId: String

  """

  """
  externalId: String
}

"""

"""
type SecurityAuthProvider {
  """

  """
  _id: ID!

  """

  """
  tenantId: String!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  type: String

  """

  """
  ldapUrl: String

  """

  """
  searchBase: String

  """

  """
  searchFilter: String

  """

  """
  searchAnonCheckbox: Boolean

  """

  """
  bindDN: String

  """

  """
  bindCredentials: String

  """

  """
  searchScope: String

  """

  """
  nameAttr: String

  """

  """
  emailAttr: String

  """

  """
  bindProperty: String

  """

  """
  roleDefinition: String

  """

  """
  groupSearchBase: String

  """

  """
  groupSearchFilter: String

  """

  """
  groupNameAttribute: String

  """

  """
  groupDNAttribute: String

  """

  """
  searchGroupSubtree: Boolean

  """

  """
  userGroupAttribute: String

  """

  """
  userHeaderName: String

  """

  """
  emailHeaderName: String

  """

  """
  logoutUrl: String

  """

  """
  issuer: String

  """

  """
  authorizationUrl: String

  """

  """
  tokenUrl: String

  """

  """
  userInfoUrl: String

  """

  """
  clientId: String

  """

  """
  clientSecret: String

  """

  """
  callbackUrl: String
}

"""

"""
type AuthorizationUrl {
  """

  """
  authorizationUrl: String
}

"""

"""
type AccountSetting {
  """

  """
  _id: ID!

  """

  """
  tenantId: String!

  """

  """
  name: String!

  """

  """
  value: Boolean
}

"""

"""
type EnabledFeatureFlag {
  """

  """
  name: String!

  """

  """
  publicName: String

  """

  """
  computed: Boolean
}

"""

"""
type UserAccessKeyMetaData {
  """

  """
  userId: String

  """

  """
  email: String

  """

  """
  id: String

  """

  """
  name: String

  """

  """
  created: Date

  """

  """
  lastUsed: Date
}

"""

"""
input FilterResourcesInput {
  """

  """
  keys: [String!]

  """

  """
  categories: [RESOURCE_CATEGORY!]

  """

  """
  scopes: [SECURITY_SCOPE!]
}

"""

"""
type ResourcesConnection {
  """

  """
  nodes: [Resource]!
}

"""

"""
input FilterPermissionsInput {
  """

  """
  tenants: [ID!]

  """

  """
  resources: FilterResourcesInput

  """

  """
  actionKeys: [String!]
}

"""

"""
type PermissionsConnection {
  """

  """
  nodes: [Permission]!
}

"""

"""
input FilterRolesInput {
  """

  """
  ids: [ID!]

  """

  """
  names: [String!]

  """

  """
  tenants: [ID!]

  """

  """
  scopes: [SECURITY_SCOPE!]

  """

  """
  permissions: [String!]
}

"""

"""
type SecurityRolesConnection {
  """

  """
  nodes: [SecurityRole]!
}

"""

"""
input ScopedPermission {
  """

  """
  resourceKey: String!

  """

  """
  actionKey: String!

  """

  """
  scope: SECURITY_SCOPE!

  """

  """
  teamId: ID

  """

  """
  anyTeam: Boolean
}

"""

"""
type Session {
  """

  """
  _id: ID!

  """

  """
  expires: Date!
}

"""

"""
type LicenseSummary {
  """

  """
  token: LicenseInfo

  """

  """
  floating: LicenseInfo

  """

  """
  authorized: LicenseInfo

  """

  """
  exceededCount: LicenseExceededSummary
}

"""

"""
type LicenseInfo {
  """

  """
  available: Int

  """

  """
  used: Int
}

"""

"""
type LicenseExceededSummary {
  """

  """
  currentUser: Int

  """

  """
  last30Days: Int
}

"""

"""
type LicenseServerConfig {
  """

  """
  url: String!

  """

  """
  serverId: String

  """

  """
  mhsLeaseFeature: String

  """

  """
  proxyPort: String

  """

  """
  proxyUrl: String

  """

  """
  proxyUsername: String

  """

  """
  proxyPassword: String
}

"""

"""
type TrialInfo {
  """

  """
  expirationDate: Date
}

"""

"""
enum ServerEdition {
  """

  """
  STANDARD

  """

  """
  COMMUNITY

  """

  """
  TRIAL
}

"""

"""
type Pipeline {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  tenant_id: ID!

  """

  """
  description: String

  """

  """
  stages: [Stage]

  """

  """
  applications: [PipelineApplication]

  """

  """
  synchronize: Boolean

  """

  """
  team: Team

  """

  """
  created: Date

  """

  """
  stats: PipelineStats
}

"""

"""
type Stage {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  description: String

  """

  """
  planId: ID

  """

  """
  triggers: [Trigger]

  """

  """
  gates: [Gate]

  """

  """
  cf_space_id: String

  """

  """
  promoteTo: [String]

  """

  """
  latestAutopromotionStatus: String

  """

  """
  deploymentModes: [String]

  """

  """
  defaultDeploymentMode: String

  """

  """
  groupsAndUsers: [String]

  """

  """
  solutionVersionId: String

  """

  """
  solutionVersion: SVStage
}

"""

"""
type Trigger {
  """

  """
  _id: ID!

  """

  """
  name: String!
}

"""

"""
type Gate {
  """

  """
  _id: ID!

  """

  """
  name: String!
}

"""

"""
type SVStage {
  """

  """
  _id: ID

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  published: Int

  """

  """
  inventory: [SVInventory]
}

"""

"""
type SVInventory {
  """

  """
  appName: String

  """

  """
  appId: ID

  """

  """
  versionName: String

  """

  """
  versionId: ID
}

"""

"""
type PipelineApplication {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  description: String

  """

  """
  processes: [PipelineApplicationProcess]

  """

  """
  source: Source!

  """

  """
  inputJobId: ID

  """

  """
  stages: [PipelineApplicationStage]

  """

  """
  subApplications: [PipelineSubApplication]

  """

  """
  children: [PipelineAppChildren]

  """

  """
  level: String

  """

  """
  external_id: String

  """

  """
  selectedChildren: [String]

  """

  """
  versionRegEx: String
}

"""

"""
type PipelineApplicationProcess {
  """

  """
  _id: ID!

  """

  """
  externalId: ID

  """

  """
  name: String!

  """

  """
  applicationId: ID

  """

  """
  integrationId: ID
}

"""

"""
type Source {
  """

  """
  name: String

  """

  """
  type: String

  """

  """
  repo: String

  """

  """
  accessToken: String
}

"""

"""
type PipelineApplicationStage {
  """

  """
  _id: ID!

  """

  """
  stageId: ID!

  """

  """
  name: String!

  """

  """
  inputs: [String]

  """

  """
  triggers: [Trigger]

  """

  """
  planId: ID

  """

  """
  parameters: [PipelineApplicationStageParameter]

  """

  """
  process: PipelineApplicationProcess

  """

  """
  versionParam: String

  """

  """
  envFilter: StageEnvFilter

  """

  """
  subApplicationId: ID

  """

  """
  subApplicationType: String

  """

  """
  integration: PipelineIntegration
}

"""

"""
type PipelineApplicationStageParameter {
  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  value: String
}

"""

"""
type StageEnvFilter {
  """

  """
  paramName: String

  """

  """
  paramValues: [String]
}

"""

"""
type PipelineIntegration {
  """

  """
  _id: String

  """

  """
  name: String
}

"""

"""
type PipelineSubApplication {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  description: String

  """

  """
  source: Source!

  """

  """
  inputJobId: ID

  """

  """
  stageId: ID
}

"""

"""
type PipelineAppChildren {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  type: String

  """

  """
  level: String

  """

  """
  description: String

  """

  """
  external_id: String
}

"""

"""
type PipelineStats {
  """

  """
  leadTime: Float
}

"""

"""
type stageNameOptions {
  """

  """
  _id: String

  """

  """
  isProdStage: Boolean

  """

  """
  stagePosition: Int
}

"""

"""
type PipelineSecurity {
  """

  """
  teamId: String!

  """

  """
  teamName: String!

  """

  """
  tenantId: ID!
}

"""
Application data
"""
type PipelineExternalApplication {
  """

  """
  id: ID!

  """

  """
  version: String

  """

  """
  tenant_id: String!

  """

  """
  external_id: String

  """

  """
  level: String

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  type: String!

  """

  """
  active: Boolean!

  """

  """
  integration: PipelineIntegration

  """

  """
  childrenIds: [String]
}

"""

"""
input ApplicationInput {
  """

  """
  id: ID!

  """

  """
  name: String!

  """

  """
  external_id: ID

  """

  """
  type: String

  """

  """
  description: String

  """

  """
  integration: PipelineIntegrationInput

  """

  """
  subApplications: [SubApplicationInput]

  """

  """
  selectedChildren: [String]
}

"""

"""
input PipelineIntegrationInput {
  """

  """
  _id: String

  """

  """
  name: String
}

"""

"""
input SubApplicationInput {
  """

  """
  id: ID!

  """

  """
  name: String!

  """

  """
  type: String!
}

"""
UCD Environment data
"""
type UCD_Environment {
  """

  """
  id: ID!

  """

  """
  version: String

  """

  """
  tenant_id: String!

  """

  """
  external_id: String

  """

  """
  app_id: String!

  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  active: Boolean!

  """

  """
  integration: PipelineIntegration
}

"""

"""
type Version {
  """

  """
  id: ID!

  """

  """
  name: String!

  """

  """
  versionId: ID

  """

  """
  app_id: String

  """

  """
  parameters: [VersionParameter]

  """

  """
  children: [ChildVersion]
}

"""

"""
type VersionParameter {
  """

  """
  name: String!

  """

  """
  value: String

  """

  """
  origin: String
}

"""

"""
type ChildVersion {
  """

  """
  externalId: String!

  """

  """
  name: String!

  """

  """
  created: Date!

  """

  """
  url: String

  """

  """
  application: VersionApplication
}

"""

"""
type VersionApplication {
  """

  """
  id: String

  """

  """
  name: String

  """

  """
  external_id: String
}

"""
UCD Process data or Jenkins job
"""
type Process {
  """

  """
  id: ID!

  """

  """
  version: String

  """

  """
  tenant_id: String!

  """

  """
  external_id: String

  """

  """
  app_id: String

  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  active: Boolean!

  """

  """
  templateJob: Boolean

  """

  """
  instanceName: String

  """

  """
  integrationId: ID

  """

  """
  fullName: String

  """

  """
  parameters: [Parameter]
}

"""

"""
type Parameter {
  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  defaultValue: String

  """

  """
  description: String

  """

  """
  options: [String]
}

"""
Return everything that is required by CR
Prevents having to refetch the data if the preview is used
"""
type ManifestVersion {
  """
  UCD values
  """
  applicationId: ID

  """

  """
  applicationName: String

  """

  """
  versionIds: [String]

  """

  """
  versionNames: [String]

  """
  Jenkins values
  """
  jenkinsAppId: ID

  """

  """
  jenkinsAppName: String

  """

  """
  jenkinsJobId: ID

  """

  """
  jenkinsJobName: String

  """

  """
  envId: ID

  """

  """
  jenkinsVersionId: ID

  """

  """
  jenkinsVersionName: String
}

"""

"""
type AppVersions {
  """

  """
  appId: String

  """

  """
  appName: String

  """

  """
  versions: [SubAppVersion]
}

"""

"""
type SubAppVersion {
  """

  """
  versionName: String

  """

  """
  versionId: String
}

"""

"""
type InventoryVersions {
  """

  """
  appId: String

  """

  """
  appName: String

  """

  """
  versionId: ID

  """

  """
  versionName: String
}

"""

"""
type PlanTask {
  """

  """
  id: ID!

  """

  """
  name: String!

  """

  """
  appId: ID

  """

  """
  type: String!

  """

  """
  executionDetails: ExecutionDetails

  """

  """
  inputTasks: [ID!]

  """

  """
  outputTasks: [ID!]
}

"""

"""
type ExecutionDetails {
  """

  """
  startTime: String

  """

  """
  endTime: String

  """

  """
  status: String!

  """

  """
  user: String
}

"""

"""
type PipelineApplicationStageStatus {
  """

  """
  id: ID!

  """

  """
  errorCode: String

  """

  """
  message: String

  """

  """
  version: Version

  """

  """
  stageVersion: Version

  """

  """
  status: String

  """

  """
  completedAt: Float

  """

  """
  config_url: String

  """

  """
  url: String

  """

  """
  draData: [DRAExecution]
}

"""

"""
type DRAExecution {
  """

  """
  applicationName: String

  """

  """
  orgName: String

  """

  """
  toolchainName: String

  """

  """
  policy: String

  """

  """
  gateText: String

  """

  """
  decision: String

  """

  """
  riskDahboardLink: String

  """

  """
  buildNumber: String

  """

  """
  jobId: String

  """

  """
  environmentId: String
}

"""

"""
type PipelineApplicationStageStatuses {
  """

  """
  appId: String

  """

  """
  appName: String

  """

  """
  envId: String

  """

  """
  id: ID!

  """

  """
  errorCode: String

  """

  """
  message: String

  """

  """
  version: Version

  """

  """
  stageVersion: Version

  """

  """
  status: String

  """

  """
  completedAt: Float

  """

  """
  config_url: String

  """

  """
  url: String

  """

  """
  draData: [DRAExecution]
}

"""

"""
type PipelineApplicationStageDetails {
  """

  """
  id: ID!

  """

  """
  errorCode: String

  """

  """
  inputVersion: Version

  """

  """
  step_statuses: [StepStatus]
}

"""

"""
type StepStatus {
  """

  """
  id: ID!

  """

  """
  status: String

  """

  """
  url: String

  """

  """
  name: String

  """

  """
  startTime: Float

  """

  """
  endTime: Float
}

"""

"""
type JenkinsStageDetails {
  """

  """
  id: ID

  """

  """
  name: String

  """

  """
  active: String

  """

  """
  status: Boolean

  """

  """
  tenant_id: String

  """

  """
  external_app_id: String

  """

  """
  app_id: String

  """

  """
  draData: [DRAExecution]
}

"""

"""
type PipelineLatestApplicationStageDetails {
  """

  """
  id: ID!

  """

  """
  errorCode: String

  """

  """
  input: PipelineInput

  """

  """
  scm: SCMInput
}

"""

"""
type PipelineInput {
  """

  """
  type: String!
}

"""

"""
type SCMInput {
  """

  """
  type: String!

  """

  """
  url: String!

  """

  """
  lastRevision: Revision
}

"""

"""
type Revision {
  """

  """
  userId: String

  """

  """
  message: String

  """

  """
  timestamp: Float

  """

  """
  url: String
}

"""

"""
type RecentDeploymentInfo {
  """

  """
  mostRecentDeployment: PipelineDeployment

  """

  """
  finalStageRecentDeployment: PipelineDeployment
}

"""

"""
type PipelineDeployment {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  status: DeploymentStatus!

  """

  """
  start: Date

  """

  """
  end: Date

  """

  """
  pipelineId: String

  """

  """
  parentPlanId: String
}

"""

"""
type Integration {
  """

  """
  _id: String!

  """

  """
  type: String!

  """

  """
  tenant_id: String!

  """

  """
  name: String!

  """

  """
  loggingLevel: LOGGING_LEVEL!

  """

  """
  userAccessKey: String

  """

  """
  displayName: String

  """

  """
  showHidden: Boolean!

  """

  """
  ucd_url: String

  """

  """
  token: String

  """

  """
  ucdProxyConfig: UCDProxyConfiguration

  """

  """
  last_run_successful: Boolean

  """

  """
  last_run_completion_time: Date

  """

  """
  last_successful_execution_time: Date

  """

  """
  disabled: Boolean

  """

  """
  delete: Boolean

  """

  """
  heartbeat: Float

  """

  """
  current_time: Float

  """

  """
  status: String

  """

  """
  upgradeAvailable: Boolean

  """

  """
  image: String

  """

  """
  properties: JSON

  """

  """
  scheduledEventStates: [ScheduledEventState]

  """

  """
  state: JSON

  """

  """
  startTime: Date

  """

  """
  pluginId: String

  """

  """
  plugin: Plugin

  """

  """
  cleanupOnDelete: Boolean

  """

  """
  executions(limit: Int = 10): [IntegrationExecution]
}

"""

"""
enum LOGGING_LEVEL {
  """

  """
  ALL

  """

  """
  DEBUG

  """

  """
  INFO

  """

  """
  WARN

  """

  """
  ERROR

  """

  """
  FATAL

  """

  """
  OFF

  """

  """
  TRACE
}

"""

"""
type UCDProxyConfiguration {
  """

  """
  ucdProxyUrl: String

  """

  """
  ucdProxyUser: String

  """

  """
  ucdProxyPassword: String
}

"""

"""
type ScheduledEventState {
  """

  """
  _id: String!

  """

  """
  eventName: String!

  """

  """
  lastStartTime: Date!

  """

  """
  deltaTime: Date
}

"""

"""
type Plugin {
  """

  """
  _id: ID!

  """

  """
  pluginId: String!

  """

  """
  displayName: String!

  """

  """
  description: String

  """

  """
  docUrl: String

  """

  """
  properties: PluginProperties

  """

  """
  qualityHandlers: [PluginQualityHandler]

  """

  """
  scheduledEvents: [PluginScheduledEvent]

  """

  """
  automationTasks: [PluginAutomationTask]

  """

  """
  endpoints: [PluginEndpoints]

  """

  """
  pipelineDefinition: PluginPipelineDefinition

  """

  """
  image: String!

  """

  """
  releaseDate: String!

  """

  """
  vsmLinkRuleDefaultRegex: String

  """

  """
  categories: [PLUGIN_CATEGORY]

  """

  """
  features: JSON

  """

  """
  version: String
}

"""

"""
type PluginProperties {
  """

  """
  name: String!

  """

  """
  displayName: String!

  """

  """
  fields: [PluginPropertiesField]
}

"""

"""
type PluginPropertiesField {
  """

  """
  type: String!

  """

  """
  name: String!

  """

  """
  label: String!

  """

  """
  required: Boolean!

  """

  """
  hidden: Boolean

  """

  """
  defaultValue: PluginPropValue

  """

  """
  description: String

  """

  """
  choices: [PluginPropertyChoice]

  """

  """
  range: PluginRangePropertyValue

  """

  """
  multi: Boolean

  """

  """
  dataTableChoices: PluginPropertyTableChoice
}

"""
The `PluginPropValue` scalar type represents a default value for a plugin. These values can be string, boolean, integer, or array types.
"""
scalar PluginPropValue

"""

"""
type PluginPropertyChoice {
  """

  """
  label: String!

  """

  """
  value: String!
}

"""

"""
type PluginRangePropertyValue {
  """

  """
  min: Int

  """

  """
  max: Int
}

"""

"""
type PluginPropertyTableChoice {
  """

  """
  data: [JSON!]!

  """

  """
  keyField: String!

  """

  """
  valueField: String!
}

"""

"""
type PluginQualityHandler {
  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  description: String
}

"""

"""
type PluginScheduledEvent {
  """

  """
  name: String!

  """

  """
  interval: Int!

  """

  """
  description: String
}

"""

"""
type PluginAutomationTask {
  """

  """
  name: String!

  """

  """
  pluginInternalId: ID

  """

  """
  displayName: String!

  """

  """
  description: String

  """

  """
  importedTask: Boolean!

  """

  """
  requiresAppVerEnv: Boolean!

  """

  """
  requiresIntegration: Boolean!

  """

  """
  properties: [PluginPropertiesField]

  """

  """
  requirements: PluginRequirementsField

  """

  """
  deploymentPlanProperties: [PlanPropertiesField]

  """

  """
  pluginId: String

  """

  """
  handlesCallback: Boolean

  """

  """
  requiresStatuses: Boolean

  """

  """
  requiresVerEnvExceptApp: Boolean
}

"""

"""
type PluginRequirementsField {
  """

  """
  environment: RequiredField

  """

  """
  process: RequiredField

  """

  """
  version: RequiredField
}

"""

"""
type RequiredField {
  """

  """
  required: Boolean
}

"""

"""
type PlanPropertiesField {
  """

  """
  type: String!

  """

  """
  name: String!

  """

  """
  label: String!

  """

  """
  required: Boolean

  """

  """
  hidden: Boolean

  """

  """
  defaultValue: PluginPropValue

  """

  """
  description: String

  """

  """
  choices: [PluginPropertyChoice]
}

"""

"""
type PluginEndpoints {
  """

  """
  name: String!

  """

  """
  path: String!

  """

  """
  method: HTTPMethod
}

"""

"""
enum HTTPMethod {
  """

  """
  GET

  """

  """
  POST

  """

  """
  PUT

  """

  """
  DELETE
}

"""

"""
type PluginPipelineDefinition {
  """

  """
  importsApplications: Boolean

  """

  """
  importsEnvironments: Boolean

  """

  """
  importsVersions: Boolean
}

"""

"""
enum PLUGIN_CATEGORY {
  """

  """
  ALM

  """

  """
  SCM

  """

  """
  Build

  """

  """
  Deploy

  """

  """
  Quality

  """

  """
  Security

  """

  """
  ITSM

  """

  """
  Misc
}

"""

"""
type IntegrationExecution {
  """

  """
  _id: ID!

  """

  """
  integrationId: ID!

  """

  """
  jobName: String!

  """

  """
  jobType: String!

  """

  """
  startTime: Date!

  """

  """
  completionTime: Date!

  """

  """
  success: Boolean!

  """

  """
  log: String!
}

"""

"""
input IntegrationActiveState {
  """

  """
  archived: Boolean! = false

  """

  """
  active: Boolean! = true
}

"""

"""
type AvailablePlugin {
  """

  """
  pluginId: String!

  """

  """
  displayName: String!

  """

  """
  availableReleases: [PluginRelease]!

  """

  """
  docUrl: String
}

"""

"""
type PluginRelease {
  """

  """
  image: String!

  """

  """
  date: Date!
}

"""

"""
type Report {
  """

  """
  _id: String

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  teamId: ID

  """

  """
  tenantId: ID

  """

  """
  active: Boolean

  """

  """
  deleted: Boolean

  """

  """
  createdBy: String

  """

  """
  createdAt: Date

  """

  """
  lastModifiedAt: Date

  """

  """
  lastModifiedBy: String

  """

  """
  seeded: Boolean

  """

  """
  properties: JSON

  """

  """
  beta: Boolean
}

"""

"""
type ReportExecution {
  """

  """
  _id: String

  """

  """
  status: REPORT_EXECUTION_STATUS

  """

  """
  teamId: ID

  """

  """
  tenantId: ID

  """

  """
  active: Boolean

  """

  """
  deleted: Boolean

  """

  """
  requestedAt: Date

  """

  """
  requestedBy: String

  """

  """
  htmlUrl: String

  """

  """
  properties: JSON

  """

  """
  integrationExecutionId: ID
}

"""

"""
enum REPORT_EXECUTION_STATUS {
  """

  """
  REQUESTED

  """

  """
  STARTED

  """

  """
  COMPLETE

  """

  """
  FAILED

  """

  """
  ERROR
}

"""

"""
type ReportExecutionContent {
  """

  """
  htmlContent: String
}

"""

"""
input AppCriteria {
  """

  """
  tenant: String

  """

  """
  type: String

  """

  """
  name: String

  """

  """
  since: Date

  """

  """
  externalJobId: String

  """

  """
  tags: String

  """

  """
  externalIds: String

  """

  """
  fuzzyName: String

  """

  """
  integrationId: String

  """

  """
  parentsOnly: Boolean
}

"""

"""
type ApplicationOut {
  """

  """
  _id: String

  """

  """
  tenant_id: String

  """

  """
  external_id: String

  """

  """
  name: String

  """

  """
  type: String

  """

  """
  active: Boolean

  """

  """
  version: Date

  """

  """
  id: String

  """

  """
  alphaNumericName: String
}

"""

"""
input ProcCriteria {
  """

  """
  tenant: String

  """

  """
  type: String

  """

  """
  name: String

  """

  """
  since: Date

  """

  """
  appId: String

  """

  """
  integrationId: ID
}

"""

"""
type ProcessOut {
  """

  """
  tenant_id: String!

  """

  """
  external_id: String!

  """

  """
  external_app_id: String

  """

  """
  app_id: String

  """

  """
  name: String!

  """

  """
  fullName: String

  """

  """
  type: String!

  """

  """
  active: Boolean

  """

  """
  json_data: JSON

  """

  """
  id: String

  """

  """
  version: Date

  """

  """
  parameters: [ProcessParameterData]
}

"""
if this type changes the same type in app-api must change
"""
type ProcessParameterData {
  """

  """
  name: String!

  """

  """
  type: PROCESS_PARAMETER_TYPE!

  """

  """
  description: String

  """

  """
  defaultValue: StringOrBoolean

  """

  """
  options: [String]
}

"""
if this type changes the same type in app-api must change
"""
enum PROCESS_PARAMETER_TYPE {
  """

  """
  BooleanParameterDefinition

  """

  """
  ChoiceParameterDefinition

  """

  """
  PasswordParameterDefinition

  """

  """
  StringParameterDefinition

  """

  """
  TextParameterDefinition
}

"""

"""
scalar StringOrBoolean

"""

"""
type IssueTracker {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  baseUrl: String!

  """

  """
  username: String!

  """

  """
  systemType: String!
}

"""

"""
type JiraProject {
  """

  """
  id: ID!

  """

  """
  name: String!
}

"""

"""
type FieldDefinition {
  """

  """
  id: ID!

  """

  """
  name: String!
}

"""

"""
type JiraVersion {
  """

  """
  id: ID!

  """

  """
  name: String!

  """

  """
  released: Boolean

  """

  """
  startDate: Date

  """

  """
  releaseDate: Date
}

"""

"""
input DeployChartQuery {
  """

  """
  filters: Filters

  """

  """
  groupBy: String

  """

  """
  summarizationInterval: SUMMARIZATION_INTERVAL

  """

  """
  summarizationOperation: SUMMARIZATION_OPERATION
}

"""

"""
input Filters {
  """

  """
  tenantId: ID

  """

  """
  teamIds: [String]

  """

  """
  tags: [String]

  """

  """
  appIds: [String]

  """

  """
  customStartDate: Date

  """

  """
  customEndDate: Date

  """

  """
  relativeTime: RELATIVE_DATE_INTERVAL

  """

  """
  queryString: String

  """

  """
  type: [String]

  """

  """
  result: [String]

  """

  """
  name: [String]

  """

  """
  environment_name: [String]

  """

  """
  version_name: [String]
}

"""

"""
enum RELATIVE_DATE_INTERVAL {
  """

  """
  HOUR24

  """

  """
  DAYSOFAR

  """

  """
  DAY7

  """

  """
  DAY30

  """

  """
  DAY90

  """

  """
  MONTH6

  """

  """
  YEAR1

  """

  """
  ALL

  """

  """
  CUSTOM
}

"""

"""
enum SUMMARIZATION_INTERVAL {
  """

  """
  DAY

  """

  """
  WEEK

  """

  """
  MONTH

  """

  """
  QUARTER

  """

  """
  YEAR
}

"""

"""
enum SUMMARIZATION_OPERATION {
  """

  """
  sum

  """

  """
  mean
}

"""
*********************************************************************
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2021, 2023. All Rights Reserved.
**********************************************************************
"""
type InsightsChartData {
  """

  """
  name: String

  """

  """
  x: [String]

  """

  """
  y: [Float]
}

"""
Query Used for Deployments Table/List
"""
input DeploymentQuery {
  """

  """
  tenantId: ID

  """

  """
  teamIds: [String]

  """

  """
  tags: [String]

  """

  """
  appIds: [String]

  """

  """
  customStartDate: Date

  """

  """
  customEndDate: Date

  """

  """
  relativeTime: RELATIVE_DATE_INTERVAL

  """
  DQL (DevOps Query Language) String
  """
  queryString: String

  """

  """
  pagination: InsightsPaginationInput

  """

  """
  sort: InsightsSortOptions

  """

  """
  type: [String]

  """

  """
  result: [String]

  """

  """
  name: [String]

  """

  """
  environment_name: [String]

  """

  """
  version_name: [String]
}

"""

"""
input InsightsPaginationInput {
  """

  """
  skip: Int

  """

  """
  limit: Int
}

"""

"""
input InsightsSortOptions {
  """

  """
  field: String

  """

  """
  direction: Int
}

"""

"""
type DeployQueryResponse {
  """

  """
  items: [DeployMetrics!]

  """

  """
  count: Int
}

"""

"""
type DeployMetrics {
  """

  """
  _id: String

  """

  """
  id_external: String

  """

  """
  tenant_id: String

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  tags: [String]

  """

  """
  teams: [AppTeam]

  """

  """
  version_id_external: String

  """

  """
  version_name: String

  """

  """
  application: DeployApplication

  """

  """
  type: String

  """

  """
  result: String!

  """

  """
  start_time: Date

  """

  """
  end_time: Date

  """

  """
  duration_mins: Float

  """

  """
  duration_seconds: Float

  """

  """
  environment_id: String

  """

  """
  environment_name: String

  """

  """
  by_user: String

  """

  """
  json: JSON

  """

  """
  url: String

  """

  """
  deploymentType: DEPLOYMENT_TYPE
}

"""

"""
type AppTeam {
  """

  """
  name: String

  """

  """
  _id: ID
}

"""

"""
type DeployApplication {
  """

  """
  id: String

  """

  """
  name: String

  """

  """
  external_id: String
}

"""
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2020. All Rights Reserved.
**********************************************************************
"""
enum DEPLOYMENT_TYPE {
  """

  """
  Manual

  """

  """
  Regular
}

"""

"""
input PullRequestFilterIn {
  """

  """
  tenantId: ID!

  """

  """
  externalIds: [ID]
}

"""

"""
type PullRequestData {
  """

  """
  _id: ID

  """

  """
  id: String

  """

  """
  number: Int

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  url: String

  """

  """
  status: String

  """

  """
  commitId: String

  """

  """
  creator: String

  """

  """
  branch: String

  """

  """
  created: Date

  """

  """
  lastUpdate: Date

  """

  """
  source: String
}

"""

"""
type InsightsApplication {
  """

  """
  name: String

  """

  """
  id: String

  """

  """
  level: String

  """

  """
  externalId: String
}

"""
 TYPES
"""
type MetricDefinitionFilter {
  """

  """
  name: String

  """

  """
  id: String

  """

  """
  values: [String]

  """

  """
  showOnMetricsBar: Boolean

  """

  """
  defaultValues: [String]
}

"""

"""
type VSMReleasesDocument {
  """

  """
  id: String

  """

  """
  projectId: String!

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  archived: Boolean

  """

  """
  released: Boolean

  """

  """
  releaseDate: Date

  """

  """
  tenantId: String!

  """

  """
  integrationIds: [String]

  """

  """
  summary: String

  """

  """
  lastSummaryOn: Date
}

"""

"""
type Workflow {
  """

  """
  _id: ID!

  """

  """
  pipelineId: ID!

  """

  """
  tenantId: ID!

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  query: String

  """

  """
  recalculating: Boolean

  """

  """
  phases: [WorkflowPhase]

  """

  """
  environmentMap: [EnvironmentMap]

  """

  """
  integrations: [JSON]

  """

  """
  integrationId: String

  """

  """
  integrationsCount: Int!

  """

  """
  created: Date

  """

  """
  lastUpdate: Date

  """

  """
  mappings: JSON

  """

  """
  leadTimeChange: WorkflowCycleTime

  """

  """
  leadTime: WorkflowCycleTime

  """

  """
  cycleTime: WorkflowCycleTime

  """

  """
  devCycleTime: WorkflowCycleTime

  """

  """
  linkRules: [LinkRule]

  """

  """
  metrics: [WorkflowMetric]

  """

  """
  metricsBar: [ChartableMetric]

  """

  """
  team: TeamOutput

  """

  """
  sprints(criterion: WORKFLOW_SPRINT_CRITERION, count: Int): [IssueSprint]

  """

  """
  releases(criterion: WORKFLOW_RELEASE_CRITERION, count: Int): [IssueRelease]

  """

  """
  features: [WorkflowFeature]

  """

  """
  particleTypes: [String]
}

"""

"""
type WorkflowPhase {
  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  stages: [WorkflowStage]
}

"""

"""
type WorkflowStage {
  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  query: String

  """

  """
  particles: [ParticleSummary]

  """

  """
  stat: StageStat

  """

  """
  wipLimit: Int

  """

  """
  showAlerts: Boolean

  """

  """
  showSpeed: Boolean

  """

  """
  gates: [WorkflowGates]

  """

  """
  targets: [String]
}

"""

"""
type ParticleSummary {
  """

  """
  particleId: ID!

  """

  """
  type: PARTICLE_TYPE!

  """

  """
  normalizedType: IssueNormalizedType

  """

  """
  colorAttribute: ParticleViewMode

  """

  """
  alert: Boolean

  """

  """
  owner: String

  """

  """
  name: String

  """

  """
  id: String

  """

  """
  labels: [String!]

  """

  """
  features: [String!]

  """

  """
  startTime: Float
}

"""

"""
enum PARTICLE_TYPE {
  """

  """
  issue

  """

  """
  pullRequest

  """

  """
  commit

  """

  """
  incident
}

"""
*********************************************************************
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2021. All Rights Reserved.
**********************************************************************
"""
enum IssueNormalizedType {
  """

  """
  EPIC

  """

  """
  FEATURE

  """

  """
  INCIDENT

  """

  """
  CHANGE_REQUEST

  """

  """
  OTHER
}

"""

"""
type ParticleViewMode {
  """

  """
  release: String

  """

  """
  releases: [String!]

  """

  """
  sprint: String

  """

  """
  sprints: [String!]

  """

  """
  type: String

  """

  """
  priority: String
}

"""

"""
type StageStat {
  """

  """
  averageAge: Float

  """

  """
  trend: Float
}

"""

"""
type WorkflowGates {
  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  query: String!
}

"""

"""
type EnvironmentMap {
  """

  """
  _id: ID!

  """

  """
  name: String
}

"""

"""
type WorkflowCycleTime {
  """

  """
  start: String

  """

  """
  end: String

  """

  """
  median: Float

  """

  """
  previousMedian: Float

  """

  """
  firstQuartile: Float

  """

  """
  thirdQuartile: Float
}

"""

"""
type LinkRule {
  """

  """
  _id: ID!

  """

  """
  fromIntegrationName: String!

  """

  """
  toIntegrationName: String!

  """

  """
  fromField: String!

  """

  """
  toField: String!

  """

  """
  pattern: String!

  """

  """
  fromIntegrationId: ID!

  """

  """
  toIntegrationId: ID!
}

"""

"""
type WorkflowMetric {
  """

  """
  name: String!

  """

  """
  repeatEvery: String

  """

  """
  repeatAt: String

  """

  """
  metricDefinitionId: String

  """

  """
  properties: WorkflowMetricProperties
}

"""

"""
type WorkflowMetricProperties {
  """

  """
  query: String

  """

  """
  field: JSON
}

"""

"""
union ChartableMetric =
    PipelineMetric
  | ChartableInstance
  | MetricFilter
  | Chartable
  | PipelineChartableNumber

"""

"""
type PipelineMetric {
  """

  """
  name: String!

  """

  """
  relativeTime: PIPELINE_RELATIVE_TIME!

  """

  """
  compliancePolicy: COMPLIANCE_APP_POLICY_TYPES

  """

  """
  aggregationInterval: PIPELINE_AGGREGATION_INTERVAL!

  """

  """
  displayType: DISPLAY_TYPE!

  """

  """
  calculationType: CALCULATION_TYPE!

  """

  """
  metricDefinitionId: String!

  """

  """
  trend: Float

  """

  """
  values: [NormalizeValues!]!

  """

  """
  overrideValue: Float

  """

  """
  filters: [MetricsFilterOut]

  """

  """
  category: String

  """

  """
  additionalInfo: String

  """

  """
  insight: String
}

"""

"""
enum PIPELINE_RELATIVE_TIME {
  """

  """
  HOUR24

  """

  """
  DAY7

  """

  """
  DAY30

  """

  """
  DAY90

  """

  """
  MONTH6

  """

  """
  YEAR1

  """

  """
  ALL
}

"""

"""
enum COMPLIANCE_APP_POLICY_TYPES {
  """

  """
  ALL_APPS_HAVE_DATA

  """

  """
  ANY_APPS_HAVE_DATA

  """

  """
  NO_APPS_HAVE_DATA
}

"""

"""
enum PIPELINE_AGGREGATION_INTERVAL {
  """

  """
  MINUTE

  """

  """
  HOUR

  """

  """
  DAY

  """

  """
  WEEK

  """

  """
  MONTH

  """

  """
  QUARTER

  """

  """
  YEAR
}

"""
*********************************************************************
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2020. All Rights Reserved.

 Note to U.S. Government Users Restricted Rights:
 Use, duplication or disclosure restricted by GSA ADP Schedule
**********************************************************************
"""
enum DISPLAY_TYPE {
  """

  """
  bar

  """

  """
  frequency

  """

  """
  percent

  """

  """
  count

  """

  """
  interval
}

"""

"""
enum CALCULATION_TYPE {
  """

  """
  average

  """

  """
  mostRecent

  """

  """
  total

  """

  """
  trendMostRecent
}

"""

"""
type NormalizeValues {
  """

  """
  value: Float!

  """

  """
  name: String

  """

  """
  trend: Float
}

"""

"""
type MetricsFilterOut {
  """

  """
  name: String

  """

  """
  id: String!

  """

  """
  values: [String]

  """

  """
  selected: [String]
}

"""

"""
type ChartableInstance {
  """

  """
  chartableId: ID!

  """

  """
  value: ChartableType

  """

  """
  name: String
}

"""

"""
union ChartableType =
    PlotlyChartable
  | SimpleStringMetric
  | ChartableTable
  | ChartableNumber
  | ChartableCountSet

"""

"""
type PlotlyChartable {
  """

  """
  type: String!

  """

  """
  data: [JSON!]!

  """

  """
  layout: JSON
}

"""

"""
type SimpleStringMetric {
  """

  """
  type: String!

  """

  """
  label: String!

  """

  """
  value: String!

  """

  """
  description: String!
}

"""

"""
type ChartableTable {
  """

  """
  type: String!

  """

  """
  headers: [ChartableTableHeader!]

  """

  """
  rows: [ChartableTableRow!]

  """

  """
  totalRowCount: Int!
}

"""

"""
type ChartableTableHeader {
  """

  """
  headerLabel: String!

  """

  """
  cellLabel: String!
}

"""

"""
type ChartableTableRow {
  """

  """
  cells: [ChartableTableCell!]
}

"""

"""
type ChartableTableCell {
  """

  """
  label: String!

  """

  """
  value: StringOrFloat!

  """

  """
  type: ChartableTableRowTypes!
}

"""
A union for String and Float types
"""
scalar StringOrFloat

"""

"""
enum ChartableTableRowTypes {
  """

  """
  string

  """

  """
  number

  """

  """
  date

  """

  """
  noData
}

"""

"""
type ChartableNumber {
  """

  """
  type: String!

  """

  """
  value: Float!

  """

  """
  label: String!
}

"""

"""
type ChartableCountSet {
  """

  """
  type: String!

  """

  """
  values: [ChartableCountSetValue!]!

  """

  """
  label: String!

  """

  """
  layout: JSON
}

"""

"""
type ChartableCountSetValue {
  """

  """
  name: String!

  """

  """
  value: Float!
}

"""

"""
type MetricFilter {
  """

  """
  relativeTime: PIPELINE_RELATIVE_TIME!

  """

  """
  metricDefinitionId: String!

  """

  """
  aggregationInterval: PIPELINE_AGGREGATION_INTERVAL!

  """

  """
  name: String!

  """

  """
  displayType: DISPLAY_TYPE!

  """

  """
  calculationType: CALCULATION_TYPE!
}

"""

"""
type Chartable {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  metricDefinitionId: ID!

  """

  """
  tenantId: String

  """

  """
  variables: [ChartableVariable!]

  """

  """
  drillDowns: [Chartable!]

  """

  """
  dataPipeline: JSON

  """

  """
  displayPipeline: JSON

  """

  """
  layout: JSON

  """

  """
  isDrillDown: Boolean

  """

  """
  overlays: [Chartable!]

  """

  """
  filters: ChartableFilters
}

"""

"""
type ChartableVariable {
  """

  """
  name: String!

  """

  """
  value: JSON!
}

"""

"""
type ChartableFilters {
  """

  """
  dql: String
}

"""

"""
type PipelineChartableNumber {
  """

  """
  chartableId: ID!

  """

  """
  primaryNumber: ChartableNumber

  """

  """
  secondaryNumber: ChartableNumber

  """

  """
  label: String!

  """

  """
  comparisonType: String

  """

  """
  type: String!
}

"""

"""
type TeamOutput {
  """

  """
  id: String!

  """

  """
  name: String!
}

"""

"""
enum WORKFLOW_SPRINT_CRITERION {
  """

  """
  activeAndMostRecent
}

"""

"""
enum WORKFLOW_RELEASE_CRITERION {
  """

  """
  mostRecent
}

"""

"""
type WorkflowFeature {
  """

  """
  _id: ID!

  """

  """
  id: String

  """

  """
  name: String!

  """

  """
  businessValue: Int
}

"""

"""
type Particle {
  """

  """
  issue: Issue

  """

  """
  commit: [Commit]

  """

  """
  pullRequest: [PullRequest]

  """

  """
  build: [BuildContent]

  """

  """
  version: [VersionContent]

  """

  """
  deploy: [DeployContent]

  """

  """
  metricsData(
    metricDefinitions: [ID!]
    pagination: InsightsPaginationInput
  ): [WorkflowMetricsData]

  """

  """
  metricsDataCount(metricDefinitions: [ID!]): Int!

  """

  """
  lastVSMUpdate: Date

  """

  """
  lastVSMEvent: HistoryEvent

  """

  """
  alerts: ParticleAlert

  """

  """
  particleId: ID
}

"""

"""
type Commit {
  """

  """
  _id: ID!

  """

  """
  id: String

  """

  """
  name: String

  """

  """
  url: String

  """

  """
  creator: String

  """

  """
  committer: String

  """

  """
  created: Date
}

"""

"""
type PullRequest {
  """

  """
  _id: ID!

  """

  """
  repository: Repository

  """

  """
  id: String

  """

  """
  number: Int

  """

  """
  name: String

  """

  """
  url: String

  """

  """
  status: String

  """

  """
  commitId: String

  """

  """
  creator: String

  """

  """
  branch: String

  """

  """
  baseBranch: String

  """

  """
  created: Date

  """

  """
  lastUpdate: Date

  """

  """
  merged: Date

  """

  """
  labels: [String]

  """

  """
  reviewers: [String]

  """

  """
  draft: Boolean
}

"""

"""
type Repository {
  """

  """
  id: ID!

  """

  """
  tenantId: ID!

  """

  """
  name: String!

  """

  """
  owner: String!

  """

  """
  baseUrl: String!
}

"""

"""
type BuildContent {
  """

  """
  _id: String

  """

  """
  type: String

  """

  """
  name: String

  """

  """
  number: String

  """

  """
  status: String

  """

  """
  url: String

  """

  """
  requestor: String

  """

  """
  startTime: String

  """

  """
  endTime: String
}

"""

"""
type VersionContent {
  """

  """
  _id: String

  """

  """
  name: String

  """

  """
  type: String

  """

  """
  app_id: String

  """

  """
  active: Boolean

  """

  """
  created: Date

  """

  """
  version: Date

  """

  """
  id: String

  """

  """
  tenant_id: String

  """

  """
  external_id: String
}

"""

"""
type DeployContent {
  """

  """
  _id: String

  """

  """
  environmentId: String

  """

  """
  applicationId: String

  """

  """
  versionId: String

  """

  """
  versionName: String

  """

  """
  versionNames: [String]

  """

  """
  creationDate: Date

  """

  """
  status: String

  """

  """
  url: String

  """

  """
  name: String

  """

  """
  id: String

  """

  """
  tenantId: String

  """

  """
  startTime: String

  """

  """
  endTime: String

  """

  """
  requestor: String
}

"""

"""
type WorkflowMetricsData {
  """

  """
  _id: ID

  """

  """
  tenant_id: String

  """

  """
  dataSet: String

  """

  """
  application: WorkflowApplication

  """

  """
  integrationId: String

  """

  """
  pullRequestId: String

  """

  """
  commitId: String

  """

  """
  build: WorkflowBuild

  """

  """
  record: MetricsDataRecord
}

"""

"""
type WorkflowApplication {
  """

  """
  _id: ID

  """

  """
  id: String

  """

  """
  external_id: ID

  """

  """
  name: String

  """

  """
  active: Boolean

  """

  """
  type: String

  """

  """
  integration_id: String
}

"""

"""
type WorkflowBuild {
  """

  """
  id: ID

  """

  """
  source: String

  """

  """
  url: String

  """

  """
  jobExternalId: String

  """

  """
  buildId: String
}

"""

"""
type MetricsDataRecord {
  """

  """
  recordName: String

  """

  """
  metricDefinition: String

  """

  """
  pluginType: String

  """

  """
  valueType: WorkflowVALUE_TYPE

  """

  """
  valueNormalized: [NormalValue]

  """

  """
  metricsRecordUrl: String

  """

  """
  executionDateIso: Date

  """

  """
  entries: [JSON]
}

"""

"""
enum WorkflowVALUE_TYPE {
  """

  """
  count

  """

  """
  percent

  """

  """
  countset

  """

  """
  passfail
}

"""

"""
type NormalValue {
  """

  """
  key: String

  """

  """
  value: Float
}

"""

"""
type HistoryEvent {
  """

  """
  event: String

  """

  """
  content: HistoryContent

  """

  """
  type: String

  """

  """
  source: String

  """

  """
  timestamp: Date

  """

  """
  pullRequestIds: [String]

  """

  """
  buildIds: [String]

  """

  """
  deployIds: [String]
}

"""

"""
type HistoryContent {
  """

  """
  field: String

  """

  """
  fieldtype: String

  """

  """
  fieldId: String

  """

  """
  from: HistoryValue

  """

  """
  to: HistoryValue

  """

  """
  type: String

  """

  """
  userDisplayName: String

  """

  """
  sha: String

  """

  """
  url: String

  """

  """
  committer: String

  """

  """
  message: String

  """

  """
  name: String

  """

  """
  versionName: String

  """

  """
  status: String

  """

  """
  number: String

  """

  """
  user: String

  """

  """
  startTime: String

  """

  """
  endTime: String

  """

  """
  buildName: String

  """

  """
  buildNumber: String

  """

  """
  branch: String

  """

  """
  baseBranch: String

  """

  """
  userName: String

  """

  """
  id: String

  """

  """
  creator: String

  """

  """
  _id: String

  """

  """
  dataSet: String

  """

  """
  valueNormalized: JSON

  """

  """
  requestor: String
}

"""

"""
union HistoryValue = DateBox | StringBox | StringArrayBox | ObjectArrayBox

"""

"""
type DateBox {
  """

  """
  value: Date
}

"""

"""
type StringBox {
  """

  """
  value: String
}

"""

"""
type StringArrayBox {
  """

  """
  value: [String]
}

"""

"""
type ObjectArrayBox {
  """

  """
  value: [ObjectArray]
}

"""

"""
union ObjectArray = Comment | Review | Step

"""

"""
type Comment {
  """

  """
  id: String!

  """

  """
  user: String

  """

  """
  created: Date

  """

  """
  updated: Date

  """

  """
  comment: String

  """

  """
  url: String
}

"""

"""
type Review {
  """

  """
  id: String!

  """

  """
  body: String

  """

  """
  commit_id: String

  """

  """
  status: String

  """

  """
  user: String
}

"""

"""
type Step {
  """

  """
  name: String

  """

  """
  status: String

  """

  """
  message: String

  """

  """
  isFatal: Boolean
}

"""

"""
type ParticleAlert {
  """

  """
  failedBuildIds: [String]

  """

  """
  failedDeployIds: [String]

  """

  """
  isUnassigned: Boolean

  """

  """
  isPastAgeThreshold: Boolean
}

"""

"""
type ParticleStagePosition {
  """

  """
  workflowId: ID!

  """

  """
  workflowName: String!

  """

  """
  stageName: String!

  """

  """
  particleId: ID!
}

"""

"""
type StageChangeEvent {
  """

  """
  _id: ID

  """

  """
  particleId: ID

  """

  """
  workflowId: ID

  """

  """
  stage: String

  """

  """
  endTime: Date

  """

  """
  startTime: Date

  """

  """
  type: PARTICLE_TYPE
}

"""

"""
type StageChangeEventQueryResponse {
  """

  """
  nodes: [StageChangeEvent!]!

  """

  """
  pageInfo: PageInfo!
}

"""
*********************************************************************
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2018, 2019. All Rights Reserved.

 Note to U.S. Government Users Restricted Rights:
 Use, duplication or disclosure restricted by GSA ADP Schedule
 Contract with IBM Corp.
**********************************************************************
"""
type PageInfo {
  """

  """
  cursor: String

  """

  """
  hasMore: Boolean!
}

"""

"""
input WorkflowGatesRequest {
  """

  """
  pipelineId: ID!

  """

  """
  stageName: String!

  """

  """
  buildId: String

  """

  """
  versionId: String
}

"""

"""
input LatestWorkflowGatesQuery {
  """

  """
  workflowId: ID!
}

"""

"""
type LatestGateCheck {
  """

  """
  stageName: String

  """

  """
  record: MetricsDataRecord
}

"""

"""
type WorkflowStats {
  """

  """
  pipelineId: ID

  """

  """
  leadTimeChange: WorkflowCycleTime

  """

  """
  leadTime: WorkflowCycleTime

  """

  """
  cycleTime: WorkflowCycleTime

  """

  """
  devCycleTime: WorkflowCycleTime
}

"""

"""
type PipelineWithMetrics {
  """

  """
  pipelineId: ID!

  """

  """
  name: String!

  """

  """
  workflowId: ID!

  """

  """
  metrics: [ChartableMetric]!
}

"""

"""
input AggregationOptions {
  """

  """
  skip: Int

  """

  """
  limit: Int

  """

  """
  sortIndex: Int

  """

  """
  sortValue: String

  """

  """
  sortDirection: Int

  """

  """
  noncompliant: [Int]

  """

  """
  pipelineNameFilter: String
}

"""

"""
type PipelinesWithMetricsRes {
  """
   The total number of pipelines that match the filter and aggregation options give
  """
  count: Int!

  """
   The total number of pipelines for a tenant regardless of filters or aggregation options
  """
  totalCount: Int!

  """

  """
  noncompliant: [Int]

  """

  """
  pipelines: [PipelineWithMetrics!]
}

"""

"""
type StageLayout {
  """

  """
  identifier: String!

  """

  """
  phaseIndex: Int!

  """

  """
  targetX: Int!

  """

  """
  targetY: Int!
}

"""

"""
type WorkItemsDataSetOutput {
  """

  """
  _id: ID

  """

  """
  id: String

  """

  """
  name: String

  """

  """
  owner: String

  """

  """
  creator: String

  """

  """
  status: String

  """

  """
  priority: String

  """

  """
  type: String

  """

  """
  components: [String]

  """

  """
  lastUpdate: Date

  """

  """
  url: String

  """

  """
  description: String

  """

  """
  created: Date

  """

  """
  labels: [String]

  """

  """
  releases: [IssueRelease]

  """

  """
  sprints: [IssueSprint!]

  """

  """
  storyPoints: Float

  """

  """
  cycle: workItemCycleLeadTime

  """

  """
  lead: workItemCycleLeadTime

  """

  """
  particleId: ID

  """

  """
  particleType: String

  """

  """
  startTime: Date

  """

  """
  history: [IssueHistory]

  """

  """
  relations: [IssueRelation]

  """

  """
  timeEstimate: Int
}

"""

"""
type workItemCycleLeadTime {
  """

  """
  duration: Float

  """

  """
  start: Date

  """

  """
  end: Date
}

"""

"""
type IssueHistory {
  """

  """
  timestamp: Float

  """

  """
  content: IssueHistoryContent
}

"""

"""
type IssueHistoryContent {
  """

  """
  field: String

  """

  """
  type: String

  """

  """
  from: JSON

  """

  """
  to: JSON

  """

  """
  user: String

  """

  """
  userDisplayName: String
}

"""

"""
type IssueRelation {
  """

  """
  id: String

  """

  """
  type: String
}

"""

"""
type IssueDataQueryResponse {
  """

  """
  nodes: [IssueData!]!

  """

  """
  pageInfo: PageInfo!
}

"""

"""
type IssueData {
  """

  """
  _id: ID!

  """

  """
  type: String

  """

  """
  trackerId: ID!

  """

  """
  tenantId: ID!

  """

  """
  issue: IssueDataItem!
}

"""

"""
type IssueDataItem {
  """

  """
  _id: String!

  """

  """
  id: String!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  status: String!

  """

  """
  url: String!

  """

  """
  creator: String!

  """

  """
  owner: String

  """

  """
  created: Date!

  """

  """
  lastUpdate: Date!

  """

  """
  type: String!

  """

  """
  normalizedType: IssueNormalizedType!

  """

  """
  priority: String

  """

  """
  versionIds: [String]

  """

  """
  components: [String]

  """

  """
  labels: [String]

  """

  """
  storyPoints: Float

  """

  """
  releases: [IssueRelease]

  """

  """
  sprints: [IssueSprint]

  """

  """
  project: IssueProject

  """

  """
  epic: String

  """
  When the issue was marked as resolved in the tool it comes from
  """
  resolved: Date

  """
  measurement of how critical this issue is
  """
  severity: IssueSeverity

  """
  measurement of how widespread this issue is
  """
  impact: IssueImpact

  """
  text describing what the resolution was
  """
  resolution: String

  """
  business value attached to the issue as represented in the originating tool
  """
  businessValue: Float
}

"""

"""
type IssueProject {
  """

  """
  id: String

  """

  """
  key: String

  """

  """
  name: String
}

"""

"""
input IssuesFilter {
  """

  """
  tenantId: ID!

  """

  """
  internalIds: [ID]

  """

  """
  skip: Int = 0

  """

  """
  limit: Int = 100
}

"""

"""
input IncidentChartQuery {
  """

  """
  filters: Filters

  """

  """
  groupBy: String

  """

  """
  summarizationInterval: SUMMARIZATION_INTERVAL

  """

  """
  summarizationOperation: SUMMARIZATION_OPERATION
}

"""

"""
input IncidentTableQuery {
  """

  """
  pagination: InsightsPaginationInput

  """

  """
  sort: InsightsSortOptions

  """

  """
  filters: IncidentTableFilters
}

"""

"""
input IncidentTableFilters {
  """

  """
  tenantId: ID

  """

  """
  customStartDate: Date

  """

  """
  customEndDate: Date

  """

  """
  relativeTime: RELATIVE_DATE_INTERVAL

  """

  """
  queryString: String
}

"""

"""
type IncidentTableQueryResponse {
  """

  """
  items: [IssueData!]

  """

  """
  count: Int
}

"""

"""
type issueDataForReleaseReadiness {
  """

  """
  _id: String

  """

  """
  issue: issueDataForReport
}

"""

"""
type issueDataForReport {
  """

  """
  _id: String

  """

  """
  id: String

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  type: String

  """

  """
  status: String

  """

  """
  labels: [JSON]

  """

  """
  priority: String

  """

  """
  relations: [JSON]

  """

  """
  created: Date

  """

  """
  creator: String

  """

  """
  history: [JSON]

  """

  """
  releases: [JSON]
}

"""

"""
input BuildTableQuery {
  """

  """
  category: String

  """

  """
  filters: BuildChartFilters

  """

  """
  pagination: InsightsPaginationInput

  """

  """
  sort: InsightsSortOptions
}

"""

"""
input BuildChartFilters {
  """

  """
  tenantId: ID

  """

  """
  teamIds: [String]

  """

  """
  tags: [String]

  """

  """
  appIds: [String]

  """

  """
  customStartDate: Date

  """

  """
  customEndDate: Date

  """

  """
  relativeTime: RELATIVE_DATE_INTERVAL

  """

  """
  queryString: String

  """

  """
  source: [String]

  """

  """
  status: [String]

  """

  """
  labels: [String]
}

"""

"""
type BuildDataQueryResponse {
  """

  """
  items: [BuildData]

  """

  """
  count: Int
}

"""

"""
type BuildData {
  """

  """
  _id: ID

  """

  """
  id: String

  """

  """
  name: String

  """

  """
  status: String

  """

  """
  url: String

  """

  """
  startTime: Date

  """

  """
  endTime: Date

  """

  """
  requestor: String

  """

  """
  revision: String

  """

  """
  number: Int

  """

  """
  labels: [String]

  """

  """
  source: String

  """

  """
  branch: String

  """

  """
  parameters: [BuildParam]

  """

  """
  application: BuildApplication
}

"""

"""
type BuildParam {
  """

  """
  name: String!

  """

  """
  value: String!

  """

  """
  source: String
}

"""

"""
type BuildApplication {
  """

  """
  id: ID

  """

  """
  externalId: ID

  """

  """
  name: String
}

"""

"""
input BuildChartQuery {
  """

  """
  groupBy: String

  """

  """
  summarizationInterval: SUMMARIZATION_INTERVAL

  """

  """
  summarizationOperation: SUMMARIZATION_OPERATION

  """

  """
  filters: BuildChartFilters

  """

  """
  category: String
}

"""

"""
input BasicVersionsIn {
  """

  """
  id: String!

  """

  """
  name: String!
}

"""

"""
type VersionData {
  """

  """
  _id: ID

  """

  """
  id: String

  """

  """
  name: String

  """

  """
  appId: String

  """

  """
  parameters: [VersionDataParameter]

  """

  """
  startTime: Date

  """

  """
  endTime: Date

  """

  """
  created: Date

  """

  """
  url: String

  """

  """
  tenantId: String

  """

  """
  children: [ChildVersionData]
}

"""

"""
type VersionDataParameter {
  """

  """
  name: String

  """

  """
  value: String
}

"""

"""
type ChildVersionData {
  """

  """
  externalId: String

  """

  """
  name: String!

  """

  """
  created: Date

  """

  """
  url: String

  """

  """
  application: VersionApplication
}

"""

"""
type InventoryData {
  """

  """
  _id: ID

  """

  """
  id: String

  """

  """
  environmentId: String

  """

  """
  applicationId: String

  """

  """
  url: String

  """

  """
  status: String

  """

  """
  versionName: String

  """

  """
  versionId: ID

  """

  """
  startTime: Date

  """

  """
  endTime: Date

  """

  """
  creationDate: Date

  """

  """
  externalVersions: [InventoryExternalVersions!]

  """

  """
  tenantId: String
}

"""

"""
type InventoryExternalVersions {
  """

  """
  appId: String

  """

  """
  versions: [InventoryExternalVersion!]
}

"""

"""
type InventoryExternalVersion {
  """

  """
  id: String

  """

  """
  name: String
}

"""

"""
type MetricsOut {
  """

  """
  _id: ID

  """
  tenant_id: String @rename(to: "tenantId")
  """
  tenantId: String

  """
  ID of the integration that supplied the data if any
  """
  integrationId: String

  """
  The environment the data was gathered in
  """
  environment: String

  """
  The display name for the entire set of records
  """
  dataSet: String!

  """
  The application this metric is associated with
  """
  application: Application

  """
  The value stream this metric is associated with
  """
  workflowId: ID

  """

  """
  build: Build

  """

  """
  record: MetricsRecord

  """

  """
  pullRequestId: String

  """

  """
  commitId: String

  """

  """
  particleId: String
}

"""

"""
type Application {
  """

  """
  _id: ID

  """

  """
  id: String

  """

  """
  external_id: ID

  """

  """
  externalId: ID

  """

  """
  name: String

  """

  """
  active: Boolean

  """

  """
  type: String

  """

  """
  integration_id: String
}

"""

"""
type Build {
  """

  """
  id: ID

  """

  """
  source: String

  """

  """
  url: String

  """

  """
  jobExternalId: String

  """

  """
  buildId: String

  """

  """
  name: String

  """

  """
  versionName: String
}

"""

"""
type MetricsRecord {
  """

  """
  recordName: String

  """

  """
  dataFormat: String

  """
  category: String @rename(to: "metricDefinition")
  """
  metricDefinition: String

  """

  """
  pluginType: String

  """

  """
  value: JSON

  """

  """
  valueNormalized: [NormalValue]

  """
   The original values that were provided prior to any normalization or formatting, kept for historical and anaylsis reasons
  """
  originalValue: JSON

  """

  """
  originalValueNormalized: JSON

  """

  """
  entries: [JSON]

  """

  """
  metricsRecordUrl: String

  """

  """
  metricsRecordId: String

  """

  """
  executionDate: Date

  """

  """
  executionDateIso: Date

  """

  """
  description: String
}

"""

"""
input MetricDefinitionsQuery {
  """

  """
  tenantId: String!

  """
   If checkEnabled is true, then it will return metric definitions that are not enabled as well
  """
  checkEnabled: Boolean

  """

  """
  ids: [String]

  """

  """
  chartableDisplayTypes: [String!]

  """

  """
  workflowId: ID

  """

  """
  pipelineId: ID
}

"""

"""
type MetricDefinition {
  """

  """
  name: String!

  """
   id from the database. Will be used to link instances to definitions. Can be custom defined by user to be human readable
  """
  id: String!

  """
  which category the metric falls into. This will be the collapsable menu in
  the metrics manager, i.e. 'Quality', 'Efficiancy' etc.. defined by Velocity
  Note: not defined by user
  """
  category: CATEGORY!

  """

  """
  tenantId: String!

  """
  will determine the expected value of the metric data
  """
  valueType: VALUE_TYPE!

  """
  used so that the ui knows what kind of query it should use
  this is something that can probably be hard coded and any
  user defined metrics will just have QUERY_TYPE.metric type.
  But we need this so that the deploy and build charts know
  that they need to use their own queries instead of the metrics
  one.
  """
  queryType: QUERY_TYPE!

  """
  Default settings related to chart state. Chart defaults are required
  in order for a metric definition to show up as a chart in insights
  """
  chartDefaults: ChartDefaults

  """
   default settings related to metric bar state
  """
  metricBarDefaults: MetricBarDefaults

  """
   default settings for handling aggregation logic
  """
  aggregation: Aggregation

  """
   whether or not the metric definition was defined as a system default or by a user
  """
  isCustom: Boolean!

  """
   the user who created the definition, currently is opt in
  """
  createdBy: String

  """
   the time when the definition was created. Defaults to new Date().getTime()
  """
  createdAt: String

  """
   whether or not a definition is enabled, used for a soft 'delete'
  """
  isEnabled: Boolean!

  """
  Filters include all the ways you can filter out values for a given metric and are generated based on the data
  To improve performance if you only want certain filters it is recommended you use the `filterIds` argument to
  select only the filters you need, or else it will collect all possible filters. The available filterIds for each
  metric type are as follows:
  * __Metric__: "dataSet", "environment", "value"
  * __Deploy__: "type", "environment_name", "name" (for process name), "result", "by_user", "version_name"
  * __Build__: "source", "labels", "status"
  """
  filters(filterIds: [String!]): [MetricDefinitionFilter]!

  """
   used for sorting and coloring in the values during UI presentation
  """
  knownValues: [MetricValue!]

  """
   allow or reject unknown metric values
  """
  allowUnknownValues: Boolean

  """
   used to describe a custom metric definition
  """
  description: String

  """
   used for sorting metric definitions
  """
  sortIndex: Int

  """

  """
  chartables(displayTypes: [ChartableDisplayType!]): [Chartable!]!

  """

  """
  integrationId: String

  """
   status rule configs
  """
  configs: JSON

  """
   metricType would be kpi or metric
  """
  metricType: String
}

"""

"""
enum CATEGORY {
  """

  """
  quality

  """

  """
  effort

  """

  """
  team

  """

  """
  deliveryFlow

  """

  """
  risk

  """

  """
  custom

  """

  """
  beta

  """

  """
  dora
}

"""

"""
enum VALUE_TYPE {
  """

  """
  percent

  """

  """
  countset

  """

  """
  count

  """

  """
  entries
}

"""

"""
enum QUERY_TYPE {
  """

  """
  build

  """

  """
  deploy

  """

  """
  metric

  """

  """
  vsmMetric

  """

  """
  incident

  """

  """
  cfr
}

"""

"""
type ChartDefaults {
  """

  """
  groupBy: String!

  """

  """
  chartType: CHART_TYPE!

  """

  """
  barMode: BAR_MODE

  """

  """
  barNorm: BAR_NORM

  """

  """
  threshold: Float

  """

  """
  yAxisTitle: String
}

"""
 ENUMS
"""
enum CHART_TYPE {
  """

  """
  bar

  """

  """
  line
}

"""

"""
enum BAR_MODE {
  """

  """
  stack

  """

  """
  group
}

"""

"""
enum BAR_NORM {
  """

  """
  relative

  """

  """
  percent
}

"""

"""
type MetricBarDefaults {
  """
   used to determine how metric values are calculated (examples: mostRecent, average, total)
  """
  calculationType: CALCULATION_TYPE

  """
   used to configure how the metric is rendered in the user interface
  """
  displayType: DISPLAY_TYPE
}

"""

"""
type Aggregation {
  """

  """
  operation: String!

  """

  """
  collapseMultipleDailyRuns: Boolean
}

"""

"""
type MetricValue {
  """

  """
  name: String!

  """
   lower equals more important
  """
  order: Int

  """
   The color use
  """
  color: String

  """
   synonyms for the value. Synonyms will be mapped to this values name
  """
  synonyms: [String!]
}

"""

"""
enum ChartableDisplayType {
  """

  """
  simpleStringMetric

  """

  """
  plotly

  """

  """
  mongoPaginate

  """

  """
  chartableNumber

  """

  """
  chartableCountSet
}

"""

"""
input MetricsChartQuery {
  """

  """
  groupBy: String

  """

  """
  summarizationInterval: SUMMARIZATION_INTERVAL

  """

  """
  summarizationOperation: SUMMARIZATION_OPERATION

  """

  """
  filters: ChartFilters

  """

  """
  pagination: InsightsPaginationInput

  """

  """
  metricDefinition: String

  """

  """
  sort: InsightsSortOptions
}

"""

"""
input ChartFilters {
  """

  """
  tenantId: ID!

  """

  """
  teamIds: [String]

  """

  """
  tags: [String]

  """

  """
  appIds: [String]

  """

  """
  customStartDate: Date

  """

  """
  customEndDate: Date

  """

  """
  relativeTime: RELATIVE_DATE_INTERVAL

  """

  """
  queryString: String

  """

  """
  dataSet: [String]

  """

  """
  value: [String]

  """

  """
  environment: [String]

  """

  """
  workflowId: ID
}

"""

"""
type MetricsQueryResponse {
  """

  """
  items: [MetricsOut]

  """

  """
  count: Int
}

"""

"""
input MetricDefinitionQuery {
  """

  """
  id: String

  """

  """
  name: String

  """

  """
  tenantId: String!

  """
   If checkEnabled is true, then it will return metric definitions that are not enabled as well
  """
  checkEnabled: Boolean

  """

  """
  workflowId: ID

  """

  """
  pipelineId: ID
}

"""
 INPUTS
"""
input ReportArtifactQuery {
  """

  """
  id: ID!

  """

  """
  tenantId: String!
}

"""

"""
type ReportArtifact {
  """

  """
  _id: String

  """

  """
  title: String

  """

  """
  type: String

  """

  """
  description: String

  """

  """
  icon: String

  """

  """
  resources: Resources

  """

  """
  tenantId: ID

  """

  """
  active: Boolean

  """

  """
  deleted: Boolean

  """

  """
  createdBy: String

  """

  """
  createdAt: Date

  """

  """
  lastModifiedAt: Date

  """

  """
  lastModifiedBy: String
}

"""
 TYPES
"""
type Resources {
  """

  """
  templates: [JSON]

  """

  """
  params: JSON

  """

  """
  query: String

  """

  """
  createdBy: String

  """

  """
  createdAt: Date

  """

  """
  lastModifiedAt: Date

  """

  """
  lastModifiedBy: String
}

"""

"""
input ReportArtifactsQuery {
  """

  """
  tenantId: String!
}

"""
 INPUTS
"""
input DashboardQuery {
  """

  """
  id: String!

  """

  """
  tenantId: String!
}

"""
 TYPES
"""
type Dashboard {
  """

  """
  id: ID

  """

  """
  createdBy: String

  """

  """
  createdAt: Date

  """

  """
  title: String

  """

  """
  icon: String

  """

  """
  description: String

  """

  """
  lastModifiedAt: Date

  """

  """
  lastModifiedBy: String

  """

  """
  history: [JSON]

  """

  """
  tenantId: ID

  """

  """
  charts: [DashboardChartInstance]

  """

  """
  filters: DashboardFilters

  """

  """
  layouts: JSON

  """

  """
  integrationId: String
}

"""

"""
union DashboardChartInstance = ChartInstance | ChartableDashboardInstance

"""

"""
type ChartInstance {
  """

  """
  id: String!

  """

  """
  metricDefinition: String!

  """

  """
  groupBy: String

  """

  """
  chartType: CHART_TYPE

  """

  """
  barMode: BAR_MODE

  """

  """
  barNorm: BAR_NORM

  """

  """
  threshold: Float

  """

  """
  title: String

  """

  """
  filters: [ChartFilter]
}

"""

"""
type ChartFilter {
  """

  """
  id: String!

  """

  """
  values: [String]
}

"""

"""
type ChartableDashboardInstance {
  """

  """
  id: ID!

  """

  """
  title: String

  """

  """
  metricDefinition: ID!

  """

  """
  chartableId: ID!

  """

  """
  drillDowns: [ChartableDashboardInstance!]
}

"""

"""
type DashboardFilters {
  """

  """
  teams: [String!]!

  """

  """
  apps: [ID!]!

  """

  """
  vsms: [ID!]!

  """

  """
  dateFilter: DateFilter!

  """

  """
  groupBy: DashboardGroupBy
}

"""

"""
type DateFilter {
  """

  """
  relativeDate: RELATIVE_DATE_INTERVAL!

  """

  """
  customStart: Date!

  """

  """
  customEnd: Date!
}

"""

"""
type DashboardGroupBy {
  """

  """
  date: SUMMARIZATION_INTERVAL
}

"""

"""
input DashboardsQuery {
  """

  """
  tenantId: String!
}

"""

"""
input ChartableFiltersIn {
  """

  """
  dql: String
}

"""

"""
input ChartableVariablesIn {
  """

  """
  name: String!

  """

  """
  value: JSON
}

"""

"""
type PipelineGate {
  """

  """
  _id: ID!

  """

  """
  pipelineId: ID!

  """

  """
  stageId: ID!

  """

  """
  rules: [Rule!]!

  """

  """
  manualGateNotification: Boolean!
}

"""

"""
type Rule {
  """

  """
  ruleType: RuleType!
}

"""

"""
union RuleType =
    ManualVersionSignOff
  | AutomatedMetricCriterion
  | ComplianceRule
  | StatusRule

"""

"""
type ManualVersionSignOff {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  pipelineId: ID!

  """

  """
  approvers: [Approver!]!
}

"""

"""
type Approver {
  """

  """
  _id: String!

  """

  """
  name: String!

  """

  """
  users: [Approver!]

  """

  """
  type: APPROVER_TYPE!
}

"""

"""
enum APPROVER_TYPE {
  """

  """
  user

  """

  """
  group
}

"""

"""
type AutomatedMetricCriterion {
  """

  """
  _id: ID!

  """

  """
  pipelineId: ID!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  metricDefinition: RuleMetricDefinition!

  """

  """
  dataSet: String

  """

  """
  dql: DqlDefinition!

  """

  """
  timeRange: TimeRangeData
}

"""

"""
type RuleMetricDefinition {
  """

  """
  id: String!

  """

  """
  name: String!
}

"""

"""
type DqlDefinition {
  """

  """
  type: METRIC_CRITERION_OPERATOR!

  """

  """
  data: DqlData!
}

"""

"""
enum METRIC_CRITERION_OPERATOR {
  """

  """
  EQUALS

  """

  """
  NOT_EQUALS

  """

  """
  GREATER_THAN

  """

  """
  LESS_THAN
}

"""

"""
type DqlData {
  """

  """
  field: String!

  """

  """
  value: Int!
}

"""

"""
type TimeRangeData {
  """

  """
  type: String

  """

  """
  value: Int
}

"""

"""
type ComplianceRule {
  """

  """
  _id: ID!

  """

  """
  pipelineId: ID!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  resource: String!

  """

  """
  dql: DqlDefinition!
}

"""

"""
type StatusRule {
  """

  """
  _id: ID!

  """

  """
  pipelineId: ID!

  """

  """
  name: String!

  """

  """
  status: String!

  """

  """
  description: String
}

"""

"""
type RuleExecution {
  """

  """
  ruleExecutionType: RuleExecutionType!
}

"""

"""
union RuleExecutionType =
    ManualVersionSignOffExecution
  | AutomatedMetricCriterionExecution
  | ComplianceRuleExecution
  | StatusRuleExecution

"""

"""
type ManualVersionSignOffExecution {
  """

  """
  _id: ID!

  """

  """
  ruleId: ID!

  """

  """
  approver: Approver!

  """

  """
  applicationId: ID!

  """

  """
  versionId: ID!

  """

  """
  action: MANUAL_ACTION!

  """

  """
  executionDate: Date!
}

"""

"""
enum MANUAL_ACTION {
  """

  """
  approve

  """

  """
  reject

  """

  """
  override
}

"""

"""
type AutomatedMetricCriterionExecution {
  """

  """
  ruleId: ID!

  """

  """
  applicationId: ID!

  """

  """
  versionId: ID!

  """

  """
  result: AUTOMATED_RULE_EXECUTION_RESULT!

  """

  """
  executionDate: Date!
}

"""

"""
enum AUTOMATED_RULE_EXECUTION_RESULT {
  """

  """
  pass

  """

  """
  fail
}

"""

"""
type ComplianceRuleExecution {
  """

  """
  ruleId: ID!

  """

  """
  applicationId: ID!

  """

  """
  versionId: ID!

  """

  """
  result: AUTOMATED_RULE_EXECUTION_RESULT!
}

"""

"""
type StatusRuleExecution {
  """

  """
  ruleId: ID!

  """

  """
  applicationId: ID!

  """

  """
  versionId: ID!

  """

  """
  result: AUTOMATED_RULE_EXECUTION_RESULT!

  """

  """
  isStatusRule: Boolean
}

"""

"""
type ApplicationVersion {
  """

  """
  applicationId: ID!

  """

  """
  versionId: ID!
}

"""

"""
input ApplicationVersionIn {
  """

  """
  applicationId: ID!

  """

  """
  versionId: ID!
}

"""

"""
type VSMVersionResponse {
  """

  """
  items: [VSMVersion!]!

  """

  """
  count: Int!
}

"""

"""
type VSMVersion {
  """
  The ObjectId of the workflow this version is for
  """
  workflowId: ID!

  """
  version number starting at 1
  """
  version: Int!

  """
  The name of the VSM for quick access
  """
  name: String!

  """
  The description of the VSM for quick access
  """
  description: String

  """
  The username of the user who made the changes
  """
  user: String!

  """
  When the changes were made in milliseconds
  """
  timestamp: Date!

  """
  changes represents a diff from the more recent version to the previous one,
  so in order to construct an older version using changes use the current workflow
  from the workflow collection as the starting point and apply the changes from the
  most recent version going backwards to the desired version. Null values represent
  a deleted value. The first version will have changes of `{}` since their can't be
  an older version than 1 to compare to.
  """
  changes: JSON!
}

"""

"""
type Feature {
  """
  The ID from the original tool, will be the same as the issueId
  """
  id: ID!

  """

  """
  tenantId: ID!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  status: String!

  """

  """
  url: String!

  """

  """
  integrationIds: [ID!]!

  """
  The link back to the original workItem imported by plugins
  Saved as ID in DB but resolved as issue in resolvers
  """
  creator: String!

  """

  """
  created: Date!

  """
  The original type provided by the external tool
  """
  type: String!
}

"""

"""
type ExtConfigFileOutput {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  path: String!

  """

  """
  sha: String!

  """

  """
  url: String!

  """

  """
  encoding: String!

  """

  """
  branch: String!

  """

  """
  source: String!

  """

  """
  isActive: Boolean!

  """

  """
  tenantId: String!

  """

  """
  lastUpdated: Date!

  """

  """
  versionData: [ExtConfigFileVersionResponse!]

  """

  """
  executionData: [ExtConfigFileExecutionResponse]
}

"""

"""
type ExtConfigFileVersionResponse {
  """

  """
  versionId: String!

  """

  """
  externalVersionId: String!
}

"""

"""
type ExtConfigFileExecutionResponse {
  """

  """
  id: String!

  """

  """
  versionId: String!

  """

  """
  externalVersionId: String!

  """

  """
  resourcesCreated: JSON

  """

  """
  status: String!

  """

  """
  timeSpan: Date

  """

  """
  lastUpdated: Date!

  """

  """
  lastApplied: Date
}

"""

"""
type SolutionVersionDataOut {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  published: Int

  """

  """
  inventory: [SolutionVersionInventoryOut]
}

"""

"""
type SolutionVersionInventoryOut {
  """

  """
  appName: String

  """

  """
  appId: ID

  """

  """
  versionName: String

  """

  """
  versionId: ID
}

type Mutation {
  """

  """
  addReleaseEvent(
    name: String!
    team: teamInput!
    templates: [templateInput]
    start: Date!
    end: Date!
    description: String
    tags: [ID]
    newRegularTags: [regularTagInput]
    planName: String
    isEvent: Boolean
    summary: String
    lastSummaryOn: Date
  ): ReleaseEvent

  """

  """
  copyReleaseEvent(
    _id: ID!
    newName: String
    newDescription: String
    newStart: Date
    newEnd: Date
    newSummary: String
    newlastSummaryOn: Date
  ): ReleaseEvent

  """

  """
  createPlanTemplate(
    teamId: String!
    name: String
    description: String
    autoStart: Boolean
  ): DeploymentPlan

  """

  """
  scheduleDeployment(
    templateId: String
    teamId: String!
    scheduledDate: Date
    deploymentName: String
    description: String
    releaseEventId: ID
    userTags: [String]
  ): DeploymentPlan

  """

  """
  addCalendarTag(
    name: String!
    orgId: String!
    color: ReleaseTagColor!
    category: ReleaseTagCategory!
    shape: ReleaseTagShape!
    priority: Int!
  ): ReleaseCalendarTag

  """

  """
  updateReleaseEvent(
    _id: ID!
    name: String!
    team: teamInput!
    start: Date!
    end: Date!
    status: ReleaseStatus!
    description: String
    tags: [ID]
    newRegularTags: [regularTagInput]
    summary: String
    lastSummaryOn: Date
  ): ReleaseEvent

  """

  """
  updateCalendarTag(
    tagId: ID!
    name: String!
    orgId: String!
    color: ReleaseTagColor!
    category: ReleaseTagCategory!
    shape: ReleaseTagShape!
    priority: Int!
  ): ReleaseCalendarTag

  """

  """
  updateCalendarTagsPriorities(
    newPriorities: [calendarTagPriorityInput!]!
  ): [ReleaseCalendarTag]

  """

  """
  updateDeployment(
    planId: String!
    teamId: String!
    scheduledDate: Date
    deploymentName: String
    description: String
    releaseEventId: ID
    userTags: [String]
  ): DeploymentPlan

  """

  """
  updateDeploymentProperties(
    planId: String!
    properties: [propertyInput]
  ): DeploymentPlan

  """

  """
  setDeploymentScheduledDate(
    planId: String!
    scheduledDate: Date
    teamId: String!
  ): DeploymentPlan

  """

  """
  deleteReleaseEvent(
    _id: ID!
    deploymentStatus: ArchiveDeploymentStatus!
  ): ReleaseEvent

  """

  """
  deleteDeploymentTemplate(planId: String): String

  """

  """
  deleteDeploymentPlan(planId: String): String

  """

  """
  archiveReleaseTag(tagId: ID!): ReleaseTag

  """

  """
  restoreReleaseEvent(_id: ID!): ReleaseEvent

  """

  """
  restoreDeploymentPlan(planId: String!): String

  """

  """
  setDeploymentAsTemplate(planId: String!): DeploymentPlan

  """

  """
  addPlanTask(
    planId: String!
    taskType: TaskType!
    name: String!
    extraProperties: ExtraPropertiesInput
  ): Task

  """

  """
  startPlanTask(taskId: Int!, planId: String!): Task

  """

  """
  skipPlanTask(taskId: Int!, planId: String!): Task

  """

  """
  failPlanTask(taskId: Int!, planId: String!): Task

  """

  """
  completePlanTask(taskId: Int!, planId: String!): Task

  """

  """
  reopenPlanTask(taskId: Int!, planId: String!): Task

  """

  """
  approvePlanTask(taskId: Int!, planId: String!): Task

  """

  """
  rejectPlanTask(taskId: Int!, planId: String!): Task

  """

  """
  copyDeploymentPlan(planId: String!, releaseEventId: ID): DeploymentPlan

  """

  """
  parseCsvUpload(
    fileContent: String!
    fileName: String!
    orgId: String!
    timeZone: String!
  ): ImportEventsConnection

  """

  """
  updateReleaseIssueTracker(
    _id: ID!
    trackerInfo: ReleaseIssueTrackerInput
  ): ReleaseEvent

  """

  """
  updateShowPlanEditMsg(_id: ID!): ReleaseEvent

  """

  """
  testIssueUrl(url: String!, tenantId: ID!): IssueUrlTestResult

  """

  """
  updateReleaseLock(_id: ID!, releaseLock: Boolean): ReleaseEvent

  """

  """
  updateTaskUrl(taskId: ID!, planId: ID!, url: String!): Task

  """

  """
  updateSmtpSettings(tenantId: ID!, settings: SmtpSettingsInput!): Boolean

  """

  """
  deleteSmtpSettings(tenantId: ID!): Boolean

  """

  """
  migrateLegacyJenkinsAppData(
    sourceIntegrationId: ID!
    targetIntegration: JenkinsMigrateAppIntegration!
    tenantId: ID!
    pageSize: Int!
    dryRun: Boolean! = false
  ): JSON

  """

  """
  uploadAgents(agents: [UploadAgentInput]!): [AgentData]

  """

  """
  updateApplication(
    id: ID!
    tenantId: ID!
    input: UpdateApplicationInput!
  ): ApplicationData

  """

  """
  uploadApplications(applications: [UploadApplicationInput]!): [ApplicationData]

  """

  """
  uploadEnvironments(environments: [UploadEnvironmentInput]!): [EnvironmentData]

  """

  """
  storeExecutions(executions: [StoreExecutionInput]!): [ExecutionData]

  """

  """
  uploadProcesses(processes: [UploadProcessInput]!): [ProcessData]

  """

  """
  uploadVersions(versions: [UploadVersionInput]!): [AppVersionData]

  """

  """
  uploadStatuses(statuses: [UploadStatusInput]!): [StatusData]

  """

  """
  updateInventories(inventories: [UploadInventoryInput]!): [EnvironmentData]

  """

  """
  removeApplicationsByIntegrationId(integrationId: String!): Boolean

  """

  """
  updateProcessActiveStatusByIntegrationId(
    integrationId: String!
    status: Boolean!
  ): Boolean

  """

  """
  addNewTenant: ID

  """
  create a new team in the tenant
  """
  addNewTeam(name: String!, tenantId: ID!): SecurityTeam

  """

  """
  addNewOidcAuthProvider(
    name: String!
    tenantId: ID!
    type: String!
    description: String
    issuer: String!
    authorizationUrl: String
    tokenUrl: String
    userInfoUrl: String!
    clientId: String
    clientSecret: String
  ): [SecurityAuthProvider]

  """

  """
  addNewSsoAuthProvider(
    name: String!
    type: String!
    userHeaderName: String!
    emailHeaderName: String!
    description: String!
    logoutUrl: String!
  ): [SecurityAuthProvider]

  """

  """
  addNewLdapAuthProvider(
    name: String!
    tenantId: ID!
    type: String!
    ldapUrl: String!
    searchBase: String!
    searchFilter: String!
    searchAnonCheckbox: Boolean
    bindDN: String
    bindCredentials: String
    searchScope: String!
    nameAttr: String!
    emailAttr: String!
    bindProperty: String
    description: String
    roleDefinition: String!
    groupSearchBase: String
    groupSearchFilter: String
    groupNameAttribute: String
    groupDNAttribute: String
    searchGroupSubtree: Boolean
    userGroupAttribute: String
  ): [SecurityAuthProvider]

  """

  """
  importLdapUsers(
    namePattern: String!
    ldapId: ID!
    tenantId: ID!
  ): [SecurityUser]

  """

  """
  addNewUser(
    email: String!
    password: String!
    firstname: String
    lastname: String
    reservedParticipant: Boolean
  ): SecurityUser

  """

  """
  deleteTeam(tenantId: ID!, teamId: ID!): Boolean

  """

  """
  deleteAuthProvider(authId: String!): Boolean

  """

  """
  deleteGroup(tenantId: ID!, groupId: ID!): Boolean

  """
  add a user to a team and optionally give them a role
  """
  addUserToTeam(
    tenantId: ID!
    teamId: ID!
    userEmail: String!
    roles: [String]
    roleIds: [ID!]
  ): SecurityTeam

  """

  """
  addUsersToTeam(
    tenantId: ID!
    teamId: ID!
    userEmails: [String!]!
    roles: [String]
    roleIds: [ID!]
  ): SecurityTeam

  """
  add a group to a team and optionally give them a role
  """
  addGroupToTeam(
    tenantId: ID!
    teamId: ID!
    groupId: ID!
    roles: [String]
    roleIds: [ID!]
  ): SecurityTeam

  """
  remove a user from a team and all their roles
  """
  removeUserFromTeam(
    tenantId: ID!
    teamId: ID!
    userEmail: String!
  ): SecurityTeam

  """
  remove a group from a team and all their roles
  """
  removeGroupFromTeam(tenantId: ID!, teamId: ID!, groupId: ID!): SecurityTeam

  """
  remove a role from a user on a team
  """
  removeUserFromTeamRole(
    tenantId: ID!
    teamId: ID!
    userEmail: String!
    roleId: ID!
  ): SecurityTeam

  """
  remove a role from a group on a team
  """
  removeGroupFromTeamRole(
    tenantId: ID!
    teamId: ID!
    groupId: ID!
    roleId: ID!
  ): SecurityTeam

  """

  """
  addNewGroups(
    tenantId: ID!
    names: [String]
    teamId: ID
    roles: [String]
    roleIds: [ID!]
  ): [Group]

  """

  """
  addUserToGroup(tenantId: ID!, groupId: ID!, userEmail: String!): SecurityUser

  """

  """
  removeUserFromGroup(tenantId: ID!, groupId: ID!, userEmail: String!): Group

  """

  """
  renameTeam(tenantId: ID!, teamId: ID!, newName: String!): SecurityTeam

  """

  """
  renameGroup(tenantId: ID!, groupId: ID!, newName: String!): Group

  """

  """
  deleteUser(userId: ID!, tenantId: ID!): Boolean

  """

  """
  updateUser(
    userId: ID!
    tenantId: ID!
    email: String
    newFirstName: String
    newLastName: String
    reservedParticipant: Boolean
  ): SecurityUser

  """

  """
  setExternalUserToken(
    userEmail: String!
    integrationId: ID!
    token: String!
  ): Boolean

  """

  """
  updateUserLockout(
    userId: ID!
    lockoutUTCTimestamp: Float
    failedAuthCount: Int
  ): SecurityUser

  """

  """
  updatePassword(tenantId: ID!, userId: ID!, newPassword: String!): Boolean

  """

  """
  updateUserSettings(userId: ID!, settings: UserSettingsIn!): SecurityUser

  """

  """
  deleteFavoriteVSMForAllUsers(workflowId: ID!): Int!

  """

  """
  deleteFavoriteDashboardForAllUsers(id: ID!): Int!

  """

  """
  deleteActiveVSMFiltersForAllUsers(workflowId: ID!): Int!

  """

  """
  deleteCurrentVSMViewsForAllUsers(workflowId: ID!): Int!

  """

  """
  deleteRecentlyAccessedVSMForAllUsers(workflowId: ID!): Int!

  """

  """
  deleteCollapsedPhasesForAllUsers(workflowId: ID!): Int!

  """

  """
  updateAccountSetting(
    tenantId: ID!
    name: String!
    value: Boolean!
  ): AccountSetting

  """

  """
  updateAccountLockoutSettings(
    tenantId: ID!
    userLockoutAttempts: Int!
    userLockoutHours: Int!
  ): AccountLockoutSettings

  """

  """
  updateSessionExpirationSetting(
    tenantId: ID!
    sessionExpirationMinutes: Int!
  ): SessionExpirationSetting

  """

  """
  updatePluginIndexProxySetting(tenantId: ID!, url: String): String

  """

  """
  updateFeatureFlags(featureFlags: [FeatureFlagIn]!): [EnabledFeatureFlag]

  """

  """
  updateRolesInTeam(
    teamId: ID!
    userEmail: String
    groupId: ID
    roles: [String]
    roleIds: [ID!]
  ): SecurityTeam

  """

  """
  addResourceToTeam(
    tenantId: ID!
    teamId: ID!
    resourceTypeId: String!
    resourceTypeName: String!
    resourceExternalId: String!
    resourceId: String!
    resourceName: String!
    resourceRoleId: String!
  ): SecurityTeam

  """

  """
  createMyUserAccessKey(name: String!): AccessKey

  """

  """
  deleteUserAccessKey(userId: String, id: String!, tenantId: ID!): Boolean

  """

  """
  addSecurityRole(
    tenantId: ID!
    name: String!
    description: String
    scope: SECURITY_SCOPE!
    permissions: [String!]!
  ): SecurityRole

  """

  """
  editSecurityRole(
    id: ID!
    name: String
    description: String
    permissionsToSet: [String]
    permissionsToAdd: [String]
    permissionsToRemove: [String]
  ): SecurityRole

  """

  """
  deleteSecurityRole(id: ID!): Boolean

  """

  """
  setRolesForUser(roleIds: [ID]!, userEmail: String!): SecurityUser

  """

  """
  setRolesForTeamUser(
    roleIds: [ID]!
    userEmail: String!
    teamId: ID!
  ): SecurityUser

  """

  """
  setRolesForGroup(roleIds: [ID]!, groupId: ID!): Group

  """

  """
  setRolesForTeamGroup(roleIds: [ID]!, groupId: ID!, teamId: ID!): Group

  """

  """
  setUsersAndGroupsForRole(
    roleId: ID!
    userEmails: [String!]!
    groupIds: [ID!]!
  ): SecurityRoleUsersAndGroupsConnection

  """

  """
  updateAccessKey(key: String): MutationResult

  """

  """
  extendGracePeriod(token: String!): Date!

  """

  """
  setLicenseServerConfig(
    settings: LicenseServerConfigInput!
  ): LicenseServerConfig

  """

  """
  editApplication(
    pipelineId: ID!
    appId: ID!
    description: String
    selectedChildren: [ID]
    versionRegEx: String
  ): Pipeline

  """

  """
  updateVersionParameters(
    pipelineId: ID!
    versionId: ID!
    parameters: [VersionParameterInput]
  ): Boolean

  """

  """
  updateEnvironmentPlanStatus(
    pipelineId: ID!
    environmentId: ID!
    planId: ID!
    planStatus: String!
    appsAndVersions: [AppVersionInput]
    applications: [ApplicationsInput]
    executingEmail: String
  ): [String]

  """

  """
  runEnvironmentPlan(
    pipelineId: ID!
    environmentId: ID!
    applications: [AppInput]
    sourceStageId: ID
  ): String

  """

  """
  runDeploymentPlanWithSolution(
    pipelineId: ID!
    environmentId: ID!
    solutionVersionId: ID!
  ): String

  """

  """
  overrideInventory(
    pipelineId: ID!
    environmentId: ID!
    applications: [AppInput]
    solutionVersionId: ID
  ): String

  """

  """
  runApplicationStage(applicationId: ID!, stageId: ID!, type: String!): String

  """

  """
  deletePipeline(pipelineId: ID!): Boolean

  """

  """
  composeNewPipeline(
    pipelineId: ID
    pipelineName: String!
    pipelineDesc: String!
    organizationId: ID!
    team: TeamInput!
    defaultEnvironments: Boolean
  ): Pipeline

  """

  """
  editPipeline(
    pipelineId: ID!
    pipelineName: String
    pipelineDesc: String
    team: TeamInput
  ): Pipeline

  """

  """
  addApplications(
    pipelineId: ID!
    applications: [ApplicationInput]!
    processes: [ProcessInput]
    type: String!
  ): Pipeline

  """

  """
  removeApplications(pipelineId: ID!, applicationIds: [ID]!): Boolean

  """

  """
  convertToCombinedApplication(
    pipelineId: ID!
    applicationId: ID!
    applications: [ApplicationInput]!
    processes: [ProcessInput]
  ): Pipeline

  """

  """
  addApplicationInputStage(
    pipelineId: ID!
    applicationId: ID!
    subApplicationId: ID
    inputJobId: ID
  ): Boolean

  """

  """
  addApplicationStages(
    pipelineId: ID!
    stageId: String!
    environments: [EnvInput]!
  ): [PipelineApplicationStage]

  """

  """
  editApplicationStages(
    pipelineId: ID!
    applicationId: ID!
    stageId: ID!
    appStagesToAdd: [EnvInput]
    appStageIdsToRemove: [String]
  ): PipelineApplication

  """

  """
  deleteApplicationStages(
    pipelineId: ID!
    applicationId: ID!
    stageId: ID!
    applicationStageIds: [String]!
  ): Boolean

  """

  """
  scheduleDeploymentPlan(
    planId: ID!
    scheduleTime: Float!
    pipelineId: ID
    stageId: ID
    releaseId: ID
    manifest: [ManifestVersionInput]
    applications: [AppInput]
    deployContainer: String
    solutionVersionId: ID
  ): ScheduleDeploymentPlan

  """

  """
  cancelDeploymentPlan(planId: ID!): Boolean

  """

  """
  addPipelineStages(pipelineId: ID!, stages: [StageInput]!): [Stage]

  """

  """
  deletePipelineStages(pipelineId: ID!, stageIds: [ID]!): Pipeline

  """

  """
  updatePipelineStages(pipelineId: ID!, stages: [UpdateStageInput]!): [Stage]

  """
  stageId is the stage we are moving, targetStageId is where we will insert
  """
  reorderPipelineStages(
    pipelineId: ID!
    stageId: ID!
    targetStageId: ID
  ): [Stage]

  """

  """
  createVersion(
    pipelineId: ID!
    applicationId: ID!
    name: String!
    subApplicationId: ID
    parameters: [VersionParameterInput]
  ): Version

  """

  """
  saveParameters(
    pipelineId: ID!
    appId: ID!
    appStageId: ID!
    stageId: ID!
    parameters: [ParameterInput]!
  ): [PipelineApplicationStageParameter]

  """
  processIdMap in the form { $oldProcExternalId: { internalId, newExternalId, integrationId }}
  """
  migrateLegacyJenkinsPipelines(
    tenantId: ID!
    targetIntegrationId: ID!
    targetIntegrationName: String!
    processIdMap: JSON!
    pageSize: Int!
    dryRun: Boolean! = false
  ): Boolean

  """

  """
  linkSolutionVersion(
    pipelineId: ID!
    stageId: ID!
    solutionVersionId: ID!
  ): Boolean

  """

  """
  unlinkSolutionVersion(
    pipelineId: ID
    stageId: ID
    solutionVersionId: ID
  ): Boolean

  """

  """
  addUCDIntegration(
    tenantId: ID!
    name: String!
    ucdUrl: String!
    token: String!
    ucdProxyConfig: UCDProxyInput
  ): Integration

  """

  """
  editUcdIntegration(
    _id: String!
    name: String
    ucdUrl: String
    token: String
    ucdProxyConfig: UCDProxyInput
  ): Integration

  """

  """
  editIntegrations(
    ids: [ID!]!
    operation: EDIT_INTEGRATIONS_OPERATION!
    tenantId: ID!
  ): [Integration]

  """

  """
  addJenkinsIntegration(tenantId: ID!, name: String!): Integration

  """

  """
  editJenkinsIntegration(_id: String!, name: String!): Integration

  """

  """
  removeIntegration(_id: ID!, deleteLinkedData: Boolean): Integration

  """

  """
  restoreIntegration(_id: ID!, enable: Boolean! = false): Integration

  """

  """
  deletePlugin(_id: ID!): Boolean

  """

  """
  addIntegration(input: AddIntegrationInput!): Integration

  """

  """
  editIntegration(_id: ID!, input: EditIntegrationInput!): Integration

  """

  """
  updateIntegrationDisabledFlag(_id: ID!, disabled: Boolean): Integration

  """

  """
  setIntegrationResyncData(_id: ID!): Integration

  """

  """
  setIntegrationVersion(integrationId: ID!, version: SemVer = "latest"): SemVer

  """

  """
  installPlugin(
    pluginId: String
    image: String!
    releaseDate: Date
    docUrl: String
  ): Plugin

  """

  """
  updatePluginsIndex: Boolean

  """

  """
  runReport(
    reportId: ID!
    teamId: ID
    tenantId: ID
    properties: JSON
  ): ReportExecution

  """

  """
  setReportDefaultParams(reportId: ID!, properties: JSON): Report

  """

  """
  updateIntegrationState(
    integrationId: ID!
    eventName: String!
    properties: JSON
  ): Integration

  """

  """
  updateScheduledEventStates(
    integrationId: ID!
    scheduledEventStates: [ScheduledEventStateInput]!
  ): Integration

  """

  """
  resyncIntegration(integrationId: ID!): Integration

  """

  """
  migrateLegacyJenkinsIntegration(
    sourceIntegrationId: ID!
    targetIntegrationId: ID!
    dryRun: Boolean! = false
  ): Boolean

  """

  """
  uploadApplicationData(data: AppIn!): ApplicationOut

  """

  """
  uploadProcessData(data: ProcessIn!): ProcessOut

  """

  """
  addIssueTracker(
    name: String!
    url: String!
    username: String!
    password: String!
    tenantId: String!
    certificate: String
    privateKey: String
  ): IssueTracker

  """

  """
  createDeployment(data: DeployMetricsIn): DeployMetrics

  """

  """
  createDeployments(data: [DeployMetricsIn]): [DeployMetrics]

  """

  """
  uploadPullRequests(data: PullRequestDataIn!): Boolean

  """

  """
  uploadCommits(data: CommitDataIn!): Boolean

  """

  """
  upsertVSMRelease(release: VSMReleasesDocumentInput!): VSMReleasesDocument!

  """

  """
  updateWorkflow(workflowId: ID!, workflow: JSON!): WorkflowUploadResult!

  """

  """
  aggregateMetricsToPipelines(
    filters: PipelineFilter!
    aggregationOptions: AggregationOptions
    userIdForFavorites: ID
  ): PipelinesWithMetricsRes!

  """

  """
  createValueStream(
    name: String!
    description: String
    tenantId: ID!
    team: TeamInput!
    workflow: JSON
  ): WorkflowUploadResult!

  """

  """
  updateMetricsBar(
    workflowId: ID!
    metrics: [MetricFilterInput]
    chartables: [ChartableInput]
  ): [ChartableMetric]

  """

  """
  deleteValueStream(tenantId: ID!, pipelineId: ID!): Boolean

  """

  """
  editValueStream(
    pipelineId: ID!
    pipelineName: String
    pipelineDesc: String
    team: TeamInput
  ): Boolean

  """

  """
  updateWorkflowLayout(
    workflowId: ID!
    layoutData: [StageLayoutInput!]!
  ): Boolean!

  """

  """
  uploadIssueData(data: IssueDataIn!): IssueUploadOutput

  """

  """
  updateIssues(issues: [IssueUpdates], tenantId: ID!): [ID!]

  """

  """
  uploadBuildData(data: BuildDataIn!): BuildData

  """

  """
  uploadBuildDataBulk(data: [BuildDataIn!]!): [BuildData]

  """

  """
  uploadManualVersion(data: VersionDataIn!): VersionData

  """

  """
  uploadCompositeVersion(data: CompositeVersionDataIn!): VersionData

  """

  """
  uploadMetrics(data: MetricsIn!): MetricsOut

  """

  """
  uploadMetricsFile(data: MetricsFileUploadIn!, fileMeta: JSON!): Response!

  """

  """
  removeCustomMetrics(data: MetricsDeletionInput): DeletionResponse

  """

  """
  createMetricDefinition(input: CreateMetricDefinitionIn!): MetricDefinition!

  """

  """
  updateMetricDefinition(input: UpdateMetricDefinitionIn!): MetricDefinition

  """

  """
  removeMetricDefinition(input: RemoveMetricDefinitionIn!): MetricDefinition

  """

  """
  createReportArtifact(input: ReportArtifactIn!): ReportArtifact

  """

  """
  uploadReportZip(
    file: Upload!
    name: String!
    description: String
    teamId: ID!
    tenantId: ID
    active: Boolean
    deleted: Boolean
    createdBy: String
    createdAt: Date
    lastModifiedAt: Date
    lastModifiedBy: String
  ): Report_RE

  """

  """
  uploadReportExecution(file: Upload!, reportExecutionId: ID!): Boolean

  """

  """
  createDashboard(input: CreateDashboardIn!): Dashboard!

  """

  """
  updateDashboard(input: UpdateDashboardIn!): Dashboard

  """

  """
  removeDashboard(input: RemoveDashboardIn!): Dashboard

  """

  """
  createChartable(input: CreateChartableIn!): Chartable!

  """

  """
  updateChartable(input: UpdateChartableIn!): Chartable

  """

  """
  deleteChartable(_id: ID!): Chartable

  """

  """
  addManualVersionSignOffRule(
    input: ManualVersionSignOffIn!
  ): ManualVersionSignOff!

  """

  """
  addAutomatedMetricRule(
    input: AutomatedMetricCriterionIn!
  ): AutomatedMetricCriterion

  """

  """
  addComplianceRule(input: ComplianceRuleIn!): ComplianceRule

  """

  """
  upsertPipelineGate(
    pipelineId: ID!
    stageId: ID!
    ruleIds: [ID!]!
    manualGateNotification: Boolean!
  ): PipelineGate

  """

  """
  deletePipelineGates(pipelineId: ID!, stageId: ID): Boolean

  """

  """
  addManualVersionSignOffExecutions(
    pipelineId: ID!
    input: [ManualVersionSignOffExecutionIn!]!
  ): [ManualVersionSignOffExecution]

  """

  """
  addManualOverrideExecution(
    input: ManualOverrideExecutionIn!
  ): ManualOverrideExecution

  """

  """
  addStatusRule(input: StatusRuleIn!): StatusRule

  """

  """
  updateRuleName(ruleId: ID!, pipelineId: ID!, name: String!): Rule

  """

  """
  uploadExecutions(executions: [ExecutionInput]!): [UploadExecutionOutput]

  """

  """
  bulkDataRemovalByIntegration(integrationId: String!): Boolean

  """

  """
  addExtConfigFileVersions(input: ExtConfigFileInput!): Boolean!

  """

  """
  updateExtConfigFileExecutions(
    fileId: String!
    executionId: String
    tenantId: String!
    input: ExtConfigFileExecutionInput!
  ): [ExtConfigFileExecutionResponse!]

  """

  """
  migrateLegacyJenkinsEventData(
    sourceIntegrationId: ID!
    targetIntegration: JenkinsMigrateEventIntegration!
    externalProcessIds: [String]!
    tenantId: ID!
    pageSize: Int!
    dryRun: Boolean! = false
  ): Boolean

  """

  """
  upsertSolutionVersion(
    id: ID
    name: String!
    description: String
    published: Int
    inventory: [SolutionVersionInventoryIn!]!
    pipelineId: ID
    stageId: ID
  ): SolutionVersionDataOut

  """

  """
  deleteSolutionVersion(id: ID!): Boolean

  """

  """
  publishSolutionVersion(id: ID!): Boolean
}

"""

"""
input teamInput {
  """

  """
  id: String!

  """

  """
  tenantId: String!

  """

  """
  name: String!
}

"""

"""
input templateInput {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  teamId: String

  """

  """
  properties: [propertyInput]

  """

  """
  pipelineId: String

  """

  """
  pipelineName: String
}

"""

"""
input propertyInput {
  """

  """
  name: String!

  """

  """
  type: PropertyType!

  """

  """
  label: String

  """

  """
  defaultValue: String

  """

  """
  value: String

  """

  """
  possibleValues: [String]

  """

  """
  promptOnCreate: Boolean!
}

"""

"""
input regularTagInput {
  """

  """
  name: String!

  """

  """
  orgId: String!
}

"""

"""
enum ReleaseTagColor {
  """

  """
  AQUA

  """

  """
  BLUE

  """

  """
  GREEN

  """

  """
  PINK

  """

  """
  PURPLE

  """

  """
  RED

  """

  """
  YELLOW
}

"""

"""
enum ReleaseTagCategory {
  """

  """
  EVENT

  """

  """
  BLACKOUT

  """

  """
  HOLIDAY

  """

  """
  MILESTONE
}

"""

"""
enum ReleaseTagShape {
  """

  """
  HAT

  """

  """
  RING

  """

  """
  SOLID
}

"""

"""
type ReleaseCalendarTag implements ReleaseTag {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  orgId: String!

  """

  """
  state: ReleaseTagState!

  """

  """
  category: ReleaseTagCategory!

  """

  """
  color: ReleaseTagColor!

  """

  """
  shape: ReleaseTagShape!

  """

  """
  priority: Int!
}

"""

"""
input calendarTagPriorityInput {
  """

  """
  _id: ID!

  """

  """
  priority: Int!
}

"""

"""
enum ArchiveDeploymentStatus {
  """

  """
  DONE

  """

  """
  ALL
}

"""

"""
input ExtraPropertiesInput {
  """

  """
  runAnother: RunAnotherInput

  """

  """
  approval: ApprovalInput

  """

  """
  delayed: DelayedInput

  """

  """
  note: NoteInput

  """

  """
  other: Any
}

"""

"""
input RunAnotherInput {
  """

  """
  runAnotherPlanTagName: String
}

"""

"""
input ApprovalInput {
  """

  """
  description: String

  """

  """
  executionPattern: String

  """

  """
  groupsAndUsers: [groupAndUserInput]

  """

  """
  owner: groupAndUserInput

  """

  """
  emailGroupsAndUsers: [groupAndUserInput]

  """

  """
  approvers: [groupAndUserInput]

  """

  """
  allMustApprove: Boolean
}

"""

"""
input groupAndUserInput {
  """

  """
  label: String

  """

  """
  value: String!

  """

  """
  isGroup: Boolean

  """

  """
  tenantId: String
}

"""

"""
input DelayedInput {
  """

  """
  scheduledEndTime: Int

  """

  """
  timeZone: TimeZone

  """

  """
  delayInMinutes: Int

  """

  """
  delayType: String
}

"""
TimeZone as specified by the IANA (Internet Assigned Numbers Authority) TimeZone Database.
"""
scalar TimeZone

"""

"""
input NoteInput {
  """

  """
  description: String

  """

  """
  executionPattern: String

  """

  """
  groupsAndUsers: [groupAndUserInput]

  """

  """
  owner: groupAndUserInput

  """

  """
  emailGroupsAndUsers: [groupAndUserInput]

  """

  """
  approvers: [groupAndUserInput]

  """

  """
  allMustApprove: Boolean
}

"""

"""
scalar Any

"""

"""
type ImportEventsConnection {
  """

  """
  nodes: [Release]

  """

  """
  report: UploadReport

  """

  """
  tags: [ReleaseTag]

  """

  """
  pageInfo: ReleasesCursor!
}

"""

"""
union Release = ReleaseEvent | Error

"""

"""
input ReleaseIssueTrackerInput {
  """

  """
  _id: ID!

  """

  """
  mapping: [[releaseIssueMappingInput]]
}

"""

"""
input releaseIssueMappingInput {
  """

  """
  projectId: String!

  """

  """
  field: String!

  """

  """
  value: String!
}

"""

"""
type IssueUrlTestResult {
  """

  """
  _id: ID

  """

  """
  systemType: String

  """

  """
  issueCount: Int

  """

  """
  mapping: [[releaseIssueMapping]]

  """

  """
  possibleCustomPropertyValues: [NameValuePair]
}

"""

"""
type NameValuePair {
  """

  """
  name: String

  """

  """
  value: String
}

"""

"""
input SmtpSettingsInput {
  """

  """
  server: String!

  """

  """
  port: Int!

  """

  """
  secure: Boolean

  """

  """
  username: String

  """

  """
  password: String

  """

  """
  sendername: String

  """

  """
  address: String
}

"""

"""
input JenkinsMigrateAppIntegration {
  """

  """
  id: ID!

  """

  """
  name: String!

  """

  """
  url: String!
}

"""

"""
input UploadAgentInput {
  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  active: Boolean!

  """

  """
  licensed: Boolean!

  """

  """
  licenseType: String!

  """

  """
  status: String!

  """

  """
  version: String!

  """

  """
  type: String!

  """

  """
  integration_id: String

  """

  """
  json_data: JSON
}

"""

"""
input UpdateApplicationInput {
  """

  """
  active: Boolean

  """

  """
  createdAdHoc: Boolean

  """

  """
  external_id: ID

  """

  """
  json_data: JSON

  """

  """
  type: String

  """

  """
  level: APPLICATION_LEVEL
}

"""

"""
input UploadApplicationInput {
  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  integration_id: ID

  """

  """
  name: String!

  """

  """
  createdAdHoc: Boolean

  """

  """
  active: Boolean!

  """

  """
  json_data: JSON

  """

  """
  type: String!

  """

  """
  tags: [String]

  """

  """
  childrenIds: [String]

  """

  """
  level: APPLICATION_LEVEL = parent
}

"""

"""
input UploadEnvironmentInput {
  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  external_app_id: ID

  """

  """
  active: Boolean!

  """

  """
  json_data: JSON! = "{}"

  """

  """
  type: String!

  """

  """
  inventory: InventoryInput
}

"""

"""
input InventoryInput {
  """

  """
  external_version_id: ID!

  """

  """
  components: [ComponentInventoryInput]
}

"""

"""
input ComponentInventoryInput {
  """

  """
  external_component_id: ID!

  """

  """
  external_component_version_id: ID!
}

"""

"""
input StoreExecutionInput {
  """

  """
  external_id: ID!

  """

  """
  external_app_id: ID

  """

  """
  external_process_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  status: String!

  """

  """
  parameters: [ExecParameterInput!]

  """

  """
  json_data: JSON

  """

  """
  type: String!
}

"""

"""
input ExecParameterInput {
  """

  """
  name: String!

  """

  """
  value: String!
}

"""

"""
type ExecutionData {
  """

  """
  _id: ID!

  """

  """
  id: ID

  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  process_id: ID

  """

  """
  status: String!

  """

  """
  parameters: [ExecParameterData]

  """

  """
  json_data: JSON

  """

  """
  type: String!

  """

  """
  version: Date!
}

"""

"""
type ExecParameterData {
  """

  """
  name: String!

  """

  """
  value: String!
}

"""

"""
input UploadProcessInput {
  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  external_app_id: ID

  """

  """
  url: String

  """

  """
  active: Boolean

  """

  """
  json_data: JSON

  """

  """
  parameters: [ProcessParameterInput!]

  """

  """
  instanceName: String

  """

  """
  integrationId: ID

  """

  """
  fullName: String

  """

  """
  type: String!
}

"""

"""
input ProcessParameterInput {
  """

  """
  name: String!

  """

  """
  type: PROCESS_PARAMETER_TYPE!

  """

  """
  description: String

  """

  """
  defaultValue: StringOrBoolean

  """

  """
  options: [String!]
}

"""

"""
type ProcessData {
  """

  """
  _id: ID!

  """

  """
  id: ID

  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  process_id: ID

  """

  """
  app_id: ID

  """

  """
  external_app_id: ID

  """

  """
  url: String

  """

  """
  instanceName: String

  """

  """
  fullName: String

  """

  """
  active: Boolean

  """

  """
  parameters: [ProcessParameterData]

  """

  """
  json_data: JSON

  """

  """
  type: String!

  """

  """
  version: Date!
}

"""

"""
input UploadVersionInput {
  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  external_app_id: ID

  """

  """
  created: Date!

  """

  """
  active: Boolean

  """

  """
  json_data: JSON

  """

  """
  type: String!
}

"""

"""
type AppVersionData {
  """

  """
  _id: ID!

  """

  """
  id: ID

  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  app_id: ID!

  """

  """
  external_app_id: ID!

  """

  """
  created: Date!

  """

  """
  active: Boolean

  """

  """
  json_data: JSON

  """

  """
  type: String!

  """

  """
  version: Date!
}

"""

"""
input UploadStatusInput {
  """

  """
  external_id: ID!

  """

  """
  tenant_id: ID!

  """

  """
  name: String!

  """

  """
  integration_id: ID

  """

  """
  sync_id: ID!

  """

  """
  deleted: Boolean

  """

  """
  json_data: JSON

  """

  """
  type: String!
}

"""

"""
input UploadInventoryInput {
  """

  """
  tenant_id: ID!

  """

  """
  external_environment_id: ID!

  """

  """
  inventory: InventoryInput
}

"""

"""
input UserSettingsIn {
  """

  """
  favoriteVSMs: [FavoriteVSMIn!]

  """

  """
  favoriteDashboards: [ID!]

  """

  """
  activeVSMFilters: [VSMFiltersIn!]

  """

  """
  currentVSMViews: [VSMViewIn!]

  """

  """
  recentlyAccessedVSMs: [ID!]

  """

  """
  recentlyAccessedReleases: [ID!]

  """

  """
  leftNavCollapsed: Boolean
}

"""

"""
input FavoriteVSMIn {
  """

  """
  workflowId: ID!

  """

  """
  pipelineId: ID!
}

"""

"""
input VSMFiltersIn {
  """

  """
  workflowId: ID!

  """

  """
  priorities: [String!]

  """

  """
  types: [String!]

  """

  """
  sprints: [String!]

  """

  """
  releases: [String!]

  """

  """
  relativeTime: [String!]
}

"""

"""
input VSMViewIn {
  """

  """
  workflowId: ID!

  """

  """
  particleView: VSMViewMode

  """

  """
  swimlaneRowView: SwimlaneRowViewMode

  """

  """
  swimlaneCollapsedPhases: [String!]

  """

  """
  swimlanePinnedRowsByViews: [SwimlanePinnedRowsByViewIn!]

  """

  """
  valueStreamCollapsedPhases: [String!]

  """

  """
  valueStreamCollapsedMetrics: [String!]
}

"""

"""
input SwimlanePinnedRowsByViewIn {
  """

  """
  rowView: SwimlaneRowViewMode

  """

  """
  pinnedRows: [String!]
}

"""

"""
type AccountLockoutSettings {
  """

  """
  tenantId: ID!

  """

  """
  userLockoutAttempts: Int!

  """

  """
  userLockoutHours: Int!
}

"""

"""
type SessionExpirationSetting {
  """

  """
  tenantId: ID!

  """

  """
  sessionExpirationMinutes: Int!
}

"""

"""
input FeatureFlagIn {
  """

  """
  publicName: String!

  """

  """
  value: Boolean
}

"""

"""
type AccessKey {
  """

  """
  id: String!

  """

  """
  created: Date!

  """

  """
  accessKey: String!

  """

  """
  name: String!

  """

  """
  lastUsed: Date
}

"""

"""
type SecurityRoleUsersAndGroupsConnection {
  """

  """
  userNodes: [SecurityUser]!

  """

  """
  groupNodes: [Group]!
}

"""

"""
type MutationResult {
  """

  """
  success: Boolean!

  """

  """
  reason: String
}

"""

"""
input LicenseServerConfigInput {
  """

  """
  url: String!

  """

  """
  serverId: String

  """

  """
  mhsLeaseFeature: String

  """

  """
  proxyPort: String

  """

  """
  proxyUrl: String

  """

  """
  proxyUsername: String

  """

  """
  proxyPassword: String
}

"""

"""
input VersionParameterInput {
  """

  """
  name: String!

  """

  """
  value: String!
}

"""

"""
input AppVersionInput {
  """

  """
  appId: String!

  """

  """
  versionIds: [String]!
}

"""

"""
input ApplicationsInput {
  """

  """
  appId: String

  """

  """
  appName: String

  """

  """
  versionName: String

  """

  """
  versionId: String
}

"""

"""
input AppInput {
  """

  """
  appId: String!

  """

  """
  appName: String!

  """

  """
  versionName: String!

  """

  """
  versionId: String!
}

"""

"""
input TeamInput {
  """

  """
  id: String!

  """

  """
  name: String!
}

"""

"""
input ProcessInput {
  """

  """
  id: ID!

  """

  """
  name: String!

  """

  """
  app_id: ID!

  """

  """
  integrationId: ID
}

"""

"""
input EnvInput {
  """

  """
  id: ID!

  """

  """
  name: String!

  """

  """
  app_id: ID!

  """

  """
  app_type: String!

  """

  """
  parameters: [ParameterInput]

  """

  """
  sub_app_id: ID

  """

  """
  sub_app_type: String

  """

  """
  process: ProcessInput

  """

  """
  integration: PipelineIntegrationInput

  """

  """
  stageContext: EnvStageContextInput
}

"""

"""
input ParameterInput {
  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  value: String

  """

  """
  defaultValue: String

  """

  """
  description: String

  """

  """
  options: [String]
}

"""

"""
input EnvStageContextInput {
  """

  """
  versionParameter: String!

  """

  """
  envFilter: StageEnvFilterInput
}

"""

"""
input StageEnvFilterInput {
  """

  """
  paramName: String

  """

  """
  paramValues: [String]
}

"""

"""
input ManifestVersionInput {
  """

  """
  applicationId: ID

  """

  """
  applicationName: String

  """

  """
  versionIds: [String]

  """

  """
  versionNames: [String]

  """

  """
  jenkinsAppId: ID

  """

  """
  jenkinsAppName: String

  """

  """
  jenkinsJobId: ID

  """

  """
  jenkinsJobName: String

  """

  """
  envId: ID

  """

  """
  jenkinsVersionId: ID

  """

  """
  jenkinsVersionName: String
}

"""

"""
type ScheduleDeploymentPlan {
  """

  """
  releaseId: ID!

  """

  """
  planId: ID!
}

"""

"""
input StageInput {
  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  description: String

  """

  """
  planId: ID

  """

  """
  triggers: [TriggerInput]

  """

  """
  gates: [GateInput]

  """

  """
  deploymentModes: [String]

  """

  """
  defaultDeploymentMode: String

  """

  """
  groupsAndUsers: [String]
}

"""

"""
input TriggerInput {
  """

  """
  _id: ID!

  """

  """
  name: String!
}

"""

"""
input GateInput {
  """

  """
  _id: ID!

  """

  """
  name: String!
}

"""

"""
input UpdateStageInput {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  description: String

  """

  """
  planId: ID

  """

  """
  triggers: [TriggerInput]

  """

  """
  gates: [GateInput]

  """

  """
  promoteTo: [String]

  """

  """
  latestAutopromotionStatus: String

  """

  """
  deploymentModes: [String]

  """

  """
  defaultDeploymentMode: String

  """

  """
  groupsAndUsers: [String]
}

"""

"""
input UCDProxyInput {
  """

  """
  ucdProxyUrl: String

  """

  """
  ucdProxyUser: String

  """

  """
  ucdProxyPassword: String
}

"""

"""
enum EDIT_INTEGRATIONS_OPERATION {
  """

  """
  ENABLE

  """

  """
  DISABLE
}

"""

"""
input AddIntegrationInput {
  """

  """
  name: String!

  """

  """
  loggingLevel: LOGGING_LEVEL! = INFO

  """

  """
  userAccessKey: String

  """

  """
  showHidden: Boolean! = false

  """

  """
  displayName: String!

  """

  """
  deltaTime: String

  """

  """
  type: String!

  """

  """
  tenantId: ID!

  """

  """
  properties: JSON

  """

  """
  image: String

  """

  """
  enabled: Boolean = true
}

"""

"""
input EditIntegrationInput {
  """

  """
  name: String

  """

  """
  loggingLevel: LOGGING_LEVEL

  """

  """
  userAccessKey: String

  """

  """
  showHidden: Boolean

  """

  """
  displayName: String

  """

  """
  type: String

  """

  """
  tenantId: ID!

  """

  """
  properties: JSON

  """

  """
  cleanupOnDelete: Boolean

  """

  """
  status: String
}

"""

"""
scalar SemVer

"""

"""
input ScheduledEventStateInput {
  """

  """
  eventName: String!

  """

  """
  deltaTime: Date!
}

"""

"""
input AppIn {
  """

  """
  tenant_id: String!

  """

  """
  external_id: String

  """

  """
  external_job_id: String

  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  active: Boolean!

  """

  """
  json_data: JSON

  """

  """
  tags: [String]
}

"""

"""
input ProcessIn {
  """

  """
  tenant_id: String!

  """

  """
  external_id: String!

  """

  """
  external_app_id: String

  """

  """
  app_id: String

  """

  """
  name: String!

  """

  """
  type: String!

  """

  """
  active: Boolean

  """

  """
  json_data: JSON
}

"""

"""
input DeployMetricsIn {
  """

  """
  id_external: String!

  """

  """
  tenant_id: String!

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  tags: [String]

  """

  """
  version_id_external: String

  """

  """
  version_name: String

  """

  """
  application: DeployApplicationIn!

  """

  """
  type: String!

  """

  """
  result: String!

  """

  """
  start_time: Date!

  """

  """
  end_time: Date!

  """

  """
  environment_id: String!

  """

  """
  environment_name: String!

  """

  """
  by_user: String

  """

  """
  url: String

  """

  """
  steps: [DeployStepInput]

  """

  """
  json: JSON

  """

  """
  deploymentType: DEPLOYMENT_TYPE
}

"""

"""
input DeployApplicationIn {
  """

  """
  id: String

  """

  """
  name: String

  """

  """
  external_id: String
}

"""

"""
input DeployStepInput {
  """

  """
  name: String

  """

  """
  status: String

  """

  """
  message: String

  """

  """
  isFatal: Boolean
}

"""

"""
input PullRequestDataIn {
  """

  """
  source: String!

  """

  """
  repositoryId: ID!

  """

  """
  repositoryName: String!

  """

  """
  repositoryOwner: String!

  """

  """
  repositoryUrl: String!

  """

  """
  tenantId: ID!

  """

  """
  pullRequests: [PullRequestDataItemIn]
}

"""

"""
input PullRequestDataItemIn {
  """

  """
  id: String!

  """

  """
  number: Int!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  url: String!

  """

  """
  status: String!

  """

  """
  commitId: String!

  """

  """
  creator: String!

  """

  """
  branch: String!

  """

  """
  baseBranch: String!

  """

  """
  created: Date!

  """

  """
  lastUpdate: Date!

  """

  """
  merged: Date

  """

  """
  labels: [String]

  """

  """
  reviewers: [String]

  """

  """
  assignees: [String]

  """

  """
  comments: [PrCommentIn] = []

  """

  """
  reviews: [PrReviewIn] = []

  """

  """
  history: [PrHistoryIn] = []

  """

  """
  rawPullRequest: JSON

  """

  """
  draft: Boolean
}

"""

"""
input PrCommentIn {
  """

  """
  id: ID!

  """

  """
  user: String!

  """

  """
  created: Date!

  """

  """
  updated: Date!

  """

  """
  comment: String!

  """

  """
  url: String!
}

"""

"""
input PrReviewIn {
  """

  """
  id: ID!

  """

  """
  body: String!

  """

  """
  commit_id: String!

  """

  """
  status: String!

  """

  """
  user: String!
}

"""

"""
input PrHistoryIn {
  """

  """
  event: PullRequestHistoryEvent

  """

  """
  type: PullRequestHistoryType

  """

  """
  source: String

  """

  """
  timestamp: Date

  """

  """
  content: PrHistoryContentIn
}

"""

"""
enum PullRequestHistoryEvent {
  """

  """
  COMMIT

  """

  """
  CREATE

  """

  """
  UPDATE
}

"""

"""
enum PullRequestHistoryType {
  """

  """
  PR

  """

  """
  COMMIT
}

"""

"""
input PrHistoryContentIn {
  """

  """
  field: String

  """

  """
  type: PullRequestHistoryContentType

  """

  """
  from: JSON

  """

  """
  to: JSON

  """

  """
  user: String

  """

  """
  userDisplayName: String

  """
  commit history fields
  """
  sha: String

  """

  """
  url: String

  """

  """
  committer: String

  """

  """
  message: String

  """

  """
  isDefaultBranch: Boolean
}

"""

"""
enum PullRequestHistoryContentType {
  """

  """
  integer

  """

  """
  string

  """

  """
  stringArray

  """

  """
  objectArray
}

"""

"""
input CommitDataIn {
  """

  """
  source: String!

  """

  """
  repositoryId: String!

  """

  """
  repositoryName: String!

  """

  """
  repositoryOwner: String!

  """

  """
  repositoryUrl: String!

  """

  """
  tenantId: String!

  """

  """
  commits: [CommitDataItemIn!]
}

"""

"""
input CommitDataItemIn {
  """

  """
  id: String!

  """

  """
  name: String!

  """

  """
  url: String!

  """

  """
  creator: String!

  """

  """
  parents: [String]!

  """

  """
  created: Date

  """

  """
  committer: String!

  """

  """
  isDefaultBranch: Boolean!

  """

  """
  rawCommit: JSON
}

"""

"""
input VSMReleasesDocumentInput {
  """

  """
  id: String

  """

  """
  projectId: String

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  archived: Boolean

  """

  """
  released: Boolean

  """

  """
  releaseDate: Date

  """

  """
  tenantId: String

  """

  """
  integrationIds: [String]

  """

  """
  summary: String

  """

  """
  lastSummaryOn: Date
}

"""

"""
union WorkflowUploadResult = Workflow | WorkflowUploadError

"""

"""
type WorkflowUploadError {
  """

  """
  errors: [String!]!
}

"""

"""
input PipelineFilter {
  """

  """
  tenantId: ID

  """

  """
  metric: MetricFilterInput

  """

  """
  chartable: ChartableInput

  """

  """
  delete: Int
}

"""

"""
input MetricFilterInput {
  """

  """
  compliancePolicy: COMPLIANCE_APP_POLICY_TYPES

  """

  """
  relativeTime: PIPELINE_RELATIVE_TIME!

  """

  """
  index: Int!

  """

  """
  metricDefinitionId: String!

  """

  """
  aggregationInterval: PIPELINE_AGGREGATION_INTERVAL!

  """

  """
  name: String

  """

  """
  displayType: DISPLAY_TYPE!

  """

  """
  calculationType: CALCULATION_TYPE!

  """

  """
  filters: [MetricsFilter]
}

"""

"""
input MetricsFilter {
  """

  """
  name: String

  """

  """
  id: String!

  """

  """
  values: [String]

  """

  """
  selected: [String]
}

"""

"""
input ChartableInput {
  """

  """
  _id: ID!

  """

  """
  index: Int!

  """

  """
  name: String

  """

  """
  variables: [ChartableVariableIn!]

  """

  """
  layout: JSON

  """

  """
  overlays: [ChartableInput!]

  """

  """
  filters: ChartableFiltersIn
}

"""

"""
input ChartableVariableIn {
  """

  """
  name: String!

  """

  """
  value: JSON!
}

"""

"""
input StageLayoutInput {
  """

  """
  identifier: String!

  """

  """
  phaseIndex: Int!

  """

  """
  targetX: Int!

  """

  """
  targetY: Int!
}

"""

"""
input IssueDataIn {
  """

  """
  source: String!

  """

  """
  trackerId: ID!

  """

  """
  tenantId: ID!

  """

  """
  baseUrl: String

  """

  """
  issues: [IssueDataItemIn!]
}

"""

"""
input IssueDataItemIn {
  """

  """
  _id: String!

  """

  """
  id: String!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  status: String!

  """

  """
  url: String!

  """

  """
  creator: String!

  """

  """
  owner: String

  """

  """
  created: Date!

  """

  """
  lastUpdate: Date!

  """

  """
  type: String!

  """

  """
  normalizedType: IssueNormalizedType

  """

  """
  priority: String

  """

  """
  versionIds: [String!]

  """

  """
  components: [String!]

  """

  """
  labels: [String!]

  """

  """
  storyPoints: Float

  """

  """
  comments: [IssueCommentIn!] = []

  """

  """
  history: [IssueHistoryIn!] = []

  """

  """
  releases: [IssueReleaseIn!] = []

  """

  """
  sprints: [IssueSprintIn!] = []

  """

  """
  project: IssueProjectIn

  """

  """
  epic: String

  """

  """
  rawIssue: JSON

  """

  """
  relations: [IssueRelationIn!]

  """
  When the issue was marked as resolved in the tool it comes from
  """
  resolved: Date

  """
  measurement of how critical this issue is
  """
  severity: IssueSeverity

  """
  measurement of how widespread this issue is
  """
  impact: IssueImpact

  """
  text describing what the resolution was
  """
  resolution: String

  """
  business value attached to the issue as represented in the originating tool
  """
  businessValue: Float

  """
  additional information to show in VSM dot details
  """
  additionalInfo: JSON
}

"""

"""
input IssueCommentIn {
  """

  """
  id: String

  """

  """
  user: String

  """

  """
  created: Date

  """

  """
  updated: Date

  """

  """
  comment: String
}

"""

"""
input IssueHistoryIn {
  """

  """
  timestamp: Date

  """

  """
  content: IssueHistoryContentIn
}

"""

"""
input IssueHistoryContentIn {
  """

  """
  field: String

  """

  """
  type: IssueHistoryType

  """

  """
  from: JSON

  """

  """
  to: JSON

  """

  """
  user: String

  """

  """
  userDisplayName: String
}

"""

"""
enum IssueHistoryType {
  """

  """
  integer

  """

  """
  string

  """

  """
  stringArray

  """

  """
  objectArray
}

"""

"""
input IssueReleaseIn {
  """

  """
  id: String

  """

  """
  description: String

  """

  """
  name: String

  """

  """
  archived: Boolean

  """

  """
  released: Boolean

  """

  """
  releaseDate: Date
}

"""

"""
input IssueSprintIn {
  """

  """
  id: String!

  """

  """
  name: String!

  """

  """
  previous: String

  """

  """
  description: String

  """

  """
  startTime: Date

  """

  """
  endTime: Date

  """

  """
  completeTime: Date

  """

  """
  url: String

  """

  """
  active: Boolean
}

"""

"""
input IssueProjectIn {
  """

  """
  id: String

  """

  """
  key: String

  """

  """
  name: String
}

"""

"""
input IssueRelationIn {
  """
  The external tool's main API ID for the issue
  """
  id: ID!

  """
  The kind of relationship between the current issue and the other
  """
  type: RelationType!
}

"""
*********************************************************************
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2021. All Rights Reserved.
**********************************************************************
 import "../issueData/issueDataSchema.graphql"
 we can add more relations as needed
"""
enum RelationType {
  """

  """
  PARENT

  """

  """
  CHILD

  """

  """
  RELATED
}

"""

"""
type IssueUploadOutput {
  """

  """
  result: Boolean

  """

  """
  issueIds: [ID]
}

"""

"""
input IssueUpdates {
  """

  """
  externalId: String!

  """

  """
  updates: IssueFieldUpdates!
}

"""

"""
input IssueFieldUpdates {
  """

  """
  businessValue: Float
}

"""

"""
input BuildDataIn {
  """

  """
  id: String!

  """

  """
  tenantId: ID!

  """

  """
  name: String!

  """

  """
  versionName: String

  """

  """
  status: BUILD_STATUS!

  """

  """
  application: ApplicationIn!

  """

  """
  url: String!

  """

  """
  startTime: Date!

  """

  """
  endTime: Date

  """

  """
  requestor: String!

  """

  """
  revision: String

  """

  """
  number: Int

  """

  """
  labels: [String]

  """

  """
  source: String

  """

  """
  branch: String

  """

  """
  parameters: [BuildParamIn]

  """

  """
  steps: [BuildStepInput]

  """

  """
  history: [BuildHistoryEntryInput]

  """

  """
  teams: [BuildTeamInput]
}

"""
*********************************************************************
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2020. All Rights Reserved.
**********************************************************************
"""
enum BUILD_STATUS {
  """

  """
  start

  """

  """
  in_progress

  """

  """
  success

  """

  """
  failure

  """

  """
  unstable
}

"""

"""
input ApplicationIn {
  """

  """
  id: String

  """

  """
  external_id: ID

  """

  """
  externalId: ID

  """

  """
  name: String

  """

  """
  active: Boolean

  """

  """
  type: String

  """

  """
  integration_id: String
}

"""

"""
input BuildParamIn {
  """

  """
  name: String!

  """

  """
  value: String!

  """

  """
  source: String
}

"""

"""
input BuildStepInput {
  """

  """
  name: String

  """

  """
  status: String

  """

  """
  message: String

  """

  """
  isFatal: Boolean
}

"""

"""
input BuildHistoryEntryInput {
  """

  """
  field: String

  """

  """
  from: String

  """

  """
  to: String

  """

  """
  timestamp: Date
}

"""

"""
input BuildTeamInput {
  """

  """
  _id: ID!

  """

  """
  name: String!
}

"""

"""
input VersionDataIn {
  """

  """
  id: String!

  """

  """
  tenantId: ID!

  """

  """
  name: String!

  """

  """
  created: Date!

  """

  """
  appId: String!

  """

  """
  parameters: [VersionDataParameterIn]
}

"""

"""
input VersionDataParameterIn {
  """

  """
  name: String!

  """

  """
  value: String!

  """

  """
  source: String
}

"""

"""
input CompositeVersionDataIn {
  """

  """
  id: String!

  """

  """
  tenantId: ID!

  """

  """
  name: String!

  """

  """
  created: Date!

  """

  """
  source: String

  """

  """
  application: VersionApplicationIn

  """

  """
  parameters: [VersionDataParameterIn]

  """

  """
  url: String!

  """

  """
  children: [ChildVersionDataIn!]

  """

  """
  componentVersions: [ComponentVersionDataIn!]

  """

  """
  statuses: [VersionStatusData!]
}

"""

"""
input VersionApplicationIn {
  """

  """
  id: String

  """

  """
  name: String

  """

  """
  external_id: String
}

"""

"""
input ChildVersionDataIn {
  """

  """
  externalId: String!

  """

  """
  name: String!

  """

  """
  created: Date!

  """

  """
  url: String

  """

  """
  application: VersionApplicationIn
}

"""

"""
input ComponentVersionDataIn {
  """

  """
  externalId: String

  """

  """
  name: String
}

"""

"""
input VersionStatusData {
  """

  """
  id: ID

  """

  """
  name: String!
}

"""

"""
input MetricsIn {
  """
  tenant_id: ID @rename(to: "tenantId")
  """
  tenantId: ID!

  """
  ID of the integration that supplied the data if any
  """
  integrationId: String

  """
  The environment the data was gathered in
  """
  environment: String

  """
  The displayName for the entire set of records
  """
  dataSet: String!

  """
  The application that the metric is associated with.
  Note: If application is not provided workflowId must be provided
  """
  application: ApplicationIn

  """
  The value stream that this metric is associated.
  Note: If workflowId is not provided application must be provided
  """
  workflowId: ID

  """

  """
  build: BuildIn

  """

  """
  record: MetricsRecordIn!

  """

  """
  pullRequestId: String

  """

  """
  commitId: String
}

"""

"""
input BuildIn {
  """

  """
  url: String

  """

  """
  jobExternalId: String

  """

  """
  buildId: String
}

"""

"""
input MetricsRecordIn {
  """

  """
  metricDefinitionName: String

  """

  """
  metricDefinitionId: String

  """
  The visible name of this particular data record, execution specific
  """
  recordName: String

  """
  The MetricsHandler Plugin ID
  """
  pluginType: String!

  """
  The format of the data - usually a vendor file type (e.g. cobertura junitXml)
  """
  dataFormat: String!

  """
  Value dictionary to be normalized. { <TKey> : <TValue> }
  Value is optional but if it is not provided metrics without it will not show
  up in the UI unless a display transform is provided
  """
  value: JSON

  """
  Raw Values for storage - basic metadata coming soon
  """
  entries: [JSON]

  """
  Date of execution - optionally supplied by the plugin
  """
  executionDate: Date

  """

  """
  metricsRecordUrl: String

  """

  """
  metricsRecordId: String

  """

  """
  description: String

  """

  """
  additionalInfo: String
}

"""

"""
input MetricsFileUploadIn {
  """
  tenant_id: ID @rename(to: "tenantId")
  """
  tenantId: ID!

  """
  ID of the integration that supplied the data if any
  """
  integrationId: String

  """
  The environment the data was gathered in
  """
  environment: String

  """
  The displayName for the entire set of records
  """
  dataSet: String

  """
  The application that the metric is associated with.
  Note: If application is not provided workflowId must be provided
  """
  application: ApplicationIn

  """

  """
  build: BuildIn

  """

  """
  record: MetricsFileUploadRecordIn!

  """

  """
  pullRequestId: String

  """

  """
  commitId: String

  """
  Plugin specific options
  """
  options: JSON

  """

  """
  logLevel: METRICS_LOG_LEVEL
}

"""

"""
input MetricsFileUploadRecordIn {
  """
  The name of the metric definition that this metric is connected to.
  Note: either metricDefinitionName or metricDefinitionId must be provided or both
  """
  metricDefinitionName: String

  """
  The ID of the metric definition that this metric is connected to.
  Note: either metricDefinitionName or metricDefinitionId must be provided or both
  """
  metricDefinitionId: String

  """
  The visible name of this particular data record, execution specific
  """
  recordName: String

  """
  The MetricsHandler Plugin ID
  """
  pluginType: String!

  """
  The format of the data - usually a vendor file type (e.g. cobertura junitXml)
  """
  dataFormat: String!

  """
  Raw Values for storage - basic metadata coming soon
  """
  executionDate: Date

  """

  """
  metricsRecordUrl: String

  """

  """
  metricsRecordId: String

  """

  """
  description: String
}

"""

"""
enum METRICS_LOG_LEVEL {
  """

  """
  ALL

  """

  """
  TRACE

  """

  """
  DEBUG

  """

  """
  INFO

  """

  """
  WARN

  """

  """
  ERROR

  """

  """
  FATAL

  """

  """
  OFF
}

"""
*********************************************************************
 Licensed Materials - Property of HCL
 (c) Copyright HCL Technologies Ltd. 2018, 2019. All Rights Reserved.

 Note to U.S. Government Users Restricted Rights:
 Use, duplication or disclosure restricted by GSA ADP Schedule
 Contract with IBM Corp.
**********************************************************************
"""
type Response {
  """

  """
  success: Boolean
}

"""

"""
input MetricsDeletionInput {
  """

  """
  metricDefinition: String!

  """

  """
  tenantId: String!

  """

  """
  workflowId: String

  """

  """
  integrationId: String
}

"""

"""
type DeletionResponse {
  """

  """
  countRemoved: Int
}

"""

"""
input CreateMetricDefinitionIn {
  """

  """
  id: String!

  """

  """
  name: String!

  """

  """
  category: CATEGORY!

  """

  """
  tenantId: String!

  """

  """
  valueType: VALUE_TYPE

  """

  """
  chartDefaults: ChartDefaultsIn

  """

  """
  metricBarDefaults: MetricBarDefaultsIn

  """

  """
  aggregation: AggregationIn

  """

  """
  createdBy: String

  """

  """
  createdAt: String

  """

  """
  description: String

  """

  """
  sortIndex: Int

  """

  """
  integrationId: String

  """

  """
  configs: JSON

  """

  """
  metricType: String
}

"""
 INPUTS
"""
input ChartDefaultsIn {
  """

  """
  groupBy: String

  """

  """
  chartType: CHART_TYPE

  """

  """
  barMode: BAR_MODE

  """

  """
  barNorm: BAR_NORM

  """

  """
  threshold: Float
}

"""

"""
input MetricBarDefaultsIn {
  """

  """
  calculationType: String

  """

  """
  displayType: String
}

"""

"""
input AggregationIn {
  """

  """
  operation: String!

  """

  """
  collapseMultipleDailyRuns: Boolean
}

"""

"""
input UpdateMetricDefinitionIn {
  """

  """
  tenantId: String!

  """

  """
  name: String

  """

  """
  id: String

  """

  """
  updates: UpdateMetricDefinitionUpdates!
}

"""

"""
input UpdateMetricDefinitionUpdates {
  """

  """
  name: String

  """

  """
  category: CATEGORY

  """

  """
  chartDefaults: ChartDefaultsIn

  """

  """
  aggregation: AggregationIn

  """

  """
  createdBy: String

  """

  """
  createdAt: String

  """

  """
  valueType: VALUE_TYPE

  """

  """
  description: String

  """

  """
  configs: JSON

  """

  """
  metricType: String
}

"""

"""
input RemoveMetricDefinitionIn {
  """

  """
  name: String

  """

  """
  id: String

  """

  """
  tenantId: ID!
}

"""

"""
input ReportArtifactIn {
  """

  """
  title: String!

  """

  """
  description: String

  """

  """
  type: String

  """

  """
  icon: String

  """

  """
  resources: ResourcesIn!

  """

  """
  tenantId: String!

  """

  """
  userName: String!
}

"""

"""
input ResourcesIn {
  """

  """
  templates: [JSON]!

  """

  """
  params: JSON!

  """

  """
  query: String
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

"""

"""
type Report_RE {
  """

  """
  file: Upload

  """

  """
  name: String

  """

  """
  description: String

  """

  """
  teamId: ID

  """

  """
  tenantId: ID

  """

  """
  active: Boolean

  """

  """
  deleted: Boolean

  """

  """
  createdBy: String

  """

  """
  createdAt: Date

  """

  """
  lastModifiedAt: Date

  """

  """
  lastModifiedBy: String
}

"""

"""
input CreateDashboardIn {
  """

  """
  id: String!

  """

  """
  title: String!

  """

  """
  icon: String

  """

  """
  description: String

  """

  """
  tenantId: ID!

  """

  """
  charts: [ChartInstanceIn]

  """

  """
  layouts: JSON

  """

  """
  integrationId: String
}

"""

"""
input ChartInstanceIn {
  """

  """
  index: Int!

  """

  """
  id: String!

  """

  """
  metricDefinition: String!

  """

  """
  groupBy: String

  """

  """
  chartType: CHART_TYPE

  """

  """
  barMode: BAR_MODE

  """

  """
  barNorm: BAR_NORM

  """

  """
  threshold: Float

  """

  """
  title: String

  """

  """
  filters: [ChartFilterIn]
}

"""

"""
input ChartFilterIn {
  """

  """
  id: String!

  """

  """
  values: [String]
}

"""

"""
input UpdateDashboardIn {
  """

  """
  id: String!

  """

  """
  title: String

  """

  """
  icon: String

  """

  """
  description: String

  """

  """
  tenantId: ID!

  """

  """
  charts: [ChartInstanceIn!]

  """

  """
  chartables: [ChartableDashboardInstanceIn!]

  """

  """
  filters: DashboardFiltersIn

  """

  """
  layouts: JSON

  """

  """
  integrationId: String
}

"""

"""
input ChartableDashboardInstanceIn {
  """

  """
  index: Int

  """

  """
  id: ID!

  """

  """
  title: String

  """

  """
  filters: ChartableFiltersIn

  """

  """
  metricDefinition: ID!

  """

  """
  chartableId: ID!

  """

  """
  drillDowns: [ChartableDashboardInstanceIn!]
}

"""

"""
input DashboardFiltersIn {
  """

  """
  teams: [String!]

  """

  """
  apps: [ID!]

  """

  """
  vsms: [ID!]

  """

  """
  dateFilter: DateFilterIn!

  """

  """
  groupBy: DashboardGroupByIn
}

"""

"""
input DateFilterIn {
  """

  """
  relativeDate: RELATIVE_DATE_INTERVAL!

  """

  """
  customStart: Date!

  """

  """
  customEnd: Date!
}

"""

"""
input DashboardGroupByIn {
  """

  """
  date: SUMMARIZATION_INTERVAL
}

"""

"""
input RemoveDashboardIn {
  """

  """
  id: String

  """

  """
  tenantId: ID!
}

"""

"""
input CreateChartableIn {
  """

  """
  name: String!

  """

  """
  metricDefinitionId: String!

  """

  """
  drillDowns: [ID!]

  """

  """
  tenantId: String!

  """

  """
  variables: [ChartableVariableIn!]

  """

  """
  dataPipeline: JSON

  """

  """
  displayPipeline: JSON

  """

  """
  layout: JSON

  """

  """
  isDrillDown: Boolean

  """

  """
  overlays: [ID!]

  """

  """
  filters: ChartableFiltersIn
}

"""

"""
input UpdateChartableIn {
  """

  """
  _id: ID!

  """

  """
  name: String

  """

  """
  tenantId: String!

  """

  """
  metricDefinitionId: String

  """

  """
  drillDowns: [ID!]

  """

  """
  variables: [ChartableVariableIn!]

  """

  """
  dataPipeline: JSON

  """

  """
  displayPipeline: JSON

  """

  """
  layout: JSON

  """

  """
  isDrillDown: Boolean

  """

  """
  overlays: [ID!]

  """

  """
  filters: ChartableFiltersIn
}

"""

"""
input ManualVersionSignOffIn {
  """

  """
  name: String

  """

  """
  pipelineId: ID!

  """

  """
  approvers: [ApproverIn!]!
}

"""

"""
input ApproverIn {
  """

  """
  _id: String!

  """

  """
  name: String!

  """

  """
  type: APPROVER_TYPE = user
}

"""

"""
input AutomatedMetricCriterionIn {
  """

  """
  pipelineId: ID!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  metricDefinition: RuleMetricDefinitionIn

  """

  """
  dataSet: String

  """

  """
  dql: DqlDefinitionIn

  """

  """
  timeRange: TimeRangeIn
}

"""

"""
input RuleMetricDefinitionIn {
  """

  """
  id: String!

  """

  """
  name: String!
}

"""

"""
input DqlDefinitionIn {
  """

  """
  type: String!

  """

  """
  field: String!

  """

  """
  value: Int!
}

"""

"""
input TimeRangeIn {
  """

  """
  type: String

  """

  """
  value: Int
}

"""

"""
input ComplianceRuleIn {
  """

  """
  pipelineId: ID!

  """

  """
  name: String!

  """

  """
  description: String

  """

  """
  resource: String!

  """

  """
  dql: DqlDefinitionIn
}

"""

"""
input ManualVersionSignOffExecutionIn {
  """

  """
  ruleId: ID!

  """

  """
  approver: ApproverIn!

  """

  """
  applicationId: ID!

  """

  """
  versionId: ID!

  """

  """
  action: MANUAL_ACTION!
}

"""

"""
input ManualOverrideExecutionIn {
  """

  """
  pipelineId: ID!

  """

  """
  stageId: ID!

  """

  """
  applicationVersions: [ApplicationVersionIn!]!

  """

  """
  deploymentPlanId: ID

  """

  """
  approver: ApproverIn!
}

"""

"""
type ManualOverrideExecution {
  """

  """
  _id: ID!

  """

  """
  pipelineId: ID!

  """

  """
  stageId: ID!

  """

  """
  applicationVersions: [ApplicationVersion!]!

  """

  """
  deploymentPlanId: ID

  """

  """
  approver: Approver!

  """

  """
  executionDate: Date!

  """

  """
  action: MANUAL_ACTION

  """

  """
  overrides: [Override!]!
}

"""

"""
type Override {
  """

  """
  overrideType: AppVersionOverride
}

"""

"""
type AppVersionOverride {
  """

  """
  applicationId: ID!

  """

  """
  versionId: ID!

  """

  """
  ruleExecutionOverride: RuleExecutionOverride!
}

"""

"""
union RuleExecutionOverride = Rule | RuleExecution

"""

"""
input StatusRuleIn {
  """

  """
  pipelineId: ID!

  """

  """
  name: String!

  """

  """
  status: String!

  """

  """
  description: String
}

"""

"""
input ExecutionInput {
  """

  """
  externalId: ID!

  """

  """
  externalProcessId: ID!

  """

  """
  externalAppId: ID

  """

  """
  name: String!

  """

  """
  tenantId: ID!

  """

  """
  startTime: Date!

  """

  """
  endTime: Date

  """

  """
  type: String!

  """

  """
  url: String

  """

  """
  labels: [String]

  """

  """
  steps: [BuildStepInput]

  """

  """
  status: BUILD_STATUS!

  """

  """
  parameters: [ExecParameterInput!]

  """

  """
  buildData: ExecutionBuildInput

  """

  """
  deployData: ExecutionDeployInput

  """

  """
  jsonData: JSON
}

"""

"""
input ExecutionBuildInput {
  """

  """
  requestor: String!

  """

  """
  versionName: String

  """

  """
  revision: String

  """

  """
  branch: String

  """

  """
  history: [BuildHistoryEntryInput]

  """

  """
  teams: [BuildTeamInput]

  """

  """
  number: Int
}

"""

"""
input ExecutionDeployInput {
  """

  """
  result: DEPLOYMENT_RESULT!

  """

  """
  byUser: String

  """

  """
  description: String
}

"""

"""
enum DEPLOYMENT_RESULT {
  """

  """
  SUCCEEDED

  """

  """
  FAULTED

  """

  """
  CANCELED

  """

  """
  AWAITING_APPROVAL

  """

  """
  NONE
}

"""

"""
union UploadExecutionOutput = DeployMetrics | BuildData | ExecutionData

"""

"""
input ExtConfigFileInput {
  """

  """
  name: String!

  """

  """
  path: String!

  """

  """
  sha: String!

  """

  """
  url: String!

  """

  """
  encoding: String!

  """

  """
  branch: String!

  """

  """
  source: String!

  """

  """
  isActive: Boolean!

  """

  """
  tenantId: String!

  """

  """
  versionData: ExtConfigFileVersionInput!
}

"""

"""
input ExtConfigFileVersionInput {
  """

  """
  externalVersionId: String!

  """

  """
  content: JSON
}

"""

"""
input ExtConfigFileExecutionInput {
  """

  """
  versionId: String!

  """

  """
  externalVersionId: String!

  """

  """
  resourcesCreated: JSON

  """

  """
  status: String!

  """

  """
  logs: String

  """

  """
  timeSpan: Date

  """

  """
  lastApplied: Date
}

"""

"""
input JenkinsMigrateEventIntegration {
  """

  """
  id: ID!

  """

  """
  url: String!
}

"""

"""
input SolutionVersionInventoryIn {
  """

  """
  appName: String!

  """

  """
  appId: ID!

  """

  """
  versionName: String!

  """

  """
  versionId: ID!
}

type Subscription {
  """

  """
  releaseEventAdded(
    tenants: [String]
    teams: [String]
    tags: [ID]
    start: Date
    end: Date
    sortField: ReleaseSortField
    sortOrder: SortOrder
    lastValue: String
    state: [ReleaseState]
    status: [ReleaseStatus]
  ): ReleaseEvent

  """

  """
  releaseEventUpdated(
    _id: ID
    tenants: [String]
    teams: [String]
    tags: [ID]
    start: Date
    end: Date
    sortField: ReleaseSortField
    sortOrder: SortOrder
    lastValue: String
    state: [ReleaseState]
    status: [ReleaseStatus]
  ): ReleaseEvent

  """

  """
  releaseEventDeleted(
    _id: ID
    tenants: [String]
    teams: [String]
    tags: [ID]
    start: Date
    end: Date
    sortField: ReleaseSortField
    sortOrder: SortOrder
    lastValue: String
    state: [ReleaseState]
    status: [ReleaseStatus]
  ): ReleaseEvent

  """

  """
  deploymentPlanAdded(
    eventId: ID
    teams: [String]
    start: Date
    end: Date
    sortField: DeploymentSortField
    sortOrder: SortOrder
    lastValue: String
    state: DeploymentTag
    status: [DeploymentStatus]
  ): DeploymentPlan

  """

  """
  deploymentPlanUpdated(
    eventId: ID
    teams: [String]
    start: Date
    end: Date
    sortField: DeploymentSortField
    sortOrder: SortOrder
    lastValue: String
    state: DeploymentTag
    status: [DeploymentStatus]
  ): DeploymentPlan

  """

  """
  deploymentPlanUpdateRemove(
    deploymentIds: [String]
    eventId: ID
    teams: [String]
    start: Date
    end: Date
    sortField: DeploymentSortField
    sortOrder: SortOrder
    lastValue: String
    state: DeploymentTag
    status: [DeploymentStatus]
  ): DeploymentPlan

  """

  """
  deploymentPlanDeleted(
    deploymentIds: [String]
    eventId: ID
    teams: [String]
    start: Date
    end: Date
    sortField: DeploymentSortField
    sortOrder: SortOrder
    lastValue: String
    state: DeploymentTag
    status: [DeploymentStatus]
  ): DeploymentPlan

  """

  """
  releaseTagAdded(orgId: ID!): ReleaseTag

  """

  """
  releaseTagUpdated(orgId: ID!): ReleaseTag

  """

  """
  releaseTagDeleted(orgId: ID!): ReleaseTag

  """

  """
  releaseEventPlanStatsUpdated(
    _id: ID
    tenants: [String]
    teams: [String]
    tags: [ID]
    start: Date
    end: Date
    sortField: ReleaseSortField
    sortOrder: SortOrder
    lastValue: String
    state: [ReleaseState]
    status: [ReleaseStatus]
  ): ReleaseEvent

  """

  """
  manualAndApprovalTaskAdded(view: String, username: String): Task

  """

  """
  manualAndApprovalTaskUpdated(view: String, username: String): Task

  """

  """
  manualAndApprovalTaskRemoved(view: String, username: String): Task

  """

  """
  pipelineUpdated(pipelineId: ID!): Pipeline

  """

  """
  stageStatusUpdated(stageStatusId: ID!): PipelineApplicationStageStatus

  """

  """
  detailedStageStatusUpdated(
    stageStatusId: ID!
  ): PipelineApplicationStageDetails
}

"""

"""
type ReleaseRegularTag implements ReleaseTag {
  """

  """
  _id: ID!

  """

  """
  name: String!

  """

  """
  state: ReleaseTagState!

  """

  """
  orgId: String!
}

"""

"""
input calendarTagInput {
  """

  """
  name: String!

  """

  """
  orgId: String!

  """

  """
  color: ReleaseTagColor!

  """

  """
  category: ReleaseTagCategory!

  """

  """
  shape: ReleaseTagShape!

  """

  """
  priority: Int!
}

"""

"""
input releaseTagInput {
  """

  """
  _id: String!

  """

  """
  name: String!

  """

  """
  orgId: String!

  """

  """
  state: ReleaseTagState

  """

  """
  category: ReleaseTagCategory

  """

  """
  color: ReleaseTagColor

  """

  """
  shape: ReleaseTagShape

  """

  """
  type: ReleaseTagType

  """

  """
  priority: Int
}

"""

"""
type TeamAction {
  """

  """
  _id: ID!

  """

  """
  actions: [String]
}

"""

"""
input PrCommitIn {
  """

  """
  sha: String!

  """

  """
  url: String!

  """

  """
  committer: String!

  """

  """
  message: String!

  """

  """
  timestamp: Date!
}

"""

"""
enum INSIGHTS_SUMMARIZATION_INTERVAL {
  """

  """
  DAY

  """

  """
  WEEK

  """

  """
  MONTH

  """

  """
  QUARTER

  """

  """
  YEAR
}

"""

"""
enum INSIGHTS_SUMMARIZATION_OPERATION {
  """

  """
  sum

  """

  """
  mean
}

"""

"""
enum WORKFLOW_FILTER_FIELDS {
  """

  """
  type

  """

  """
  priority

  """

  """
  release

  """

  """
  sprint

  """

  """
  relativeTime
}

"""

"""
type ParticleHistory {
  """

  """
  particleId: String

  """

  """
  history: [HistoryEvent]
}

"""

"""
input WorkflowCycleTimeInput {
  """

  """
  start: String

  """

  """
  end: String
}

"""

"""
input WorkflowQuery {
  """

  """
  workflowId: ID!
}

"""
The following types are not part of the main schema
They are DB types only for right now
"""
type RelationItem {
  """
  We need to make sure to update if name ever changes elsewhere
  """
  name: String!

  """
  So we can link relationships across different collections and not just issues
  """
  collection: String!

  """
  the ID of the object in the given collection
  """
  _id: ID!

  """

  """
  id: ID!

  """
  This could also maybe be a normalizedType
  """
  type: String!
}

"""

"""
type Relation {
  """

  """
  related: RelationItem!

  """

  """
  particle: RelationItem!

  """

  """
  type: RelationType!

  """

  """
  integrationId: ID!

  """

  """
  tenantId: ID!
}

"""

"""
type MetricsDefinition {
  """

  """
  name: String

  """

  """
  id: String

  """

  """
  tenantId: String

  """

  """
  messageId: String

  """

  """
  valueType: String

  """

  """
  metricsHandlerId: String

  """

  """
  pluginType: String

  """
   added on the fly
  """
  description: String
}

"""

"""
enum METRICS_GROUP_BY {
  """

  """
  result

  """

  """
  Definition

  """

  """
  valueType

  """

  """
  application
}

"""

"""
input NormalValueIn {
  """

  """
  key: String

  """

  """
  value: Float
}

"""

"""
input DataEntryIn {
  """

  """
  id: String

  """

  """
  name: String!

  """

  """
  message: String

  """

  """
  status: String!

  """

  """
  statusLabel: String

  """

  """
  suite: String

  """

  """
  duration: Int

  """

  """
  details: JSON
}

"""

"""
input ApplicationQuery {
  """

  """
  id: String

  """
  tenant_id: ID @rename(to: "tenantId")
  """
  tenantId: ID!

  """
  external_id: ID @rename(to: "externalId")
  """
  externalId: ID

  """

  """
  name: String

  """

  """
  active: Boolean

  """

  """
  type: String

  """
  integration_id: ID @rename(to: "integrationId")
  """
  integrationId: ID
}

"""

"""
input MetricsQuery {
  """

  """
  _id: String

  """

  """
  appIds: [String]

  """

  """
  tenant_id: String!

  """

  """
  since: Int

  """

  """
  external_id: String

  """

  """
  category: String

  """

  """
  enricherType: String

  """

  """
  application: ApplicationQuery
}

"""

"""
input MetricsSummarizedQuery {
  """
  tenant: ID @rename(to: "tenantId")
  """
  tenantId: ID!

  """

  """
  appId: String

  """

  """
  startDate: Int

  """

  """
  endDate: Int

  """

  """
  metricDefinition: String
}
